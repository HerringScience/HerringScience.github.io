area2=polysT[which(polysT$Box == "Grand Manan"), ]
area3=polysT[which(polysT$Box == "Grand Manan Banks"), ]
area4=polysT[which(polysT$Box == "Long Island"), ]
area5=polysT[which(polysT$Box == "German Bank"), ]
area6=polysT[which(polysT$Box == "Seal Island"), ]
area7=polysT[which(polysT$Box == "Scots Bay"), ]
area8=polysT[which(polysT$Box == "Yankee Bank"), ]
area9=polysT[which(polysT$Box == "Trinity"), ]
area10=polysT[which(polysT$Box == "Browns Bank"), ]
area11=polysT[which(polysT$Box == "SW Grounds"), ]
area12=polysT[which(polysT$Box == "Gannet Dry Ledge"), ]
area13=polysT[which(polysT$Box == "Lurcher"), ]
ids = (TaggingSubset$TAG_NUMBER)
r = data.frame( set=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
# Assigning fishing grounds to sets
for (i in 1:nrow(r)){
test = which(TaggingSubset$TAG_NUMBER==r[i, "set"])
test1 = TaggingSubset[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
# Ground
r$FishingGround = NA
head(r)
# NB Coastal
NB =r[which((r$NB_Coastal > 0)), ]
NB$FishingGround = "NB Coastal"
# Grand Manan
GM =r[which((r$Grand_Manan > 0)), ]
GM$FishingGround = "Grand Manan"
# Grand Manan Banks
GMB =r[which((r$Grand_Manan_Banks > 0)), ]
GMB$FishingGround = "Grand Manan Banks"
# Long Island
LI =r[which((r$Long_Island > 0)), ]
LI$FishingGround = "Long Island"
# German Bank
GB =r[which((r$German_Bank > 0)), ]
GB$FishingGround = "German Bank"
# Seal Island
SI =r[which((r$Seal_Island > 0)), ]
SI$FishingGround = "Seal Island"
# Scots Bay
SB =r[which((r$Scots_Bay > 0)), ]
SB$FishingGround = "Scots Bay"
# Yankee Bank
YB =r[which((r$Yankee_Bank > 0)), ]
YB$FishingGround = "Yankee Bank"
# Trinity
TR=r[which((r$Trinity > 0)), ]
TR$FishingGround = "Trinity"
# SW Grounds
SW =r[which((r$SW_Grounds > 0)), ]
SW$FishingGround = "SW Grounds"
# Gannet Dry Ledge
GDL =r[which((r$Gannet_Dry_Ledge > 0)), ]
GDL$FishingGround = "Gannet Dry Ledge"
# Lurcher
L=r[which((r$Lurcher > 0)), ]
L$FishingGround = "Lurcher"
merged  = rbind(L, GDL, TR, YB, SB, SI, GB, LI, GMB, GM, SW, NB)
View(merged)
# Browns Bank: Up to this point we have not had any activity on Browns Bank
BB=r[which((r$Browns_Bank > 0)), ]
BB$FishingGround = "Browns Bank"
rm(list = ls())
#Import all the required libraries. The ones commented out have been discontinued, but left in in case something breaks and we need to find an alternative.
#install.packages("geonames")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(dplyr)
library(geonames)
library(dplyr)
library(mgcv)
# Set working directory to github source data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data"))
completeReturns <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/complete.returns.csv"))
TaggingEvents <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents <- TaggingEvents %>%   ###Not working anymore not sure why.
rename(TAG_NUMBER = Tag_Num)
TaggingSubset <- TaggingEvents[sample(1:nrow(TaggingEvents), 25, replace = FALSE),]
rawReturn <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/rawReturn.csv"))
relINFO <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/relINFO.csv"))
polysNAFO <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/NAFO_subunits.csv"))
polysT <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/timGrounds.csv"))
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Assigning of Grounds
area1=polysT[which(polysT$Box == "NB Coastal"), ]
area2=polysT[which(polysT$Box == "Grand Manan"), ]
area3=polysT[which(polysT$Box == "Grand Manan Banks"), ]
area4=polysT[which(polysT$Box == "Long Island"), ]
area5=polysT[which(polysT$Box == "German Bank"), ]
area6=polysT[which(polysT$Box == "Seal Island"), ]
area7=polysT[which(polysT$Box == "Scots Bay"), ]
area8=polysT[which(polysT$Box == "Yankee Bank"), ]
area9=polysT[which(polysT$Box == "Trinity"), ]
area10=polysT[which(polysT$Box == "Browns Bank"), ]
area11=polysT[which(polysT$Box == "SW Grounds"), ]
area12=polysT[which(polysT$Box == "Gannet Dry Ledge"), ]
area13=polysT[which(polysT$Box == "Lurcher"), ]
#
# # NAFO Units
# area11=polysNAFO[which(polysNAFO$Area == "5Yb"), ]
# area22=polysNAFO[which(polysNAFO$Area == "4Xr"), ]
# area33=polysNAFO[which(polysNAFO$Area == "4Xq"), ]
# area44=polysNAFO[which(polysNAFO$Area == "4Xs"), ]
ids = (TaggingSubset$TAG_NUMBER)
r = data.frame( set=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
# Assigning fishing grounds to sets
for (i in 1:nrow(r)){
test = which(TaggingSubset$TAG_NUMBER==r[i, "set"])
test1 = TaggingSubset[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
#write.table(r, file= "r.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
# # NAFO Subunit
# e = data.frame( set=ids, X = NA, Y = NA, Subunit4Xs = NA, Subunit4Xr = NA, Subunit4Xq = NA, Subunit5Yb = NA)
# NAFO subunit
# Ground
# for (i in 1:nrow(e)){
#   test = which(TaggingSubset$TAG_NUMBER==e[i, "set"])
#   test1 = TaggingSubset[test, ]
#   e$Y[i] = test1$Lat
#   e$X[i] = test1$Lon
#   e$Subunit5Yb[i] = point.in.polygon(e$Y[i], e$X[i], area11$Y, area11$X, mode.checked=FALSE)
#   e$Subunit4Xr[i] = point.in.polygon(e$Y[i], e$X[i], area22$Y, area22$X, mode.checked=FALSE)
#   e$Subunit4Xq[i] = point.in.polygon(e$Y[i], e$X[i], area33$Y, area33$X, mode.checked=FALSE)
#   e$Subunit4Xs[i] = point.in.polygon(e$Y[i], e$X[i], area44$Y, area44$X, mode.checked=FALSE)
#
# }
#
#
# re = merge(r,e)
# Now QC - are there any events where the GPS coordinate matched two polygons? This is signified by a 2 under Max
#summary(re)
# Fix the Gannet_Dry_Ledge
r[253,]
r[253,8] = 0
r[253,15] = 1
# Next step is to go through each area, and for those that have id's > 0 they are assigned the fishing ground that has been identified
# Ground
r$FishingGround = NA
head(r)
# NB Coastal
NB =r[which((r$NB_Coastal > 0)), ]
NB$FishingGround = "NB Coastal"
# Grand Manan
GM =r[which((r$Grand_Manan > 0)), ]
GM$FishingGround = "Grand Manan"
View(r)
# Ground
r$FishingGround = NA
View(r)
r$FishingGround = with(r, ifelse(r$NB_Coastal > 0, "NB Coastal",
ifelse(r$Grand_Manan > 0, "Grand Manan", "Other")))
View(r)
# Ground
r$FishingGround = NA
r$FishingGround = with(r, ifelse(r$NB_Coastal > 0, "NB Coastal",
ifelse(r$Grand_Manan > 0, "Grand Manan",
ifelse(r$Grand_Manan_Banks > 0, "Grand Manan Banks",
ifelse(r$Long_Island > 0, "Long Island",
ifelse(r$German_Bank > 0, "German Bank",
ifelse(r$Seal_Island > 0, "Seal Island",
ifelse(r$Scots_Bay > 0, "Scots Bay",
ifelse(r$Yankee_Bank > 0, "Yankee Bank",
ifelse(r$Trinity > 0, "Trinity",
ifelse(r$Browns_Bank > 0, "Brown Bank",
ifelse(r$SW_Grounds > 0, "SW Grounds",
ifelse(r$Gannet_Dry_Ledge > 0, "Gannet Dry Ledge",
ifelse(r$Lurcher > 0, "Lurcher", "Other"))))))))))))))
rm(list = ls())
#Import all the required libraries. The ones commented out have been discontinued, but left in in case something breaks and we need to find an alternative.
#install.packages("geonames")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(dplyr)
library(geonames)
library(dplyr)
library(mgcv)
# Set working directory to github source data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data"))
completeReturns <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/complete.returns.csv"))
TaggingEvents <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents <- TaggingEvents %>%   ###Not working anymore not sure why.
rename(TAG_NUMBER = Tag_Num)
TaggingSubset <- TaggingEvents[sample(1:nrow(TaggingEvents), 25, replace = FALSE),]
rawReturn <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/rawReturn.csv"))
relINFO <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/relINFO.csv"))
polysNAFO <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/NAFO_subunits.csv"))
polysT <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/timGrounds.csv"))
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Assigning of Grounds
area1=polysT[which(polysT$Box == "NB Coastal"), ]
area2=polysT[which(polysT$Box == "Grand Manan"), ]
area3=polysT[which(polysT$Box == "Grand Manan Banks"), ]
area4=polysT[which(polysT$Box == "Long Island"), ]
area5=polysT[which(polysT$Box == "German Bank"), ]
area6=polysT[which(polysT$Box == "Seal Island"), ]
area7=polysT[which(polysT$Box == "Scots Bay"), ]
area8=polysT[which(polysT$Box == "Yankee Bank"), ]
area9=polysT[which(polysT$Box == "Trinity"), ]
area10=polysT[which(polysT$Box == "Browns Bank"), ]
area11=polysT[which(polysT$Box == "SW Grounds"), ]
area12=polysT[which(polysT$Box == "Gannet Dry Ledge"), ]
area13=polysT[which(polysT$Box == "Lurcher"), ]
#
# # NAFO Units
# area11=polysNAFO[which(polysNAFO$Area == "5Yb"), ]
# area22=polysNAFO[which(polysNAFO$Area == "4Xr"), ]
# area33=polysNAFO[which(polysNAFO$Area == "4Xq"), ]
# area44=polysNAFO[which(polysNAFO$Area == "4Xs"), ]
ids = (TaggingSubset$TAG_NUMBER)
r = data.frame( set=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
# Assigning fishing grounds to sets
for (i in 1:nrow(r)){
test = which(TaggingSubset$TAG_NUMBER==r[i, "set"])
test1 = TaggingSubset[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
View(r)
# Ground
r$FishingGround = NA
r$FishingGround = with(r, ifelse(r$NB_Coastal > 0, "NB Coastal",
ifelse(r$Grand_Manan > 0, "Grand Manan",
ifelse(r$Grand_Manan_Banks > 0, "Grand Manan Banks",
ifelse(r$Long_Island > 0, "Long Island",
ifelse(r$German_Bank > 0, "German Bank",
ifelse(r$Seal_Island > 0, "Seal Island",
ifelse(r$Scots_Bay > 0, "Scots Bay",
ifelse(r$Yankee_Bank > 0, "Yankee Bank",
ifelse(r$Trinity > 0, "Trinity",
ifelse(r$Browns_Bank > 0, "Brown Bank",
ifelse(r$SW_Grounds > 0, "SW Grounds",
ifelse(r$Gannet_Dry_Ledge > 0, "Gannet Dry Ledge",
ifelse(r$Lurcher > 0, "Lurcher", "Other"))))))))))))))
View(r)
View(TaggingSubset)
View(r)
r = data.frame( TAG_NUMBER=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
View(r)
# Assigning fishing grounds to sets
for (i in 1:nrow(r)){
test = which(TaggingSubset$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingSubset[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
View(r)
# Ground
r$FishingGround = NA
r$FishingGround = with(r, ifelse(r$NB_Coastal > 0, "NB Coastal",
ifelse(r$Grand_Manan > 0, "Grand Manan",
ifelse(r$Grand_Manan_Banks > 0, "Grand Manan Banks",
ifelse(r$Long_Island > 0, "Long Island",
ifelse(r$German_Bank > 0, "German Bank",
ifelse(r$Seal_Island > 0, "Seal Island",
ifelse(r$Scots_Bay > 0, "Scots Bay",
ifelse(r$Yankee_Bank > 0, "Yankee Bank",
ifelse(r$Trinity > 0, "Trinity",
ifelse(r$Browns_Bank > 0, "Brown Bank",
ifelse(r$SW_Grounds > 0, "SW Grounds",
ifelse(r$Gannet_Dry_Ledge > 0, "Gannet Dry Ledge",
ifelse(r$Lurcher > 0, "Lurcher", "Other"))))))))))))))
View(r)
View(r)
TaggingSubset <- merge(TaggingSubset, r[, c("TAG_NUMBER", "FishingGround")], by "TAG_NUMBER")
TaggingSubset <- merge(TaggingSubset, r[, c("TAG_NUMBER", "FishingGround")], by = "TAG_NUMBER")
View(TaggingSubset)
rm(list = ls())
#Import all the required libraries. The ones commented out have been discontinued, but left in in case something breaks and we need to find an alternative.
#install.packages("geonames")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(dplyr)
library(geonames)
library(dplyr)
library(mgcv)
# Set working directory to github source data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data"))
completeReturns <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/complete.returns.csv"))
TaggingEvents <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents <- TaggingEvents %>%   ###Not working anymore not sure why.
rename(TAG_NUMBER = Tag_Num)
#TaggingSubset <- TaggingEvents[sample(1:nrow(TaggingEvents), 25, replace = FALSE),]
rawReturn <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/rawReturn.csv"))
relINFO <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/relINFO.csv"))
polysNAFO <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/NAFO_subunits.csv"))
polysT <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/timGrounds.csv"))
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Assigning of Grounds
area1=polysT[which(polysT$Box == "NB Coastal"), ]
area2=polysT[which(polysT$Box == "Grand Manan"), ]
area3=polysT[which(polysT$Box == "Grand Manan Banks"), ]
area4=polysT[which(polysT$Box == "Long Island"), ]
area5=polysT[which(polysT$Box == "German Bank"), ]
area6=polysT[which(polysT$Box == "Seal Island"), ]
area7=polysT[which(polysT$Box == "Scots Bay"), ]
area8=polysT[which(polysT$Box == "Yankee Bank"), ]
area9=polysT[which(polysT$Box == "Trinity"), ]
area10=polysT[which(polysT$Box == "Browns Bank"), ]
area11=polysT[which(polysT$Box == "SW Grounds"), ]
area12=polysT[which(polysT$Box == "Gannet Dry Ledge"), ]
area13=polysT[which(polysT$Box == "Lurcher"), ]
ids = (TaggingEvents$TAG_NUMBER)
r = data.frame( TAG_NUMBER=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
# Assigning fishing grounds to sets
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
