SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
#Plot = Tag %>% subset(Ground == "Scots Bay" & Year == year) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup() #Line for when using system year.
Plot = Tag %>% subset(Ground == "Scots Bay" & Year == 2023) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup() #Line for previous year when it does not match system year. Used for before the season starts.
ggplot(data = Plot, aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Survey, # of Tags")
Tag1 = Tag %>%
filter(Year == year & Ground == "Scots Bay") %>%
arrange(Survey) %>%
group_by(Vessel, Survey) %>%
mutate(group2=paste0(Vessel, ", n=", length(Vessel))) %>%
ungroup()
for(i in unique(Tag1$Survey)) {
cat("\n")
cat("##### Survey", i, "\n")
cat("\n")
print(ggplot(data = subset(Tag1, Survey == i), aes(x=Lon, y=Lat)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill = "Vessel, # of Tags"))
cat("\n")
}
CP <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons") #set boundaries for German Bank before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
#Plot = Tag %>% subset(Ground == "German Bank" & Year == year) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup() #To use when you are currently in a survey period
Plot = Tag %>% subset(Ground == "German Bank" & Year == 2023) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup() #Set previous survey year when you are between survey periods.
ggplot(data = Plot, aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Survey, # of Tags")
Tag1 = Tag %>%
filter(Year == year & Ground == "German Bank") %>%
arrange(Survey) %>%
group_by(Vessel, Survey) %>%
mutate(group2=paste0(Vessel, ", n=", length(Vessel))) %>%
ungroup()
for(i in unique(Tag1$Survey)) {
cat("\n")
cat("##### Survey", i, "\n")
cat("\n")
print(ggplot(data = subset(Tag1, Survey == i), aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Vessel, # of Tags"))
cat("\n")
}
#Reset spatial extent back to full view
CP <- as(extent(-69, -63, 42, 45.5), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
ggplot(data = subset(Tag, Lon < -64.1), aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group),fill='burlywood4',col='black') +
geom_point(pch=21, size = 2, fill = "White") +
ggtitle("Tagging Locations") +
labs(x=NULL, y=NULL) +
coord_map() +
theme(panel.background = element_rect(fill = "grey68"))
Annual_Table = Tag %>%
group_by(Year) %>%
summarise(n=n()) %>%
rename(Tags = n)
kbl(Annual_Table) %>%
kable_paper("striped", full_width = F)
#Reset spatial extent back to full view
CP <- as(extent(-69, -61.5, 42, 45.5), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
ggplot(data = Tag, aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group),fill='burlywood4',col='black') +
geom_point(data = Tag, aes(fill = Tagger), pch=21, size = 2)+
ggtitle("Tagging Locations") +
labs(x=NULL, y=NULL) +
coord_map() +
theme(panel.background = element_rect(fill = "grey68"))
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes(fill = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
rm(list=ls())
library(lubridate)
library(ggplot2)
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(pander)
library(janitor)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
# Run first few lines of taggingMaster first to load in relINFO
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/"))
relINFO <- read.csv("relINFO.csv")
head(relINFO)
# Years
two16=relINFO[which(relINFO$Year == "2016"), ]
two17=relINFO[which(relINFO$Year == "2017"), ]
two18=relINFO[which(relINFO$Year == "2018"), ]
two19=relINFO[which(relINFO$Year == "2019"), ]
two20=relINFO[which(relINFO$Year == "2020"), ]
two21=relINFO[which(relINFO$Year == "2021"), ]
two22=relINFO[which(relINFO$Year == "2022"), ]
two23=relINFO[which(relINFO$Year == "2023"), ]
# Tenporal range of tagging season
unique(two16$Julian)
unique(two17$Julian)
unique(two18$Julian)
unique(two19$Julian)
unique(two20$Julian)
unique(two21$Julian)
unique(two22$Julian)
unique(two23$Julian)
#2021
head(two21)
sum(two21$no_tags)
sum(two21$no_tags)
unique(two21$RELEASE_VESSEL)
# 2019
two19
head(two19)
sum(two19$no_tags)
unique(two19$RELEASE_VESSEL)
# Nicole Seamone
nicole=two20[which(two20$RELEASE_VESSEL == "Canada 100"), ]
sum(nicole$no_tags)
head(nicole)
dim(nicole)
# Lisa Houston
lisaA=two20[which(two20$RELEASE_VESSEL == "Morning Star"), ]
lisaB=two19[which(two19$RELEASE_VESSEL == "Leroy and Barry"), ]
lisa = rbind(lisaA, lisaB)
sum(lisa$no_tags)
dim(lisa)
lisa=two20[which(two20$RELEASE_VESSEL == "Sealife II"), ]
sum(lisa$no_tags)
# 2021
lisa=two21[which(two21$RELEASE_VESSEL == "Morning Star"), ]
sum(lisa$no_tags)
# Manon Holmes
manonA=two19[which(two19$RELEASE_VESSEL == "Lady Melissa"), ]
manonB=two19[which(two19$RELEASE_VESSEL == "Fundy Monarch"), ]
manon = rbind(manonA, manonB)
sum(manon$no_tags)
dim(manon)
# Emilie/Jenna
ej=two20[which(two20$RELEASE_VESSEL == "Lady Melissa"), ]
sum(ej$no_tags)
# per month
two23$month = month(two23$RELEASE_DATE)
two23$month =as.factor(two23$month)
head(two23)
# figure
x<-aggregate(no_tags~month, two23, FUN=sum)
y<-aggregate(no_tags~month, two23, FUN=sum)
head(x)
ggplot(y, aes(month, no_tags)) +
geom_point(size = 5, colour = "red") +
theme(panel.background = element_rect(fill = "white", colour = "grey50"), , text = element_text(size=20))
TagsPerMonth2023 <- data.frame(y) %>%
adorn_totals("row")
datatable(TagsPerMonth2023)
# Number of tags per person and event
ggplot(relINFO, aes(month, no_tags)) +
geom_point(aes(size = 5, colour = "red")) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"))
# Taggers
x<-aggregate(no_tags~Tagger, two23, FUN=sum)
head(x)
TotalTagger2023Table <- data.frame(x) %>%
adorn_totals("row")
datatable(TotalTagger2023Table)
ggplot(x, aes(Tagger, no_tags)) + geom_point(size = 5, colour = "red") + theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=20))
ggplot(x, aes(x=Tagger, y=no_tags)) +
geom_bar(stat = "identity", fill = "blue", width = 0.4) + ggtitle("Tags Applied per Tagger in 2023")
#tags per year
x<-aggregate(no_tags~Year, relINFO, FUN=sum)
head(x)
TotalYearTable <- data.frame(x) %>%
adorn_totals("row")
datatable(TotalYearTable)
print(TotalYearTable)
ggplot(x, aes(x=Year, y=no_tags)) +
geom_bar(stat = "identity", fill = "blue", width = 0.5) + ggtitle("Tags Applied per Year by the HSC") +
#aes(size = 5, colour = "red") +
theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=20))
# Number of tags per event.
ggplot(two23, aes(Julian, no_tags)) +
geom_point(aes(colour = Tagger),size = 2) +
scale_x_continuous(breaks = seq(150, 300, 10)) +
scale_y_continuous(breaks = seq(0, 1000, 50)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=12)) +
ggtitle("2023")
ggplot(two18, aes(Julian, no_tags)) +
geom_point(aes(colour = Tagger),size = 2) +
scale_x_continuous(breaks = seq(150, 300, 10)) +
scale_y_continuous(breaks = seq(0, 1000, 50)) +
theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=12)) +
ggtitle("2018")
# 2018
two18
head(two18)
sum(two18$no_tags)
unique(two18$RELEASE_VESSEL)
# Nicole Seamone
nicole=two18[which(two18$RELEASE_VESSEL == "Canada 100"), ]
sum(nicole$no_tags)
dim(nicole)
# Lisa Houston
lisa=two18[which(two18$RELEASE_VESSEL == "Morning Star"), ]
sum(lisa$no_tags)
dim(lisa)
# Manon Holmes
manonA=two19[which(two19$RELEASE_VESSEL == "Lady Melissa"), ]
manonB=two19[which(two19$RELEASE_VESSEL == "Fundy Monarch"), ]
manon = rbind(manonA, manonB)
sum(manon$no_tags)
dim(manon)
# Maps of tagging location
# Mapping Took out gIntersections and replaced with crop as package was discontinued.
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
CP <- as(extent(-67.6, -64, 43, 45.8), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
#boxes = read.csv("grounds_.csv")
head(boxes)
two23 <- subset(two23, X < -63.9)
two23 <- subset(two23, Y < 45.8)
ggplot(two23, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box, colour = box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes( colour = month), size = 2) +
labs(x=NULL, y=NULL)+ coord_map()
relINFO <- subset(relINFO, X < -63.9)
relINFO <- subset(relINFO, Y < 45.8)
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes(fill = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(data = relINFO, aes(fill = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(data = relINFO, aes(colour) = Year), size = 1) +
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
scale_colour_identity() +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
scale_colour_identity() +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
scale_colour_identity(name = "Year") +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
?scale_colour_manual
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
#scale_colour_manual() +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
#scale_colour_manual() +
geom_point(data = relINFO, aes(x = Year, colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
#scale_colour_manual() +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(data = relINFO, aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
View(relINFO)
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes(fill = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
relINFO <- subset(relINFO, Y < 45.8)
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point() + #aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+
coord_map()
ggplot(relINFO, aes(x=X, y=Y, colour = Year))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") +
geom_point(aes(colour = Year), size = 1) +
labs(x=NULL, y=NULL)+
coord_map()
print(ggplot(TaggingEventsStats, aes(x = Month, y = Tag_Num, fill = Tagger)) +
geom_col())
outside=two20[which(two20$X >  -65.5), ]
outside2=outside[which(outside$Y <  44), ]
ggplot(outside2, aes(x=X, y=Y))+
geom_polygon(data=boxes,aes(x=X, y=Y, group=Box), fill = "white", colour = "black")  +
geom_polygon(data=out,aes(x=long, y=lat, group=group))  +
geom_point(aes(colour = Tagger), size = 2)   +
geom_point(aes(colour = Tagger), size = 2) +
labs(x=NULL, y=NULL) +
coord_map() +
theme(panel.background = element_rect(fill = "grey82"))
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/"))
TaggingEvents <- read.csv("TaggingEvents.csv")
TaggingEvents <- TaggingEvents %>% filter(Year == "2023")
TaggingEvents$Month <- month(TaggingEvents$Date)
TaggingEvents <- TaggingEvents %>% group_by("Tagger")
Annik <- subset(TaggingEvents, Tagger == "Annik Doucette")
# TaggingEventsStats <- TaggingEvents %>% group_by(Tagger) %>%
#       summarise(n_distinct(Tag_Num))
#
# TaggingEventsStats <- TaggingEvents %>%
#   group_by(Tagger) %>%
#   summarise(n_distinct(Tag_Num)) %>%
#
TaggingEventsStats <- aggregate(Tag_Num ~ Tagger + Month, data = TaggingEvents, FUN = length )
TaggingEventsStats %>% group_by(Month)
print(ggplot(TaggingEventsStats, aes(x = Month, y = Tag_Num, fill = Tagger)) +
geom_col())
print(ggplot(TaggingEventsStats, aes(x = Month, y = Tag_Num, fill = Tagger)) +
geom_col())
datatable(TaggingEventsStats)
June <- subset(TaggingEventsStats, Month == "6")
View(June)
July <- subset(TaggingEventsStats, Month == "7")
June <- subset(TaggingEventsStats, Month == "6") %>%
adorn_totals("rows")
June <- subset(TaggingEventsStats, Month == "6") %>%
adorn_totals("row")
View(June)
June <- subset(TaggingEventsStats, Month == "6") %>%
adorn_totals("row")
July <- subset(TaggingEventsStats, Month == "7") %>%
adorn_totals("row")
August <- subset(TaggingEventsStats, Month == "8") %>%
adorn_totals("row")
September <- subset(TaggingEventsStats, Month == "9") %>%
adorn_totals("row")
October <- subset(TaggingEventsStats, Month == "10") %>%
adorn_totals("row")
View(August)
View(June)
JunePercent <- 8705/38931*100
View(July)
View(September)
View(October)
JulyPercent <- 10764/38931*100
AugPercent <- 5820/38931*100
SeptPercent <- 8156/38931*100
OctPercent <- 4848/38931*100
TagsLeft <- 11250
June2024 <- 11250*JunePercent%
June <- subset(TaggingEventsStats, Month == "6") %>%
adorn_totals("row")
JunePercent <- 8705/38931
July <- subset(TaggingEventsStats, Month == "7") %>%
adorn_totals("row")
JulyPercent <- 10764/38931
August <- subset(TaggingEventsStats, Month == "8") %>%
adorn_totals("row")
AugPercent <- 5820/38931
September <- subset(TaggingEventsStats, Month == "9") %>%
adorn_totals("row")
SeptPercent <- 8156/38931
October <- subset(TaggingEventsStats, Month == "10") %>%
adorn_totals("row")
OctPercent <- 4848/38931
TagsLeft <- 11250
June2024 <- 11250*JunePercent
July2024 <- 11250*JulyPercent
Aug2024 <- 11250*AugPercent
Sept2024 <- 11250*SeptPercent
View(TaggingEventsStats)
View(TotalTagger2023Table)
average per month <- 38931/5
average per month <- 38931/5
averagepermonth <- 38931/5
averagepermonth <- 38931/6
removeNicktagaverage <- 35589/5
