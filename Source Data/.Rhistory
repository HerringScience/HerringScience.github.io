library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(pander)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
#All Adjusted Ages and Dates are originally added in Larval QC script.
#All preservative length adjustments added in in Larval QC script.
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation. They did suggest that this adjustment would be less accurate the longer the tow period.
# These equations are when the maximum shrinkage has occurred.
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$MonthDay <- format(Larval$Date, "%m-%d")
#Adjusted Spawn Date to account for incubation period. Using overall 8.5 days, as per NS gov pdf that states overall incubation is 7-10 days long. This will need to be adjusted to account for spring vs fall spawners once lit review is complete.
Larval$AdjustedSpawnDate <- Larval$AdjustedSpawnDate - 8.5
Larval$AdjustedJulianSpawnDate <- yday(Larval$AdjustedSpawnDate)
#Seal Island Larval
LarvalSI = filter(Larval, Ground == "SI")
LarvalSum = read_csv("LarvalSum.csv")
LarvalSum$Year <- as.factor(LarvalSum$Year)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Larval1 <- subset.data.frame(Larval, Ground == "SB")
Larval1 %>% ggplot(aes(y=LengthAdjustment, x=Julian, colour = Year)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(y="Length (mm)", x="Julian Date")
ggplot(Larval1, aes(Year, LengthAdjustment, colour = Year)) +
geom_boxplot() +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(y="Length (mm)")
Table = Larval1 %>%
group_by(Year) %>%
summarize(MinLength = min(LengthAdjustment),
MaxLength = max(LengthAdjustment),
AvgLength = mean(LengthAdjustment),
AvgSD = mean(SD),
Abundance = n()) %>%
mutate_if(is.numeric, format, digits=2)
kbl(Table, col.names=c("Year", "Min Length (mm)", "Max Length (mm)", "Mean Length (mm)", "+/- SD (mm)", "Abundance"), align = "c") %>%
kable_paper("striped", full_width = F)
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
mutate(Length = ifelse(category==1, "<8",
ifelse(category==2, "8-12",
ifelse(category==3, "13-17",
ifelse(category==4, "18-27",
ifelse(category==5, ">28", NA)))))) %>%
relocate(Length, .after = category) %>%
mutate(Age = ifelse(category==1, "<2 weeks",
ifelse(category==2, "2-5 weeks",
ifelse(category==3, "5-8 weeks",
ifelse(category==4, "8-14 weeks",
ifelse(category==5, ">14 weeks", NA)))))) %>%
relocate(Age, .after = Length)
kbl(TotalCategories, col.names=c("Category", "Length (mm)", "Age", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F)
for(i in unique(Larval$Year)) {
# In histogram, count is the number of individuals that fall into that length category over the whole year. It is split by colour into each individual survey. Each length category is therefore split up by number of individuals per survey.
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 <- subset.data.frame(Larval, Ground == "SB")
Larval1 = Larval1 %>% filter(Year == i)
Larval1 %>% ggplot(aes(y=LengthAdjustment, x=Julian, colour = id)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(y="Length (mm)", x="Julian Day")
print(ggplot(data = subset(Larval1, Year == i), aes(x = Julian, y = LengthAdjustment, colour = id)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
ylab("Length (mm)") +
xlab("Julian Day") +
scale_y_continuous(limits = c(0, max(Larval1$LengthAdjustment))) +
scale_x_continuous(breaks = seq(from = 150, to = 270, by = 20)) +
ggtitle(paste(i, "Scots Bay")))
cat("\n")
print(ggplot(data = Larval1, (aes(LengthAdjustment, fill = id))) +
geom_histogram(binwidth=0.5, colour = "white") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Length (mm)", y="Count"))
cat("\n")
Table = Larval1 %>%
group_by(Survey.No) %>%
summarize(AvgLength = mean(LengthAdjustment),
AvgSD = mean(SD),
Abundance = n()) %>%
mutate_if(is.numeric, format, digits=2)
print(kbl(Table, col.names=c("Survey #", "Mean Length (mm)", "+/- SD (mm)", "Abundance"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
mutate(Length = ifelse(category==1, "<8",
ifelse(category==2, "8-12",
ifelse(category==3, "13-17",
ifelse(category==4, "18-27",
ifelse(category==5, ">28", NA)))))) %>%
relocate(Length, .after = category) %>%
mutate(Age = ifelse(category==1, "<2 weeks",
ifelse(category==2, "2-5 weeks",
ifelse(category==3, "5-8 weeks",
ifelse(category==4, "8-14 weeks",
ifelse(category==5, ">14 weeks", NA)))))) %>%
relocate(Age, .after = Length)
print(kbl(TotalCategories, col.names=c("Category", "Length (mm)", "Age", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-66.5, -64.5, 44.5, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
Larval2 <- subset(Larval, Ground == 'SB')
ggplot(Larval2, aes(x=Lon1, y=Lat1)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(data=Larval2, aes(fill = Year, size = Abundance), pch=21, alpha = 0.6) +
labs(x=NULL, y=NULL) +
coord_map()
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i) %>% filter(Ground == "SB")
print(ggplot(Larval1, aes(x=Lon1, y=Lat1)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(data=Larval1, aes(fill = category, size = Abundance), pch=21, alpha = 0.6) +
labs(x=NULL, y=NULL) +
coord_map())
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1)
print(kbl(TotalCategories, col.names=c("Category", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
Larval1 = Larval %>% filter(Ground == "SB")
Larval1 %>%
ggplot(aes(AvgTowDepth, LengthAdjustment, colour = Year)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
scale_y_reverse() +
labs(x = "Average Tow Depth (m)", y = "Larval Length (mm)", colour = "Category")
TotalCategories <- Larval1 %>%
group_by(category) %>%
summarize(n = n(),
MeanDepth = mean(AvgTowDepth, na.rm = TRUE)) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
relocate(MeanDepth, .after= Percentage)
kbl(TotalCategories, col.names=c("Category", "Abundance", "%", "Avg Tow Depth (m)"), align = "c") %>%
kable_paper("striped", full_width = F)
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
Larval1 = Larval1 %>% filter(Ground == "SB")
print(ggplot(data=Larval1, (aes(AvgTowDepth, LengthAdjustment, colour = id))) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
scale_y_reverse() +
labs(x = "Average Tow Depth (m)", y = "Larval Length (mm)", colour = "id"))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
summarize(n = n(),
MeanDepth = mean(AvgTowDepth, na.rm = TRUE)) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
relocate(MeanDepth, .after= Percentage)
print(kbl(TotalCategories, col.names=c("Category", "Abundance", "%", "Avg Tow Depth (m)"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
View(larvsummary)
View(LarvalSum)
# The following survey's did not use a flowmeter, therefore does not have water volume or larval density. This is only applicable to surveys that larvae were caught.
# Scots Bay 2017 Survey 1, 2, 6 & 7
# Scots Bay 2019 Survey 8
# Scots Bay 2020 Survey 7
# Scots Bay 2021 Survey 9 & 10
# German Bank 2021 Survey 4 & 5
# Seal Island 2019 Survey unknown, no record in raw data of this survey.
# Overall summary can be found in Volume and Density Investigation - NAs in Full Larval Spreadsheet. Saved under science team, larval project.
Larval1 = LarvalSum %>% filter(Ground == "SB")
print(ggplot(Larval1, aes(x = Survey.No, y = Density, colour = Year)) +
geom_point() +
ylab("Density (Abundance/Volume)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Larval Density "))
print(ggplot(Larval1, aes(x = Survey.No, y = Abundance, colour = Year)) +
geom_point() +
ylab("Abundance (Count/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Larval Abundance"))
print(ggplot(Larval1, aes(x = Survey.No, y = AdjustedMeanAgeInDays, colour = Year)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$AdjustedMeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Mean Larval Age of Each Individual Tow"))
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Ground == "SB")
Larval1 = Larval1 %>% filter(Year == i)
Larval1$MonthDay <- format(Larval1$Date, "%m-%d")
print(ggplot(data = subset(Larval1, Year == i), aes(x = as.numeric(Survey.No), y = Density, colour = MonthDay)) +
geom_point() +
ylab("Density (Abundance/Volume)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Density ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = Abundance, colour = MonthDay)) +
geom_point() +
ylab("Abundance (Larvae/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Abundance ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = AdjustedMeanAgeInDays, colour = MonthDay)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
xlim(0, 10) +
scale_y_continuous(limits = c(0, max(Larval1$AdjustedMeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, " Mean Larval Age of Each Individual Tow")))
cat("\n")
}
View(LarvalSum)
sum(LarvalSum$Ground == 'SB')
sum(LarvalSum$Ground == 'SB' & LarvalSum$Density(na.rm = TRUE))
sum(LarvalSum$Ground)
sum(LarvalSum$Ground == 'SB' & LarvalSum$Density > 0)
drop.na(LarvalSum$Density)
drop_na(LarvalSum$Density)
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
head(relINFO)
function(relINFO)
head(relINFO)
two16=relINFO[which(relINFO$Year == "2016"), ]
relINFO <- setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/relINFO.csv"))
relINFO <- read.csv("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/relINFO.csv"))
relINFO <- read.csv("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/relINFO.csv")
relINFO <- read.csv("relINFO.csv")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/"))
relINFO <- read.csv("relINFO.csv")
rm.list()
rm(list=ls())
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/"))
relINFO <- read.csv("relINFO.csv")
head(relINFO)
two16=relINFO[which(relINFO$Year == "2016"), ]
two17=relINFO[which(relINFO$Year == "2017"), ]
two18=relINFO[which(relINFO$Year == "2018"), ]
two19=relINFO[which(relINFO$Year == "2019"), ]
two20=relINFO[which(relINFO$Year == "2020"), ]
two21=relINFO[which(relINFO$Year == "2021"), ]
unique(two16$Julian)
unique(two17$Julian)
unique(two18$Julian)
unique(two19$Julian)
unique(two20$Julian)
unique(two21$Julian)
head(two21)
sum(two21$no_tags)
sum(two21$no_tags)
unique(two21$RELEASE_VESSEL)
View(relINFO)
View(relINFO)
two16=relINFO[which(relINFO$Year == "2016"), ]
two17=relINFO[which(relINFO$Year == "2017"), ]
two18=relINFO[which(relINFO$Year == "2018"), ]
two19=relINFO[which(relINFO$Year == "2019"), ]
two20=relINFO[which(relINFO$Year == "2020"), ]
two21=relINFO[which(relINFO$Year == "2021"), ]
two22=relINFO[which(relINFO$Year == "2022"), ]
two23=relINFO[which(relINFO$Year == "2023"), ]
#2021
head(two21)
sum(two21$no_tags)
sum(two21$no_tags)
unique(two21$RELEASE_VESSEL)
# 2019
two19
head(two19)
sum(two19$no_tags)
unique(two19$RELEASE_VESSEL)
# Nicole Seamone
nicole=two20[which(two20$RELEASE_VESSEL == "Canada 100"), ]
sum(nicole$no_tags)
head(nicole)
dim(nicole)
# Lisa Houston
lisaA=two20[which(two20$RELEASE_VESSEL == "Morning Star"), ]
lisaB=two19[which(two19$RELEASE_VESSEL == "Leroy and Barry"), ]
lisa = rbind(lisaA, lisaB)
sum(lisa$no_tags)
dim(lisa)
lisa=two20[which(two20$RELEASE_VESSEL == "Sealife II"), ]
sum(lisa$no_tags)
# 2021
lisa=two21[which(two21$RELEASE_VESSEL == "Morning Star"), ]
sum(lisa$no_tags)
# Manon Holmes
manonA=two19[which(two19$RELEASE_VESSEL == "Lady Melissa"), ]
manonB=two19[which(two19$RELEASE_VESSEL == "Fundy Monarch"), ]
manon = rbind(manonA, manonB)
sum(manon$no_tags)
dim(manon)
# Emilie/Jenna
ej=two20[which(two20$RELEASE_VESSEL == "Lady Melissa"), ]
sum(ej$no_tags)
# per month
two19$month = month(two19$RELEASE_DATE)
two19$month =as.factor(two19$month)
head(two19)
# figure
x<-aggregate(no_tags~month, two21, FUN=sum)
y<-aggregate(no_tags~month, two20, FUN=sum)
head(x)
ggplot(y, aes(month, no_tags)) + geom_point(size = 5, colour = "red") + theme(panel.background = element_rect(fill = "white", colour = "grey50"), , text = element_text(size=20))
# Number of tags per person and event
ggplot(relINFO, aes(month, no_tags)) + geom_point(aes(size = 5, colour = "red")) + theme(panel.background = element_rect(fill = "white", colour = "grey50"))
# Taggers
x<-aggregate(no_tags~Tagger, two21, FUN=sum)
head(x)
ggplot(x, aes(Tagger, no_tags)) + geom_point(size = 5, colour = "red") + theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=20))
ggplot(x, aes(x=Tagger, y=no_tags)) +
geom_bar(stat = "identity", fill = "blue", width = 0.4) + ggtitle("Tags Applied per Tagger in 2021")
#tags per year
x<-aggregate(no_tags~Year, relINFO, FUN=sum)
head(x)
ggplot(x, aes(x=Year, y=no_tags)) +
geom_bar(stat = "identity", fill = "blue", width = 0.5) + ggtitle("Tags Applied per Year by the HSC")
(size = 5, colour = "red") + theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=20))
(size = 5 colour = "red") + theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=20))
# Number of tags per event
ggplot(two21, aes(RELEASE_DATE, no_tags)) + geom_point(aes(colour = Tagger),size = 2) + theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=12)) + ggtitle("2021")
# Number of tags per event
ggplot(two21, aes(RELEASE_DATE, no_tags)) + geom_point(aes(colour = Tagger),size = 2) + theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=12)) + ggtitle("2021")
ggplot(two18, aes(RELEASE_DATE, no_tags)) + geom_point(aes(colour = Tagger),size = 2) + theme(panel.background = element_rect(fill = "white", colour = "grey50"), text = element_text(size=12)) + ggtitle("2018")
# 2018
two18
head(two18)
sum(two18$no_tags)
unique(two18$RELEASE_VESSEL)
# Nicole Seamone
nicole=two18[which(two18$RELEASE_VESSEL == "Canada 100"), ]
sum(nicole$no_tags)
dim(nicole)
# Lisa Houston
lisa=two18[which(two18$RELEASE_VESSEL == "Morning Star"), ]
sum(lisa$no_tags)
dim(lisa)
manonA=two19[which(two19$RELEASE_VESSEL == "Lady Melissa"), ]
manonB=two19[which(two19$RELEASE_VESSEL == "Fundy Monarch"), ]
manon = rbind(manonA, manonB)
sum(manon$no_tags)
dim(manon)
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
CP <- as(extent(-67.6, -64, 43, 45.8), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
out <- crop(NBNS, CP, byid=TRUE)
boxes = read.csv("grounds_.csv")
head(boxes)
ggplot(two21, aes(x=X, y=Y))+  geom_polygon(data=boxes,aes(x=X, y=Y, group=GROUND, colour = GROUND), fill = "white", colour = "black") + geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") + geom_point(aes( colour = month), size = 2) + labs(x=NULL, y=NULL)+ coord_map()
ggplot(relINFO, aes(x=X, y=Y))+  geom_polygon(data=boxes,aes(x=X, y=Y, group=GROUND), fill = "white", colour = "black") + geom_polygon(data=out,aes(x=long, y=lat, group=group), fill = "grey", colour = "black") + geom_point(aes(colour = Year), size = 1) + labs(x=NULL, y=NULL)+ coord_map()
head(two21)
out1=two21[which(two21$X > -65.5), ]
out2=out1[which(out1$Y < 44.5), ]
out3=two21[which(two21$Y > 45.5), ]
dates=two20[which(two20$RELEASE_DATE == "2020-06-29"), ]
dates2=two20[which(two20$RELEASE_DATE == "2020-06-28"), ]
dates3=two20[which(two20$RELEASE_DATE == "2020-06-30"), ]
ggplot(dates3, aes(x=X, y=Y))+  geom_polygon(data=boxes,aes(x=X, y=Y, group=GROUND), fill = "white", colour = "black")  + geom_polygon(data=out,aes(x=long, y=lat, group=group))  + geom_point(aes(colour = Tagger), size = 2)   + geom_point(aes(colour = Tagger), size = 2) + labs(x=NULL, y=NULL) + coord_map() + theme(panel.background = element_rect(fill = "grey82"))
ggplot(outside2, aes(x=X, y=Y))+  geom_polygon(data=boxes,aes(x=X, y=Y, group=GROUND), fill = "white", colour = "black")  + geom_polygon(data=out,aes(x=long, y=lat, group=group))  + geom_point(aes(colour = Tagger), size = 2)   + geom_point(aes(colour = Tagger), size = 2) + labs(x=NULL, y=NULL) + coord_map() + theme(panel.background = element_rect(fill = "grey82"))
