Lon = -1*Lon #convert longitude to negative
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD) #saves all the values into a tibble (a tidyverse dataframe)
Tags$Date = ymd(Tags$Date) #convert the Date to a year-month-day (ymd) format
Tags = Tags %>% #this entire pipeline (%>%) will take the Tags dataframe, and mutate (create or modify) a variable named Tagger
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson", #this is used to link each tagger to their vessel
ifelse(Vessel == "Sealife II", "Annik Doucette", #if the vessel-tagger assignments change it needs to be edited here
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay", #finally, if lat/lon is between these values it will assign ground as either SB or GB
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other'))) #if lat/lon is in neither range, ground will be set to Other
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags) #joins the tagging database with the new data
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>% #adds the Julian date column (again, through Mutate which makes new columns)
mutate(Year = as.numeric(substr(Date, 1, 4))) %>% #Year is a substring of Date, from the 1st to the 4th value
dplyr::select(-Tag_Annual) #a negative select will drop the Annual Tag count for now, because it is calculated later
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>% #group_by can by read as "for each", so in this case, for each unique Tagger and each unique Year they tagged in we will calculate their annual tags applied
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2) #used to drop the columns made just to calculate the annual tags
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger") #combine the database + new data with the annual counts all into one frame
# Save TaggingEvents.csv - saves the same file in both Source and Main data which is redundant but necessary because of how other coding is setup
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
# Set all tagging log data here
Tag_Num = c(528401:528545) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-07" #"YYYY-MM-DD"
Lat = "44 15 83" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "67 01 18"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
# Set all tagging log data here
Tag_Num = c(528401:528545) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-07" #"YYYY-MM-DD"
Lat = "44 15 83" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "67 01 18"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tagging$Date = ymd(Tagging$Date)
# Modify Data
Lon = conv_unit(Lon,"deg_min_sec","dec_deg") #converts the entered longitude from deg_min_sec to decimal degrees
Lon = as.numeric(Lon) #then saves it as a numeric value
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg") #same as above but for latitude
Lat = as.numeric(Lat)
Lon = -1*Lon #convert longitude to negative
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD) #saves all the values into a tibble (a tidyverse dataframe)
Tags$Date = ymd(Tags$Date) #convert the Date to a year-month-day (ymd) format
Tags = Tags %>% #this entire pipeline (%>%) will take the Tags dataframe, and mutate (create or modify) a variable named Tagger
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson", #this is used to link each tagger to their vessel
ifelse(Vessel == "Sealife II", "Annik Doucette", #if the vessel-tagger assignments change it needs to be edited here
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay", #finally, if lat/lon is between these values it will assign ground as either SB or GB
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other'))) #if lat/lon is in neither range, ground will be set to Other
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags) #joins the tagging database with the new data
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>% #adds the Julian date column (again, through Mutate which makes new columns)
mutate(Year = as.numeric(substr(Date, 1, 4))) %>% #Year is a substring of Date, from the 1st to the 4th value
dplyr::select(-Tag_Annual) #a negative select will drop the Annual Tag count for now, because it is calculated later
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>% #group_by can by read as "for each", so in this case, for each unique Tagger and each unique Year they tagged in we will calculate their annual tags applied
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2) #used to drop the columns made just to calculate the annual tags
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger") #combine the database + new data with the annual counts all into one frame
# Save TaggingEvents.csv - saves the same file in both Source and Main data which is redundant but necessary because of how other coding is setup
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
# Set all tagging log data here
Tag_Num = c(528546:528711) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-11" #"YYYY-MM-DD"
Lat = "45 07 96" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "65 01 83"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = 9 #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
# Set all tagging log data here
Tag_Num = c(528546:528711) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-11" #"YYYY-MM-DD"
Lat = "45 07 96" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "65 01 83"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = 9 #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tagging$Date = ymd(Tagging$Date)
# Modify Data
Lon = conv_unit(Lon,"deg_min_sec","dec_deg") #converts the entered longitude from deg_min_sec to decimal degrees
Lon = as.numeric(Lon) #then saves it as a numeric value
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg") #same as above but for latitude
Lat = as.numeric(Lat)
Lon = -1*Lon #convert longitude to negative
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD) #saves all the values into a tibble (a tidyverse dataframe)
Tags$Date = ymd(Tags$Date) #convert the Date to a year-month-day (ymd) format
Tags = Tags %>% #this entire pipeline (%>%) will take the Tags dataframe, and mutate (create or modify) a variable named Tagger
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson", #this is used to link each tagger to their vessel
ifelse(Vessel == "Sealife II", "Annik Doucette", #if the vessel-tagger assignments change it needs to be edited here
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay", #finally, if lat/lon is between these values it will assign ground as either SB or GB
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other'))) #if lat/lon is in neither range, ground will be set to Other
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags) #joins the tagging database with the new data
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>% #adds the Julian date column (again, through Mutate which makes new columns)
mutate(Year = as.numeric(substr(Date, 1, 4))) %>% #Year is a substring of Date, from the 1st to the 4th value
dplyr::select(-Tag_Annual) #a negative select will drop the Annual Tag count for now, because it is calculated later
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>% #group_by can by read as "for each", so in this case, for each unique Tagger and each unique Year they tagged in we will calculate their annual tags applied
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2) #used to drop the columns made just to calculate the annual tags
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger") #combine the database + new data with the annual counts all into one frame
# Save TaggingEvents.csv - saves the same file in both Source and Main data which is redundant but necessary because of how other coding is setup
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
# Set all tagging log data here
Tag_Num = c(477038:477231) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-12" #"YYYY-MM-DD"
Date = "2023-09-12" #"YYYY-MM-DD"
Lat = "43 17 06" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "66 07 54"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
# Set all tagging log data here
Tag_Num = c(477038:477231) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-12" #"YYYY-MM-DD"
Lat = "43 17 06" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "66 07 54"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tagging$Date = ymd(Tagging$Date)
# Modify Data
Lon = conv_unit(Lon,"deg_min_sec","dec_deg") #converts the entered longitude from deg_min_sec to decimal degrees
Lon = as.numeric(Lon) #then saves it as a numeric value
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg") #same as above but for latitude
Lat = as.numeric(Lat)
Lon = -1*Lon #convert longitude to negative
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD) #saves all the values into a tibble (a tidyverse dataframe)
Tags$Date = ymd(Tags$Date) #convert the Date to a year-month-day (ymd) format
Tags = Tags %>% #this entire pipeline (%>%) will take the Tags dataframe, and mutate (create or modify) a variable named Tagger
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson", #this is used to link each tagger to their vessel
ifelse(Vessel == "Sealife II", "Annik Doucette", #if the vessel-tagger assignments change it needs to be edited here
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay", #finally, if lat/lon is between these values it will assign ground as either SB or GB
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other'))) #if lat/lon is in neither range, ground will be set to Other
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags) #joins the tagging database with the new data
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>% #adds the Julian date column (again, through Mutate which makes new columns)
mutate(Year = as.numeric(substr(Date, 1, 4))) %>% #Year is a substring of Date, from the 1st to the 4th value
dplyr::select(-Tag_Annual) #a negative select will drop the Annual Tag count for now, because it is calculated later
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>% #group_by can by read as "for each", so in this case, for each unique Tagger and each unique Year they tagged in we will calculate their annual tags applied
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2) #used to drop the columns made just to calculate the annual tags
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger") #combine the database + new data with the annual counts all into one frame
# Save TaggingEvents.csv - saves the same file in both Source and Main data which is redundant but necessary because of how other coding is setup
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
# Set all tagging log data here
Tag_Num = c(528712:528847) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-12" #"YYYY-MM-DD"
Lon = "66 09 42"
Lat = "43 19 09" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
# Set all tagging log data here
Tag_Num = c(528712:528847) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-09-12" #"YYYY-MM-DD"
Lat = "43 19 09" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "66 09 42"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tagging$Date = ymd(Tagging$Date)
# Modify Data
Lon = conv_unit(Lon,"deg_min_sec","dec_deg") #converts the entered longitude from deg_min_sec to decimal degrees
Lon = as.numeric(Lon) #then saves it as a numeric value
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg") #same as above but for latitude
Lat = as.numeric(Lat)
Lon = -1*Lon #convert longitude to negative
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD) #saves all the values into a tibble (a tidyverse dataframe)
Tags$Date = ymd(Tags$Date) #convert the Date to a year-month-day (ymd) format
Tags = Tags %>% #this entire pipeline (%>%) will take the Tags dataframe, and mutate (create or modify) a variable named Tagger
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson", #this is used to link each tagger to their vessel
ifelse(Vessel == "Sealife II", "Annik Doucette", #if the vessel-tagger assignments change it needs to be edited here
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay", #finally, if lat/lon is between these values it will assign ground as either SB or GB
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other'))) #if lat/lon is in neither range, ground will be set to Other
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags) #joins the tagging database with the new data
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>% #adds the Julian date column (again, through Mutate which makes new columns)
mutate(Year = as.numeric(substr(Date, 1, 4))) %>% #Year is a substring of Date, from the 1st to the 4th value
dplyr::select(-Tag_Annual) #a negative select will drop the Annual Tag count for now, because it is calculated later
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>% #group_by can by read as "for each", so in this case, for each unique Tagger and each unique Year they tagged in we will calculate their annual tags applied
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2) #used to drop the columns made just to calculate the annual tags
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger") #combine the database + new data with the annual counts all into one frame
# Save TaggingEvents.csv - saves the same file in both Source and Main data which is redundant but necessary because of how other coding is setup
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
getwd(paste0("C:/Users/herri/Desktop/surveyFactorsAll_Tracey with SSB data.csv"))
read.csv(paste0("C:/Users/herri/Desktop/surveyFactorsAll_Tracey with SSB data.csv"))
# remove everything in the workspace
rm(list = ls())
read.csv(paste0("C:/Users/herri/Desktop/surveyFactorsAll_Tracey with SSB data.csv"))
FactorsAll = read.csv(paste0("C:/Users/herri/Desktop/surveyFactorsAll_Tracey with SSB data.csv"))
View(FactorsAll)
View(FactorsAll)
summary(FactorsAll)
# remove everything in the workspace
rm(list = ls())
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
library(ggplot2)
library(maps)
library(dplyr)
library(RColorBrewer)
library(ggpubr)
library(ggpubr)
library(broom)
library(AICcmodavg)
setwd("C:/Users/herri/Desktop/R scripts not on Github")
FactorsAll = read.csv(paste0("C:/Users/herri/Desktop/surveyFactorsAll_Tracey with SSB data.csv"))
View(FactorsAll)
# remove everything in the workspace
rm(list = ls())
# IMPORTANT : SET GROUND, YEAR, AND SURVEY # HERE
surv="GB" #SB or GB
surv2="German Bank" #"German Bank" or "Scots Bay" as written
year="2023"
surv.no="4"
adhoc = "FALSE" #true or false if an adhoc survey was completed (and "adhoc.csv" exists)
Sample = "N" #whether ("Y") or not ("N") they caught fish during this survey window
Tow = "Y" #whether or not plankton tow(s) were conducted
#(SB ONLY) Set main-box vessels
ids = c("C1", "FM", "LM", "LJ", "SL", "MS", "LB", "BP")
#Area and TS values - From table C
SB1= 661 #SB main area
SB2= 77 #SB north area
SB3= 115 #SB east area
GB1 = 796 #GB main area
GB2 = 272 #Seal Island area
GB3 = NA #Ad-hoc school survey area
##
###
##
#BELOW VALUES SHOULD RARELY CHANGE#
TS1 = -35.5 #TS38
#turnover calculation regression values
GB_y = 0.199392662629964
GB_x_var = 0.528381832773883
GB_days = 31
SB_y = 0.364102758434224
SB_x_var = 0.436969270679439
SB_days = 29
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
library(ggplot2)
library(maps)
library(dplyr)
library(RColorBrewer)
##Survey Data import and filtering
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Plankton = read_csv("PlanktonData.csv")
Plankton = Plankton %>%
mutate(Year = year,
Ground = surv,
Survey.No = surv.no,
TowTime = difftime(Time2, Time1, units = "mins"))
Plankton$Year = as.numeric(Plankton$Year)
Plankton$Swell = as.character(Plankton$Swell)
if(Sample == "Y"){Plankton$Sample = "Y"}
if(Sample == "N"){Plankton$Sample = "N"}
#get CTD data from Plankton
SurveyData = read_csv("Plan Data.csv")
SurveyData$StartDate = as.Date(SurveyData$Date, format = "%d/%m/%Y")
if(!is.na(first(Plankton$CTD_ID))){
CTDData = read_csv(paste0(Plankton$CTD_ID, ".csv"))
CTDData = CTDData %>%
dplyr::select(Pressure = "Pressure (Decibar)", Depth = "Depth (Meter)", Temperature = "Temperature (Celsius)",	Conductivity = "Conductivity (MicroSiemens per Centimeter)", Specific_conductance = "Specific conductance (MicroSiemens per Centimeter)",
Salinity = "Salinity (Practical Salinity Scale)", Sound_velocity = "Sound velocity (Meters per Second)", Density = "Density (Kilograms per Cubic Meter)")
CTDData = CTDData %>%
mutate(plankton_ID = paste0(first(Plankton$Set_Number), "/", last(Plankton$Set_Number)),
ground = surv2,
id = first(Plankton$CTD_ID),
Date = first(SurveyData$StartDate),
Lat = first(Plankton$CTD_Lat),
Lon = first(Plankton$CTD_Lon),
Year = first(year),
Survey = first(surv.no))
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data"))
CTDRaw = read_csv("CTD_Raw.csv")
CTDData$Year = as.numeric(CTDData$Year)
CTDData$Survey = as.numeric(CTDData$Survey)
CTDTotal = full_join(CTDRaw, CTDData)
CTDTotal %>% write_csv("CTD_Raw.csv")
Plankton = Plankton %>%
mutate(AvgTemp = mean(CTDData$Temperature),
AvgSalinity = mean(CTDData$Salinity))
}
if(is.na(first(Plankton$CTD_ID))){
Plankton = Plankton %>%
mutate(AvgTemp = NA,
AvgSalinity = NA)
}
#get Ruskin data
if(Tow == "Y"){
TowData = read_excel(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Ruskin.xlsx"), skip = 1, sheet = 'Data')
TowData$DateTime = TowData$Time
TowData$DateTime = TowData$DateTime-hours(3)
TowData$Date = substr(TowData$DateTime,1,10)
TowData$Time = substr(TowData$DateTime,12,19)
TowData$Time = hms::as_hms(TowData$Time)
#Filter tow data based on Time1 + Time2
Tow1 = TowData[TowData$Time >= first(Plankton$Time1) & TowData$Time <= first(Plankton$Time2),]
Tow2 = TowData[TowData$Time >= last(Plankton$Time1) & TowData$Time <= last(Plankton$Time2),]
#Calculate average and max tow depths for each
Tow1 = Tow1 %>%
mutate(AvgTowDepth = mean(Depth),
MaxTowDepth = max(Depth),
Tow_No = 1)
Tow2 = Tow2 %>%
mutate(AvgTowDepth = mean(Depth),
MaxTowDepth = max(Depth),
Tow_No = 2)
#ggplot the profiles for each tow
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Tow1 %>%
ggplot(aes(x = Time, y = Depth)) +
geom_path(linewidth = 1, colour = "blue") +
scale_y_reverse() +
labs(y = "Depth (m)")
ggsave("Tow 1.jpg")
Tow2 %>%
ggplot(aes(x = Time, y = Depth)) +
geom_path(linewidth = 1, colour = "blue") +
scale_y_reverse() +
labs(y = "Depth (m)")
ggsave("Tow 2.jpg")
#combine the avg and max values with plankton sheet
TowTbl1 = tibble_row(Tow_No = 1, AvgTowDepth = first(Tow1$AvgTowDepth), MaxTowDepth = first(Tow1$MaxTowDepth))
TowTbl2 = tibble_row(Tow_No = 2, AvgTowDepth = first(Tow2$AvgTowDepth), MaxTowDepth = first(Tow2$MaxTowDepth))
TowCalcs = full_join(TowTbl1, TowTbl2)
Plankton = full_join(Plankton, TowCalcs, by = "Tow_No")
#convert lat/lon before combining
Plankton$Lon1 = as.numeric(conv_unit(Plankton$Lon1, "deg_dec_min", "dec_deg"))*-1
Plankton$Lon2 = as.numeric(conv_unit(Plankton$Lon2, "deg_dec_min", "dec_deg"))*-1
Plankton$Lat1 = as.numeric(conv_unit(Plankton$Lat1, "deg_dec_min", "dec_deg"))
Plankton$Lat2 = as.numeric(conv_unit(Plankton$Lat2, "deg_dec_min", "dec_deg"))
Plankton = Plankton %>%
rename(id = Set_Number)
PlanData = read_csv((paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Plan Data.csv")))
PlanData$Survey.No = as.character(PlanData$Survey.No)
SurveyTotal = full_join(Plankton, PlanData)
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Source Data/"))
Survey = read_csv("planktonsamplingData.csv")
SurveyTotal$TowTime = as.numeric(SurveyTotal$TowTime)
Total = full_join(Survey, SurveyTotal)
Total = Total %>%
mutate(Day = as.numeric(substr(Date, 1, 2)),
Month = as.numeric(substr(Date, 4, 5)),
Year = as.numeric(substr(Date, 7, 10)),
TowTime = difftime(Time2, Time1, units ="mins"),
NoRevs = FlowReading2-FlowReading1,
DistanceCalc = NoRevs*26873/1000000,
Volume = DistanceCalc*3.1415)
Total = Total %>%
dplyr::select(Year, Month, Day, Date, Ground, id, Survey.No, Fishing, Sample,
StartTime, Vessel.No, ExtraBox, EVessel, NVessel, PlanktonVessel,
Tow_No, Time1, Time2, TowTime, Lat1, Lon1, Lat2, Lon2, No_jars,
Speed, Heading, TideDirection, Swell, WindDirection, WindSpeed,
AirTemp, Observer, Net, Gear, TowType, FlowmeterType, FlowReading1,
FlowReading2, NoRevs, DistanceCalc, Volume, AvgTowDepth, MaxTowDepth,
DiscDepthD, DiscDepthA, CTD_ID, CTD_Lat, CTD_Lon, AvgTemp, AvgSalinity,
SurfaceTemp, WaterDepth1, WaterDepth2)
Total %>% write_csv("planktonsamplingData.csv")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
Total %>% write_csv("Survey Data.csv")}
