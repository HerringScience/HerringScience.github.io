library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP4) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP4, byid=TRUE)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
polyST = as.PolySet(SUA, projection="LL")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group))
## Global options
rm(list = ls())
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP1) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP1, byid=TRUE)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
polyST = as.PolySet(SUA, projection="LL")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group))
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map()
?labs()
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
labs(x=NULL, y=NULL)
boxesS=boxes[which(boxes$Box == "ScotsBay"), ]
proj4string(CP4) <- CRS(proj4string(NBNS))
Scots <- gIntersection(NBNS, CP4, byid=TRUE)
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL)
ggplot(polySB_main,aes(x=X, y=Y))
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box), fill = NA,lwd=1)
View(boxesS)
View(polySB_main)
View(boxes)
View(polySB_main)
View(polySB_main)
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = "green"), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL)
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL)
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = "red"), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL)
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = "red"), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL, legend=NULL)
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
coord_map() +
labs(x=NULL, y=NULL)
proj4string(CP1) <- CRS(proj4string(NBNS))
All <- gIntersection(NBNS, CP1, byid=TRUE)
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
coord_map() +
labs(x=NULL, y=NULL)
points = read.csv("Points.csv")
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = "red"), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL)
+
geom_segment(data = points, aes(x = X, y = Y, xend = Xend, yend = Yend), size = 1.2, colour = "blue")
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = "red"), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL)
+ geom_segment(data = points, aes(x = X, y = Y, xend = Xend, yend = Yend), size = 1.2, colour = "blue")
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = "red"), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL) +
geom_segment(data = points, aes(x = X, y = Y, xend = Xend, yend = Yend), size = 1.2, colour = "blue")
View(points)
## Global options
rm(list = ls())
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP1) <- CRS(proj4string(NBNS))
All <- gIntersection(NBNS, CP1, byid=TRUE)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
points = read.csv("Points.csv")
boxes = read.csv("surveyBoxes.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
polyST = as.PolySet(SUA, projection="LL")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
coord_map() +
labs(x=NULL, y=NULL)
proj4string(CP4) <- CRS(proj4string(NBNS))
Scots <- gIntersection(NBNS, CP4, byid=TRUE)
ggplot(polySB_main,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = "red"), fill = NA,lwd=1) +
geom_polygon(data=Scots,aes(x=long, y=lat, group=group)) +
coord_map()+
labs(x=NULL, y=NULL) +
geom_segment(data = points, aes(x = X, y = Y, xend = Xend, yend = Yend), size = 1.2, colour = "blue")
View(boxes)
#Add tagging data
x1 = 45.000
y1 = -65.000
tag = tibble(x1,y1)
View(tag)
gplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(tag) +
coord_map() +
labs(x=NULL, y=NULL)
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(tag) +
coord_map() +
labs(x=NULL, y=NULL)
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=tag) +
coord_map() +
labs(x=NULL, y=NULL)
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=tag, aes(x=x1, y=y1)) +
coord_map() +
labs(x=NULL, y=NULL)
y1 = 45.000
x1 = -65.000
tag = tibble(x1,y1)
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=tag, aes(x=x1, y=y1)) +
coord_map() +
labs(x=NULL, y=NULL)
y1 = 45.000
x1 = -65.000
tag_no = 1
tag = tibble(x1,y1, tag_no)
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Source Data/"))
tags = read.csv("TaggingEvents.csv")
View(tags)
Tag1 = tags %>%
filter(Tag_Num == c("505883", "508798", "555352", "524866", "508679"))
View(Tag1)
View(tags)
Tag1 = tags %>%
filter(Tag_Num == c(505883, 508798, 555352, 524866, 508679))
Tag1 = tags %>%
filter(Tag_Num == 505883)
View(Tag1)
Tag1 = tags %>%
filter(Tag_Num == 505883 |
Tag_Num == 508798)
Tag1 = tags %>%
filter(Tag_Num == 505883 |
Tag_Num == 508798 |
Tag_Num == 555352 |
Tag_Num == 524866 |
Tag_Num == 508679)
Tags1 = Tags1 %>%
dplyr::select(Tag_Num, Date, Lon, Lat, Vessel, Julian, Year)
Tag1 = Tag1 %>%
dplyr::select(Tag_Num, Date, Lon, Lat, Vessel, Julian, Year)
Tag1 = Tag1 %>%
dplyr::select(Tag_Num, Date, Lon, Lat, Vessel)
#All Data at once
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, group = Tag_Num)) +
coord_map() +
labs(x=NULL, y=NULL)
#All Data at once
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Tag_Num)) +
coord_map() +
labs(x=NULL, y=NULL)
#All Data at once
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Date)) +
coord_map() +
labs(x=NULL, y=NULL)
CP6 <- as(extent(-68, -66, 44, 45), "SpatialPolygons")
proj4string(CP6) <- CRS(proj4string(NBNS))
GM <- gIntersection(NBNS, CP6, byid=TRUE)
#All Data at once
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=GM,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Date)) +
coord_map() +
labs(x=NULL, y=NULL)
NEBank = boxes[which(boxes$Box == "NortheastBank"), ]
#All Data at once
ggplot(NEBank,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=GM,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Date)) +
coord_map() +
labs(x=NULL, y=NULL)
#All Data at once
ggplot(NEBank,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=GM,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Date), size=4) +
coord_map() +
labs(x=NULL, y=NULL)
#All Data at once
ggplot(NEBank,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=GM,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Date), size=12) +
coord_map() +
labs(x=NULL, y=NULL)
#All Data at once
ggplot(NEBank,aes(x=X, y=Y)) +
geom_polygon(aes(group=PID, colour = Box),fill= NA,lwd=1) +
geom_polygon(data=GM,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Date), size=5) +
coord_map() +
labs(x=NULL, y=NULL)
Tag1 = write.csv("NB Tags.csv")
## Global options
rm(list = ls())
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP1) <- CRS(proj4string(NBNS))
All <- gIntersection(NBNS, CP1, byid=TRUE)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
points = read.csv("Points.csv")
boxes = read.csv("surveyBoxes.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
polyST = as.PolySet(SUA, projection="LL")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Add tagging data
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Source Data/"))
tags = read.csv("TaggingEvents.csv")
Tag1 = tags %>%
filter(Tag_Num == 505883 |
Tag_Num == 508798 |
Tag_Num == 555352 |
Tag_Num == 524866 |
Tag_Num == 508679)
Tag1 = Tag1 %>%
dplyr::select(Tag_Num, Date, Lon, Lat, Vessel)
Tag1 = write.csv("NB Tags.csv")
#Add tagging data
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Source Data/"))
tags = read.csv("TaggingEvents.csv")
Tag1 = tags %>%
filter(Tag_Num == 505883 |
Tag_Num == 508798 |
Tag_Num == 555352 |
Tag_Num == 524866 |
Tag_Num == 508679)
Tag1 = Tag1 %>%
dplyr::select(Tag_Num, Date, Lon, Lat, Vessel)
Tag1 %>% write.csv("NB Tags.csv")
