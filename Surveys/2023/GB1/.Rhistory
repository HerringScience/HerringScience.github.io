Tow_No, Time1, Time2, TowTime, Lat1, Lon1, Lat2, Lon2, No_jars,
Speed, Heading, TideDirection, Swell, WindDirection, WindSpeed,
AirTemp, Observers, Net, Gear, TowType, FlowmeterType, FlowReading1,
FlowReading2, NoRevs, DistanceCalc, Volume, AvgTowDepth, MaxTowDepth,
DiscDepthD, DiscDepthA, CTD_ID, CTD_Lat, CTD_Lon, AvgTemp, AvgSalinity,
SurfaceTemp, WaterDepth1, WaterDepth2)
Total %>% write_csv("planktonsamplingData.csv")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
Total %>% write_csv("Survey Data.csv")
##ECHOVIEW DATA##
#Land Data
can<-getData('GADM', download = FALSE, country="CAN", level=1, path = "C:/Users/herri/Documents/GitHub/HerringScience.github.io")
us = getData('GADM', download = FALSE, country = "USA", level = 1, path = "C:/Users/herri/Documents/GitHub/HerringScience.github.io")
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
if(surv == "SB")
{SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")}
if(surv == "GB"){
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")}
#Load functions
pathnames <- list.files(pattern="[.]R$", path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Functions"), full.names=TRUE)
sapply(pathnames, FUN=source)
#Echoview Data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Map = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Map") %>%
map_df(~read_csv(.))
Region = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Region") %>%
map_df(~read_csv(.))
NVessel = ifelse(Survey$NVessel == "Lady Janice II", "LJ",
ifelse(Survey$NVessel == "Sealife II", "SL",
ifelse(Survey$NVessel == "Lady Melissa", "LM",
ifelse(Survey$NVessel == "Canada 100", "C1",
ifelse(Survey$NVessel == "Fundy Monarch", "FM",
ifelse(Survey$NVessel == "Brunswick Provider", "BP",
ifelse(Survey$NVessel == "Leroy and Barry", "LB",
ifelse(Survey$NVessel == "Morning Star", "MS",
ifelse(Survey$NVessel == "Tasha Marie", "TM",
NA)))))))))
EVessel = ifelse(Survey$EVessel == "Lady Janice II", "LJ",
ifelse(Survey$EVessel == "Sealife II", "SL",
ifelse(Survey$EVessel == "Lady Melissa", "LM",
ifelse(Survey$EVessel == "Canada 100", "C1",
ifelse(Survey$EVessel == "Fundy Monarch", "FM",
ifelse(Survey$EVessel == "Brunswick Provider", "BP",
ifelse(Survey$EVessel == "Leroy and Barry", "LB",
ifelse(Survey$EVessel == "Morning Star", "MS",
ifelse(Survey$EVessel == "Tasha Marie", "TM",
NA)))))))))
if(surv == "SB"){
out = SBout
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1, TS50 = NA)
x = surveyTrack3(x=trans, polyNameA  = polySB_main, polyNameB  = polyNorthern,  polyNameC  = polyEastern,  title = name)
northern = trans[which((trans$Vessel == NVessel)), ]
eastern = trans[which((trans$Vessel == EVessel)), ]
main = trans[which((trans$Vessel %in% ids)), ]
PRCplot=ggplot(map, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
# Results
resultsa = biomassCalc(x = main, areaKm = SB1)
resultsb = biomassCalc(x = northern, areaKm = SB2)
resultsc = biomassCalc(x = eastern, areaKm = SB3)
tableA = resultTableA(x = main)
tableB = resultTableB(x = main)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = northern)
tableE = resultTableB(x = northern)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = eastern)
tableH = resultTableB(x = eastern)
tableI = resultTableC(x = resultsc)
tableC$Layer = "Main Box"
tableF$Layer = "Northern Box"
tableI$Layer = "Eastern Box"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
}
if(surv=="GB"){
out=GBMap
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1 , TS50 = NA)
ids = c("T01", "T02", "T03")
trans1 = trans[which((trans$Transect_No %in% ids)), ]
ids = c("T04", "T05", "T06", "T07")
trans2 = trans[which((trans$Transect_No %in% ids)), ]
x = surveyTrack2(x=trans1, polyNameA  = polyGB, polyNameB  = polySI, title = name )
if(adhoc=="TRUE"){SUA = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "adhoc") %>%
map_df(~read_csv(.))
polyAD = as.PolySet(SUA, projection="LL")
x = surveyTrack2(x=trans2, polyNameA  = polyGB, polyNameB  = polyAD, title = name )
ggplot(trans2, aes(x=X, y=Y)) + geom_polygon(data=polyAD,aes(x=X, y=Y, group=PID), fill = "white", colour = "black")  + geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size = 1)  + labs(x=NULL, y=NULL) + coord_map()
}
ids = c("T01", "T02", "T03")
map1 = map[which((map$Transect_No %in% ids)), ]
PRCplot=ggplot(map1, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
SI = trans[which(trans$Transect_No == "T03"), ]
ids = c("T01", "T02")
GB = trans[which((trans$Transect_No %in% ids)), ]
#Results
resultsa = biomassCalc(x = GB, areaKm = GB1)
resultsb = biomassCalc(x = SI, areaKm = GB2)
resultsc = biomassCalc(x = trans2, areaKm = GB3)
tableA = resultTableA(x = GB)
tableB = resultTableB(x = GB)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = SI)
tableE = resultTableB(x = SI)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = trans2)
tableH = resultTableB(x = trans2)
tableI = resultTableC(x = resultsc)
tableC$Layer = "German Bank"
tableF$Layer = "Seal Island"
tableI$Layer = "School Survey"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
ggsave("PRCplot.jpg", height = 15, width = 15, units = "cm")
###Turnover Calc###
SSB = read.csv(file = "C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv")
###Turnover Calc###
SSB = read_csv(file = "C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv")
###Turnover Calc###
SSB = read_csv("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv")
###Turnover Calc###
SSB = read_csv( "C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv")
###Turnover Calc###
SSB = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv"))
# remove everything in the workspace
rm(list = ls())
# IMPORTANT : SET GROUND, YEAR, AND SURVEY # HERE
surv="GB" #SB or GB
surv2="German Bank" #"German Bank" or "Scots Bay" as written
year="2023"
surv.no="1"
adhoc = "FALSE" #true or false if an adhoc survey was completed (and "adhoc.csv" exists)
Sample = "Y" #whether ("Y") or not ("N") they caught fish during this survey window
Tow = "Y" #whether or not plankton tow(s) were conducted
#(SB ONLY) Set main-box vessels
ids = c("FM", "LB", "LJ", "SL")
#Area and TS values
SB1= 661 #SB main area
SB2= 77 #SB north area
SB3= 115 #SB east area
GB1 = 511 #GB main area
GB2 = 299 #Seal Island area
GB3 = NA #Ad-hoc school survey area
##
###
##
#BELOW VALUES SHOULD RARELY CHANGE#
TS1 = -35.5 #TS38
#turnover calculation regression values
GB_y = 0.199392662629964
GB_x_var = 0.528381832773883
GB_days = 31
SB_y = 0.364102758434224
SB_x_var = 0.436969270679439
SB_days = 29
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
##Survey Data import and filtering
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Plankton = read_csv("PlanktonData.csv")
Plankton = Plankton %>%
mutate(Year = year,
Ground = surv,
Survey.No = surv.no,
TowTime = difftime(Time2, Time1, units = "mins"))
Plankton$Year = as.numeric(Plankton$Year)
Plankton$Swell = as.character(Plankton$Swell)
if(Sample == "Y"){Plankton$Sample = "Y"}
if(Sample == "N"){Plankton$Sample = "N"}
#get CTD data from Plankton
SurveyData = read_csv("Plan Data.csv")
SurveyData$StartDate = as.Date(SurveyData$Date, format = "%d/%m/%Y")
if(!is.na(first(Plankton$CTD_ID))){
CTDData = read_csv(paste0(Plankton$CTD_ID, ".csv"))
CTDData = CTDData %>%
dplyr::select(Pressure = "Pressure (Decibar)", Depth = "Depth (Meter)", Temperature = "Temperature (Celsius)",	Conductivity = "Conductivity (MicroSiemens per Centimeter)", Specific_conductance = "Specific conductance (MicroSiemens per Centimeter)",
Salinity = "Salinity (Practical Salinity Scale)", Sound_velocity = "Sound velocity (Meters per Second)", Density = "Density (Kilograms per Cubic Meter)")
CTDData = CTDData %>%
mutate(plankton_ID = paste0(first(Plankton$Set_Number), "/", last(Plankton$Set_Number)),
ground = surv2,
id = first(Plankton$CTD_ID),
Date = first(SurveyData$StartDate),
Lat = first(Plankton$CTD_Lat),
Lon = first(Plankton$CTD_Lon),
Year = first(year),
Survey = first(surv.no))
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data"))
CTDRaw = read_csv("CTD_Raw.csv")
CTDData$Year = as.numeric(CTDData$Year)
CTDData$Survey = as.numeric(CTDData$Survey)
CTDTotal = full_join(CTDRaw, CTDData)
CTDTotal %>% write_csv("CTD_Raw.csv")
Plankton = Plankton %>%
mutate(AvgTemp = mean(CTDData$Temperature),
AvgSalinity = mean(CTDData$Salinity))
}
if(is.na(first(Plankton$CTD_ID))){
Plankton = Plankton %>%
mutate(AvgTemp = NA,
AvgSalinity = NA)
}
#get Ruskin data
if(Tow == "Y"){
TowData = read_excel(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Ruskin.xlsx"), skip = 1, sheet = 'Data')
TowData$DateTime = TowData$Time
TowData$Date = substr(TowData$DateTime,1,10)
TowData$Date = as.Date(TowData$Date)
TowData$Time = substr(TowData$DateTime,12,19)
TowData$Time = hms::as_hms(TowData$Time)
#Filter tow data based on Time1 + Time2
Tow1 = TowData[TowData$Time >= first(Plankton$Time1) & TowData$Time <= first(Plankton$Time2),]
Tow2 = TowData[TowData$Time >= last(Plankton$Time1) & TowData$Time <= last(Plankton$Time2),]
#Calculate average and max tow depths for each
Tow1 = Tow1 %>%
mutate(AvgTowDepth = mean(Depth),
MaxTowDepth = max(Depth),
Tow_No = 1)
Tow2 = Tow2 %>%
mutate(AvgTowDepth = mean(Depth),
MaxTowDepth = max(Depth),
Tow_No = 2)
#ggplot the profiles for each tow
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Tow1 %>%
ggplot(aes(x = Time, y = Depth)) +
geom_path(size = 1, colour = "blue") +
scale_y_reverse() +
labs(y = "Depth (m)")
ggsave("Tow 1.jpg")
Tow2 %>%
ggplot(aes(x = Time, y = Depth)) +
geom_path(size = 1, colour = "blue") +
scale_y_reverse() +
labs(y = "Depth (m)")
ggsave("Tow 2.jpg")
#combine the avg and max values with plankton sheet
TowTbl1 = tibble_row(Tow_No = 1, AvgTowDepth = first(Tow1$AvgTowDepth), MaxTowDepth = first(Tow1$MaxTowDepth))
TowTbl2 = tibble_row(Tow_No = 2, AvgTowDepth = first(Tow2$AvgTowDepth), MaxTowDepth = first(Tow2$MaxTowDepth))
TowCalcs = full_join(TowTbl1, TowTbl2)
Plankton = full_join(Plankton, TowCalcs, by = "Tow_No")
}
#convert lat/lon before combining
Plankton$Lon1 = as.numeric(conv_unit(Plankton$Lon1, "deg_dec_min", "dec_deg"))*-1
Plankton$Lon2 = as.numeric(conv_unit(Plankton$Lon2, "deg_dec_min", "dec_deg"))*-1
Plankton$Lat1 = as.numeric(conv_unit(Plankton$Lat1, "deg_dec_min", "dec_deg"))
Plankton$Lat2 = as.numeric(conv_unit(Plankton$Lat2, "deg_dec_min", "dec_deg"))
Plankton = Plankton %>%
rename(id = Set_Number)
PlanData = read_csv((paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Plan Data.csv")))
PlanData$Survey.No = as.character(PlanData$Survey.No)
SurveyTotal = full_join(Plankton, PlanData)
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Source Data/"))
Survey = read_csv("planktonsamplingData.csv")
SurveyTotal$TowTime = as.numeric(SurveyTotal$TowTime)
Total = full_join(Survey, SurveyTotal)
Total = Total %>%
mutate(Day = as.numeric(substr(Date, 1, 2)),
Month = as.numeric(substr(Date, 4, 5)),
Year = as.numeric(substr(Date, 7, 10)),
TowTime = difftime(Time2, Time1, units ="mins"),
NoRevs = FlowReading2-FlowReading1,
DistanceCalc = NoRevs*26873/1000000,
Volume = DistanceCalc*3.1415)
Total = Total %>%
dplyr::select(Year, Month, Day, Date, Ground, id, Survey.No, Fishing, Sample,
StartTime, Vessel.No, ExtraBox, EVessel, NVessel, PlanktonVessel,
Tow_No, Time1, Time2, TowTime, Lat1, Lon1, Lat2, Lon2, No_jars,
Speed, Heading, TideDirection, Swell, WindDirection, WindSpeed,
AirTemp, Observers, Net, Gear, TowType, FlowmeterType, FlowReading1,
FlowReading2, NoRevs, DistanceCalc, Volume, AvgTowDepth, MaxTowDepth,
DiscDepthD, DiscDepthA, CTD_ID, CTD_Lat, CTD_Lon, AvgTemp, AvgSalinity,
SurfaceTemp, WaterDepth1, WaterDepth2)
Total %>% write_csv("planktonsamplingData.csv")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
Total %>% write_csv("Survey Data.csv")
##ECHOVIEW DATA##
#Land Data
can<-getData('GADM', download = FALSE, country="CAN", level=1, path = "C:/Users/herri/Documents/GitHub/HerringScience.github.io")
us = getData('GADM', download = FALSE, country = "USA", level = 1, path = "C:/Users/herri/Documents/GitHub/HerringScience.github.io")
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
if(surv == "SB")
{SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")}
if(surv == "GB"){
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")}
#Load functions
pathnames <- list.files(pattern="[.]R$", path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Functions"), full.names=TRUE)
sapply(pathnames, FUN=source)
#Echoview Data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Map = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Map") %>%
map_df(~read_csv(.))
Region = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Region") %>%
map_df(~read_csv(.))
NVessel = ifelse(Survey$NVessel == "Lady Janice II", "LJ",
ifelse(Survey$NVessel == "Sealife II", "SL",
ifelse(Survey$NVessel == "Lady Melissa", "LM",
ifelse(Survey$NVessel == "Canada 100", "C1",
ifelse(Survey$NVessel == "Fundy Monarch", "FM",
ifelse(Survey$NVessel == "Brunswick Provider", "BP",
ifelse(Survey$NVessel == "Leroy and Barry", "LB",
ifelse(Survey$NVessel == "Morning Star", "MS",
ifelse(Survey$NVessel == "Tasha Marie", "TM",
NA)))))))))
EVessel = ifelse(Survey$EVessel == "Lady Janice II", "LJ",
ifelse(Survey$EVessel == "Sealife II", "SL",
ifelse(Survey$EVessel == "Lady Melissa", "LM",
ifelse(Survey$EVessel == "Canada 100", "C1",
ifelse(Survey$EVessel == "Fundy Monarch", "FM",
ifelse(Survey$EVessel == "Brunswick Provider", "BP",
ifelse(Survey$EVessel == "Leroy and Barry", "LB",
ifelse(Survey$EVessel == "Morning Star", "MS",
ifelse(Survey$EVessel == "Tasha Marie", "TM",
NA)))))))))
if(surv == "SB"){
out = SBout
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1, TS50 = NA)
x = surveyTrack3(x=trans, polyNameA  = polySB_main, polyNameB  = polyNorthern,  polyNameC  = polyEastern,  title = name)
northern = trans[which((trans$Vessel == NVessel)), ]
eastern = trans[which((trans$Vessel == EVessel)), ]
main = trans[which((trans$Vessel %in% ids)), ]
PRCplot=ggplot(map, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
# Results
resultsa = biomassCalc(x = main, areaKm = SB1)
resultsb = biomassCalc(x = northern, areaKm = SB2)
resultsc = biomassCalc(x = eastern, areaKm = SB3)
tableA = resultTableA(x = main)
tableB = resultTableB(x = main)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = northern)
tableE = resultTableB(x = northern)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = eastern)
tableH = resultTableB(x = eastern)
tableI = resultTableC(x = resultsc)
tableC$Layer = "Main Box"
tableF$Layer = "Northern Box"
tableI$Layer = "Eastern Box"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
}
if(surv=="GB"){
out=GBMap
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1 , TS50 = NA)
ids = c("T01", "T02", "T03")
trans1 = trans[which((trans$Transect_No %in% ids)), ]
ids = c("T04", "T05", "T06", "T07")
trans2 = trans[which((trans$Transect_No %in% ids)), ]
x = surveyTrack2(x=trans1, polyNameA  = polyGB, polyNameB  = polySI, title = name )
if(adhoc=="TRUE"){SUA = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "adhoc") %>%
map_df(~read_csv(.))
polyAD = as.PolySet(SUA, projection="LL")
x = surveyTrack2(x=trans2, polyNameA  = polyGB, polyNameB  = polyAD, title = name )
ggplot(trans2, aes(x=X, y=Y)) + geom_polygon(data=polyAD,aes(x=X, y=Y, group=PID), fill = "white", colour = "black")  + geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size = 1)  + labs(x=NULL, y=NULL) + coord_map()
}
ids = c("T01", "T02", "T03")
map1 = map[which((map$Transect_No %in% ids)), ]
PRCplot=ggplot(map1, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
SI = trans[which(trans$Transect_No == "T03"), ]
ids = c("T01", "T02")
GB = trans[which((trans$Transect_No %in% ids)), ]
#Results
resultsa = biomassCalc(x = GB, areaKm = GB1)
resultsb = biomassCalc(x = SI, areaKm = GB2)
resultsc = biomassCalc(x = trans2, areaKm = GB3)
tableA = resultTableA(x = GB)
tableB = resultTableB(x = GB)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = SI)
tableE = resultTableB(x = SI)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = trans2)
tableH = resultTableB(x = trans2)
tableI = resultTableC(x = resultsc)
tableC$Layer = "German Bank"
tableF$Layer = "Seal Island"
tableI$Layer = "School Survey"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
ggsave("PRCplot.jpg", height = 15, width = 15, units = "cm")
###Turnover Calc###
SSB = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv"))
SSB = SSB %>% filter(Year == year) %>% dplyr::select(Date = Survey_Date, Biomass = HSC_Estimate, Ground, HSC_Turnover_Adjusted)
SSB = distinct(SSB)
#SB and GB turnover calculation
if(surv == "GB"){
y_intercept = GB_y
x_Var_1 = GB_x_var
daysturnover = GB_days
SSB = SSB %>% filter(Ground == "German Bank")
}
if(surv == "SB"){
y_intercept =  SB_y
x_Var_1 = SB_x_var
daysturnover = SB_days
SSB = SSB %>% filter(Ground == "Scots Bay")
}
SSB$Date = as.Date(SSB$Date)
resultsa$Date = as.Date(substr(resultsa$Date_Time_S, 0, 10))
resultsa = resultsa %>% arrange(Date)
Date = first(resultsa$Date)
Biomass = sum(resultsa$trans_biomass, resultsb$trans_biomass, resultsc$trans_biomass)
Current = tibble(Date, Biomass, surv2)
Current = Current %>% dplyr::select(Date, Biomass, Ground = surv2) %>% mutate(Current = "Y")
Surveys = full_join(Current, SSB)
Surveys = Surveys %>% arrange(Date)
Date = Surveys$Date
Survey = 1:length(Surveys$Date)
Biomass = Surveys$Biomass
TurnBio = turnoverBio(y_intercept, x_Var_1, daysturnover, Date, Survey, Biomass)
