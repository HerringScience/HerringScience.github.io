#(SB ONLY) Set main-box vessels
ids = c("C1", "FM", "LM", "LJ", "SL", "MS", "LB")
#Area and TS values
SB1= 661 #SB main area
SB2= 77 #SB north area
SB3= 115 #SB east area
GB1 = 511 #GB main area
GB2 = 299 #Seal Island area
GB3 = NA #Ad-hoc school survey area
##
###
##
#BELOW VALUES SHOULD RARELY CHANGE#
TS1 = -35.5 #TS38
#turnover calculation regression values
GB_y = 0.199392662629964
GB_x_var = 0.528381832773883
GB_days = 31
SB_y = 0.364102758434224
SB_x_var = 0.436969270679439
SB_days = 29
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
#Land Data
can<-getData('GADM', download = FALSE, country="CAN", level=1, path = paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io"))
us = getData('GADM', download = FALSE, country = "USA", level = 1, path = paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io"))
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
if(surv == "SB")
{
if(!is.na(PlanData$EVessel)){SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(PlanData$NVessel)){SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")}
if(surv == "GB"){
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")}
#Load functions
pathnames <- list.files(pattern="[.]R$", path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Functions"), full.names=TRUE)
sapply(pathnames, FUN=source)
#Echoview Data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Map = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Map") %>%
map_df(~read_csv(.))
Region = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Region") %>%
map_df(~read_csv(.))
if(surv=="SB"){NVessel = ifelse(Survey$NVessel == "Lady Janice II", "LJ",
ifelse(Survey$NVessel == "Sealife II", "SL",
ifelse(Survey$NVessel == "Lady Melissa", "LM",
ifelse(Survey$NVessel == "Canada 100", "C1",
ifelse(Survey$NVessel == "Fundy Monarch", "FM",
ifelse(Survey$NVessel == "Brunswick Provider", "BP",
ifelse(Survey$NVessel == "Leroy and Barry", "LB",
ifelse(Survey$NVessel == "Morning Star", "MS",
ifelse(Survey$NVessel == "Tasha Marie", "TM",
NA)))))))))
EVessel = ifelse(Survey$EVessel == "Lady Janice II", "LJ",
ifelse(Survey$EVessel == "Sealife II", "SL",
ifelse(Survey$EVessel == "Lady Melissa", "LM",
ifelse(Survey$EVessel == "Canada 100", "C1",
ifelse(Survey$EVessel == "Fundy Monarch", "FM",
ifelse(Survey$EVessel == "Brunswick Provider", "BP",
ifelse(Survey$EVessel == "Leroy and Barry", "LB",
ifelse(Survey$EVessel == "Morning Star", "MS",
ifelse(Survey$EVessel == "Tasha Marie", "TM",
NA)))))))))
out = SBout
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1, TS50 = NA)
northern = trans[which((trans$Vessel == NVessel)), ]
eastern = trans[which((trans$Vessel == EVessel)), ]
main = trans[which((trans$Vessel %in% ids)), ]
PRCplot=ggplot(map, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
# Results
resultsa = biomassCalc(x = main, areaKm = SB1)
resultsb = biomassCalc(x = northern, areaKm = SB2)
resultsc = biomassCalc(x = eastern, areaKm = SB3)
tableA = resultTableA(x = main)
tableB = resultTableB(x = main)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = northern)
tableE = resultTableB(x = northern)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = eastern)
tableH = resultTableB(x = eastern)
tableI = resultTableC(x = resultsc)
tableC$Layer = "Main Box"
tableF$Layer = "Northern Box"
tableI$Layer = "Eastern Box"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
}
if(surv=="GB"){
out=GBMap
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1 , TS50 = NA)
ids = c("T01", "T02", "T03", "T04")
trans1 = trans[which((trans$Transect_No %in% ids)), ]
ids = c("T05", "T06", "T07")
trans2 = trans[which((trans$Transect_No %in% ids)), ]
x = surveyTrack2(x=trans1, polyNameA  = polyGB, polyNameB  = polySI, title = name )
if(adhoc=="TRUE"){SUA = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "adhoc") %>%
map_df(~read_csv(.))
polyAD = as.PolySet(SUA, projection="LL")
x = surveyTrack2(x=trans2, polyNameA  = polyGB, polyNameB  = polyAD, title = name )
ggplot(trans2, aes(x=X, y=Y)) + geom_polygon(data=polyAD,aes(x=X, y=Y, group=PID), fill = "white", colour = "black")  + geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size = 1)  + labs(x=NULL, y=NULL) + coord_map()
}
ids = c("T01", "T02", "T03", "T04")
map1 = map[which((map$Transect_No %in% ids)), ]
PRCplot=ggplot(map1, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
SI = trans[which(trans$Transect_No == c("T03", "T04")), ]
ids = c("T01", "T02")
GB = trans[which((trans$Transect_No %in% ids)), ]
#Results
resultsa = biomassCalc(x = GB, areaKm = GB1)
resultsb = biomassCalc(x = SI, areaKm = GB2)
resultsc = biomassCalc(x = trans2, areaKm = GB3)
tableA = resultTableA(x = GB)
tableB = resultTableB(x = GB)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = SI)
tableE = resultTableB(x = SI)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = trans2)
tableH = resultTableB(x = trans2)
tableI = resultTableC(x = resultsc)
tableC$Layer = "German Bank"
tableF$Layer = "Seal Island"
tableI$Layer = "School Survey"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
ggsave("PRCplot.jpg", height = 15, width = 15, units = "cm")
###Turnover Calc###
SSB = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv"))
SSB = SSB %>% filter(Year == year) %>% dplyr::select(Date = Survey_Date, Biomass = HSC_Estimate, Ground, HSC_Turnover_Adjusted)
SSB = distinct(SSB)
#SB and GB turnover calculation
if(surv == "GB"){
y_intercept = GB_y
x_Var_1 = GB_x_var
daysturnover = GB_days
SSBSI = SSB %>% filter(Ground == "Seal Island")
SSB = SSB %>% filter(Ground == "German Bank")
}
if(surv == "SB"){
y_intercept =  SB_y
x_Var_1 = SB_x_var
daysturnover = SB_days
SSB = SSB %>% filter(Ground == "Scots Bay")
}
SSB$Date = as.Date(SSB$Date)
resultsa$Date = as.Date(substr(resultsa$Date_Time_S, 0, 10))
resultsa = resultsa %>% arrange(Date)
Date = first(resultsa$Date)
if(surv=="GB"){
Biomass = sum(resultsa$trans_biomass)
BiomassSI = sum(resultsb$trans_biomass)}
if(surv=="SB"){
Biomass = sum(resultsa$trans_biomass, resultsb$trans_biomass, resultsc$trans_biomass, na.rm = TRUE)}
Current = tibble(Date, Biomass, surv2)
Current = Current %>% dplyr::select(Date, Biomass, Ground = surv2) %>% mutate(Current = "Y")
if(surv=="GB"){SealIsland = tibble(Year = as.integer(year), Date, BiomassSI, Ground = "Seal Island", Survey_Number = as.integer(surv.no))}
Surveys = full_join(Current, SSB)
Surveys = Surveys %>% arrange(Date)
Date = Surveys$Date
Survey = 1:length(Surveys$Date)
Biomass = Surveys$Biomass
if(surv.no > 1){
TurnBio = turnoverBio(y_intercept, x_Var_1, daysturnover, Date, Survey, Biomass)
Previous = Surveys %>% filter(is.na(Current))
Previous = sum(Previous$HSC_Turnover_Adjusted)
Turnover = TurnBio-Previous
Current$Turnover = Turnover
#Add it to Table C
C$Turnover = Turnover
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
PlanData = read_csv((paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Plan Data.csv")))
PlanData$Survey.No = as.character(PlanData$Survey.No)
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Source Data/"))
Survey = read_csv("planktonsamplingData.csv")
##ECHOVIEW DATA##
#Land Data
can<-getData('GADM', download = FALSE, country="CAN", level=1, path = paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io"))
us = getData('GADM', download = FALSE, country = "USA", level = 1, path = paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io"))
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
if(surv == "SB")
{
if(!is.na(PlanData$EVessel)){SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(PlanData$NVessel)){SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")}
if(surv == "GB"){
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")}
#Load functions
pathnames <- list.files(pattern="[.]R$", path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Functions"), full.names=TRUE)
sapply(pathnames, FUN=source)
#Echoview Data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Map = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Map") %>%
map_df(~read_csv(.))
Region = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Region") %>%
map_df(~read_csv(.))
if(surv=="SB"){NVessel = ifelse(Survey$NVessel == "Lady Janice II", "LJ",
ifelse(Survey$NVessel == "Sealife II", "SL",
ifelse(Survey$NVessel == "Lady Melissa", "LM",
ifelse(Survey$NVessel == "Canada 100", "C1",
ifelse(Survey$NVessel == "Fundy Monarch", "FM",
ifelse(Survey$NVessel == "Brunswick Provider", "BP",
ifelse(Survey$NVessel == "Leroy and Barry", "LB",
ifelse(Survey$NVessel == "Morning Star", "MS",
ifelse(Survey$NVessel == "Tasha Marie", "TM",
NA)))))))))
EVessel = ifelse(Survey$EVessel == "Lady Janice II", "LJ",
ifelse(Survey$EVessel == "Sealife II", "SL",
ifelse(Survey$EVessel == "Lady Melissa", "LM",
ifelse(Survey$EVessel == "Canada 100", "C1",
ifelse(Survey$EVessel == "Fundy Monarch", "FM",
ifelse(Survey$EVessel == "Brunswick Provider", "BP",
ifelse(Survey$EVessel == "Leroy and Barry", "LB",
ifelse(Survey$EVessel == "Morning Star", "MS",
ifelse(Survey$EVessel == "Tasha Marie", "TM",
NA)))))))))
out = SBout
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1, TS50 = NA)
northern = trans[which((trans$Vessel == NVessel)), ]
eastern = trans[which((trans$Vessel == EVessel)), ]
main = trans[which((trans$Vessel %in% ids)), ]
PRCplot=ggplot(map, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
# Results
resultsa = biomassCalc(x = main, areaKm = SB1)
resultsb = biomassCalc(x = northern, areaKm = SB2)
resultsc = biomassCalc(x = eastern, areaKm = SB3)
tableA = resultTableA(x = main)
tableB = resultTableB(x = main)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = northern)
tableE = resultTableB(x = northern)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = eastern)
tableH = resultTableB(x = eastern)
tableI = resultTableC(x = resultsc)
tableC$Layer = "Main Box"
tableF$Layer = "Northern Box"
tableI$Layer = "Eastern Box"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
}
if(surv=="GB"){
out=GBMap
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = TS1 , TS50 = NA)
ids = c("T01", "T02", "T03", "T04")
trans1 = trans[which((trans$Transect_No %in% ids)), ]
ids = c("T05", "T06", "T07")
trans2 = trans[which((trans$Transect_No %in% ids)), ]
x = surveyTrack2(x=trans1, polyNameA  = polyGB, polyNameB  = polySI, title = name )
if(adhoc=="TRUE"){SUA = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "adhoc") %>%
map_df(~read_csv(.))
polyAD = as.PolySet(SUA, projection="LL")
x = surveyTrack2(x=trans2, polyNameA  = polyGB, polyNameB  = polyAD, title = name )
ggplot(trans2, aes(x=X, y=Y)) + geom_polygon(data=polyAD,aes(x=X, y=Y, group=PID), fill = "white", colour = "black")  + geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size = 1)  + labs(x=NULL, y=NULL) + coord_map()
}
ids = c("T01", "T02", "T03", "T04")
map1 = map[which((map$Transect_No %in% ids)), ]
PRCplot=ggplot(map1, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL, title = "PRC Area Backscattering Coefficient (m2/m2) for each transect")
SI = trans[which(trans$Transect_No == c("T03", "T04")), ]
ids = c("T01", "T02")
GB = trans[which((trans$Transect_No %in% ids)), ]
#Results
resultsa = biomassCalc(x = GB, areaKm = GB1)
resultsb = biomassCalc(x = SI, areaKm = GB2)
resultsc = biomassCalc(x = trans2, areaKm = GB3)
tableA = resultTableA(x = GB)
tableB = resultTableB(x = GB)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = SI)
tableE = resultTableB(x = SI)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = trans2)
tableH = resultTableB(x = trans2)
tableI = resultTableC(x = resultsc)
tableC$Layer = "German Bank"
tableF$Layer = "Seal Island"
tableI$Layer = "School Survey"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
ggsave("PRCplot.jpg", height = 15, width = 15, units = "cm")
###Turnover Calc###
SSB = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv"))
SSB = SSB %>% filter(Year == year) %>% dplyr::select(Date = Survey_Date, Biomass = HSC_Estimate, Ground, HSC_Turnover_Adjusted)
SSB = distinct(SSB)
#SB and GB turnover calculation
if(surv == "GB"){
y_intercept = GB_y
x_Var_1 = GB_x_var
daysturnover = GB_days
SSBSI = SSB %>% filter(Ground == "Seal Island")
SSB = SSB %>% filter(Ground == "German Bank")
}
if(surv == "SB"){
y_intercept =  SB_y
x_Var_1 = SB_x_var
daysturnover = SB_days
SSB = SSB %>% filter(Ground == "Scots Bay")
}
SSB$Date = as.Date(SSB$Date)
resultsa$Date = as.Date(substr(resultsa$Date_Time_S, 0, 10))
resultsa = resultsa %>% arrange(Date)
Date = first(resultsa$Date)
if(surv=="GB"){
Biomass = sum(resultsa$trans_biomass)
BiomassSI = sum(resultsb$trans_biomass)}
if(surv=="SB"){
Biomass = sum(resultsa$trans_biomass, resultsb$trans_biomass, resultsc$trans_biomass, na.rm = TRUE)}
Current = tibble(Date, Biomass, surv2)
Current = Current %>% dplyr::select(Date, Biomass, Ground = surv2) %>% mutate(Current = "Y")
if(surv=="GB"){SealIsland = tibble(Year = as.integer(year), Date, BiomassSI, Ground = "Seal Island", Survey_Number = as.integer(surv.no))}
Surveys = full_join(Current, SSB)
Surveys = Surveys %>% arrange(Date)
Date = Surveys$Date
Survey = 1:length(Surveys$Date)
Biomass = Surveys$Biomass
if(surv.no > 1){
TurnBio = turnoverBio(y_intercept, x_Var_1, daysturnover, Date, Survey, Biomass)
Previous = Surveys %>% filter(is.na(Current))
Previous = sum(Previous$HSC_Turnover_Adjusted)
Turnover = TurnBio-Previous
Current$Turnover = Turnover
#Add it to Table C
C$Turnover = Turnover
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
#Update SSB Estimates
SSB = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv"))
SSB$Survey_Date = as.Date(SSB$Survey_Date)
Current$Year = as.integer(year)
Current$Survey_Number = as.integer(surv.no)
if(surv.no > 1){Current = Current %>% dplyr::select(Year, Ground, Survey_Number, Survey_Date = Date, HSC_Estimate = Biomass, HSC_Turnover_Adjusted = Turnover)}
if(surv.no == 1){Current = Current %>% dplyr::select(Year, Ground, Survey_Number, Survey_Date = Date, HSC_Estimate = Biomass)}
if(surv=="GB"){SealIsland = SealIsland %>% dplyr::select(Year, Ground, Survey_Number, Survey_Date = Date, HSC_Estimate = BiomassSI)}
SSB = full_join(SSB, Current)
if(surv=="GB"){SSB = full_join(SSB, SealIsland)}
SSB = SSB %>% arrange(Year)
SSB %>% write_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Main Data/SSB Estimates.csv"))
###Performance data import and filtering###
actual = A
actual = actual %>% mutate(Type = "Actual")
plan = list.files(pattern = "*plan.csv") %>% map_df(~read_csv(.))
plan = plan %>% mutate(Type = "Plan")
wd = getwd()
Perform = full_join(actual, plan) %>% mutate(Survey = surv.no) %>% mutate(Location = surv)
Perform = Perform %>% rename(End.Lat="End Lat", End.Lon="End Lon", Start.Lat="Start Lat", Start.Lon="Start Lon", Dist..km.="Dist (km)", Date.Time.Start="Date Time Start", Date.Time.End="Date Time End", Transect.No.="Transect No.")
Perform = Perform %>% mutate(Distance = distHaversine(cbind(Start.Lon,Start.Lat), cbind(End.Lon,End.Lat))) %>% mutate(Distance = Distance/1000)
Perform = Perform %>% mutate(Distance = ifelse(is.na(Dist..km.), Distance, Dist..km.))
#calculate time/speed
Perform<-Perform %>% mutate(Start=as.POSIXct(Date.Time.Start, origin = "1970-01-01")) %>%
mutate(End=as.POSIXct(Date.Time.End, origin = "1970-01-01")) %>%
mutate(Duration = as.numeric(End-Start)*60) %>%
mutate(Speed = ((Distance*1000)/(Duration))/60)
Perform<-Perform %>% mutate(Speed = Speed*1.94384) #convert from m/s to knots
Perform<-Perform %>% mutate(Year = as.numeric(substr(Start, 1, 4)))
Perform<-Perform %>% mutate(Date = date(Start))
#summarize speed by Transect
Speed<-Perform %>%
dplyr::group_by(Vessel, Transect.No.) %>%
dplyr::summarize(Speed = mean(Speed, na.rm = TRUE)) %>%
filter(!Speed == "NaN") %>%
mutate(Transect = as.factor(Transect.No.))
#group by survey + vessel + type, summarize distance
Distance<-Perform %>%
dplyr::group_by(Vessel, Type) %>%
dplyr::summarize(Distance = sum(Distance)) %>%
spread(Type, Distance, fill = 0) %>%
transmute(Vessel, Difference = Actual-Plan)
Speed %>% write_csv("Speed.csv")
Distance %>% write_csv("Distance.csv")
Perform %>% write_csv("Performance Total.csv")
View(plan)
plan = list.files(pattern = "*plan.csv") %>% map_df(~read_csv(.))
View(plan)
plan = plan %>% mutate(Type = "Plan")
View(plan)
actual = A
actual = actual %>% mutate(Type = "Actual")
plan = list.files(pattern = "*plan.csv") %>% map_df(~read_csv(.))
plan = plan %>% mutate(Type = "Plan")
wd = getwd()
Perform = full_join(actual, plan) %>% mutate(Survey = surv.no) %>% mutate(Location = surv)
Perform = Perform %>% rename(End.Lat="End Lat", End.Lon="End Lon", Start.Lat="Start Lat", Start.Lon="Start Lon", Dist..km.="Dist (km)", Date.Time.Start="Date Time Start", Date.Time.End="Date Time End", Transect.No.="Transect No.")
Perform = Perform %>% mutate(Distance = distHaversine(cbind(Start.Lon,Start.Lat), cbind(End.Lon,End.Lat))) %>% mutate(Distance = Distance/1000)
Perform = Perform %>% mutate(Distance = ifelse(is.na(Dist..km.), Distance, Dist..km.))
#calculate time/speed
Perform<-Perform %>% mutate(Start=as.POSIXct(Date.Time.Start, origin = "1970-01-01")) %>%
mutate(End=as.POSIXct(Date.Time.End, origin = "1970-01-01")) %>%
mutate(Duration = as.numeric(End-Start)*60) %>%
mutate(Speed = ((Distance*1000)/(Duration))/60)
Perform<-Perform %>% mutate(Speed = Speed*1.94384) #convert from m/s to knots
Perform<-Perform %>% mutate(Year = as.numeric(substr(Start, 1, 4)))
Perform<-Perform %>% mutate(Date = date(Start))
#summarize speed by Transect
Speed<-Perform %>%
dplyr::group_by(Vessel, Transect.No.) %>%
dplyr::summarize(Speed = mean(Speed, na.rm = TRUE)) %>%
filter(!Speed == "NaN") %>%
mutate(Transect = as.factor(Transect.No.))
#group by survey + vessel + type, summarize distance
Distance<-Perform %>%
dplyr::group_by(Vessel, Type) %>%
dplyr::summarize(Distance = sum(Distance)) %>%
spread(Type, Distance, fill = 0) %>%
transmute(Vessel, Difference = Actual-Plan)
Speed %>% write_csv("Speed.csv")
Distance %>% write_csv("Distance.csv")
Perform %>% write_csv("Performance Total.csv")
if(surv == "SB"){
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Daily.jpg"), rel_path = FALSE)
}
View(tableB)
