boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Load functions
pathnames <- list.files(pattern="[.]R$", path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Functions"), full.names=TRUE)
sapply(pathnames, FUN=source)
#Echoview Data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Map = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Map") %>%
map_df(~read_csv(.))
Region = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Region") %>%
map_df(~read_csv(.))
if(surv == "SB"){
out = SBout
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = SBTS1, TS50 = NA)
x = surveyTrack3(x=trans, polyNameA  = polySB_main, polyNameB  = polyNorthern,  polyNameC  = polyEastern,  title = name)
northern = trans[which((trans$Vessel == NorthVessel)), ]
eastern = trans[which((trans$Vessel == EastVessel)), ]
main = trans[which((trans$Vessel %in% ids)), ]
ggplot(map, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL)
# Results
resultsa = biomassCalc(x = main, areaKm = SB1)
resultsb = biomassCalc(x = northern, areaKm = SB2)
resultsc = biomassCalc(x = eastern, areaKm = SB3)
tableA = resultTableA(x = main)
tableB = resultTableB(x = main)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = northern)
tableE = resultTableB(x = northern)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = eastern)
tableH = resultTableB(x = eastern)
tableI = resultTableC(x = resultsc)
tableC$Layer = "Main Box"
tableF$Layer = "Northern Box"
tableI$Layer = "Eastern Box"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
}
if(surv=="GB"){
out=GBMap
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = GBTS1 , TS50 = NA)
ids = c("T01", "T02", "T03")
trans1 = trans[which((trans$Transect_No %in% ids)), ]
ids = c("T04", "T05", "T06", "T07")
trans2 = trans[which((trans$Transect_No %in% ids)), ]
x = surveyTrack2(x=trans1, polyNameA  = polyGB, polyNameB  = polySI, title = name )
if(adhoc=="TRUE"){SUA = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "adhoc") %>%
map_df(~read_csv(.))
polyAD = as.PolySet(SUA, projection="LL")
x = surveyTrack2(x=trans2, polyNameA  = polyGB, polyNameB  = polyAD, title = name )
ggplot(trans2, aes(x=X, y=Y)) + geom_polygon(data=polyAD,aes(x=X, y=Y, group=PID), fill = "white", colour = "black")  + geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size = 1)  + labs(x=NULL, y=NULL) + coord_map()
}
ids = c("T01", "T02", "T03")
map1 = map[which((map$Transect_No %in% ids)), ]
ggplot(map1, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL)
SI = trans[which(trans$Transect_No == "T03"), ]
ids = c("T01", "T02")
GB = trans[which((trans$Transect_No %in% ids)), ]
#Results
resultsa = biomassCalc(x = GB, areaKm = GB1)
resultsb = biomassCalc(x = SI, areaKm = GB2)
resultsc = biomassCalc(x = trans2, areaKm = GB3)
tableA = resultTableA(x = GB)
tableB = resultTableB(x = GB)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = SI)
tableE = resultTableB(x = SI)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = trans2)
tableH = resultTableB(x = trans2)
tableI = resultTableC(x = resultsc)
tableC$Layer = "German Bank"
tableF$Layer = "Seal Island"
tableI$Layer = "School Survey"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
#Turnover Calc
if(surv == "GB"){
y_intercept <- 0.199392662629964
x_Var_1 <-0.528381832773883
Bio = tableC %>% filter(Layer == "German Bank")
}
if(surv == "SB"){
y_intercept <- 0.364102758434224
x_Var_1 <-0.436969270679439
Bio = tableC %>% filter(Layer == "Scots Bay")
}
resultsa$Date <-
as.Date(substr(resultsa$Date_Time_S, 0, 10))
Date <- resultsa$Date
Survey <- 1:length(resultsa$Date)
Biomass <- resultsa$total_biomass
turnoverBio(y_intercept, x_Var_1, daysturnover, Date, Survey, Biomass)
View(resultsb)
resultsa$Date <-
as.Date(substr(resultsa$Date_Time_S, 0, 10))
Date <- resultsa$Date
Survey <- 1:length(resultsa$Date)
Biomass <- resultsa$trans_biomass
turnoverBio(y_intercept, x_Var_1, daysturnover, Date, Survey, Biomass)
View(tableA)
View(tableB)
View(tableC)
View(tableC)
tableC$Turnover = TurnBio
TurnBio = turnoverBio(y_intercept, x_Var_1, daysturnover, Date, Survey, Biomass)
tableC$Turnover = TurnBio
View(tableC)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
View(tableC)
a=tableC %>% filter(Layer == "German Bank" | Layer == "Scots Bay")
b=a$`Biomass (tons)`
b=format(b, big.mark=(","), digits=2)
c=a$Turnover
View(a)
a=tableC %>% filter(Layer == "German Bank" | Layer == "Scots Bay")
b=a$`Biomass (tons)`
b=format(b, big.mark=(","), digits=2)
c=as.numeric(a$Turnover)
a=tableC %>% filter(Layer == "German Bank" | Layer == "Scots Bay")
b=a$`Biomass (tons)`
b=format(b, big.mark=(","), digits=2)
c=as.numeric(a$Turnover)
c=format(c, big.mark=(","), digits=2)
a=tableC %>% filter(Layer == "German Bank" | Layer == "Scots Bay")
b=a$`Biomass (tons)`
b=format(b, big.mark=(","), digits=2)
c=as.numeric(a$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
d=d$'Biomass (tons)'
d=format(d, big.mark=(","), digits=2)
f=unique(ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt.")))
a=tableC %>% filter(Layer == "German Bank" | Layer == "Scots Bay")
b=a$`Biomass (tons)`
b=format(b, big.mark=(","), digits=2)
c=as.numeric(a$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
d=d$'Biomass (tons)'
d=format(d, big.mark=(","), digits=2)
a=tableC %>% filter(Layer == "German Bank" | Layer == "Scots Bay")
b=a$`Biomass (tons)`
b=format(b, big.mark=(","), digits=2)
c=as.numeric(a$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
View(d)
View(tableC)
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
rm(list = ls())
#Change these options
surv = "GB"
surv2 = "German Bank"
year = "2022"
surv.no = "4"
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
#Survey Data
Survey = read_csv("Survey Data.csv") #Survey Data
Survey$Year = as.factor(Survey$Year)
Survey$Ground = as.factor(Survey$Ground)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
CTD2=CTD
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$surv.No <- as.factor(Larval$surv.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
Tag = Tag %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
CTD = CTD %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
current=paste0(unique(Survey$Ground), unique(Survey$Survey.No))
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current))
Map = list.files(pattern = "Map*") %>%
map_df(~read_csv(.))
Region = list.files(pattern = "Region*") %>%
map_df(~read_csv(.))
Speed=read_csv("Speed.csv")
Distance=read_csv("Distance.csv")
SurveyTotal=read_csv("Performance Total.csv")
#Results Tables
tableB=read_csv("tableB.csv") %>% dplyr::select(-Distance)
tableC=read_csv("tableC.csv")
View(tableC)
a=tableC %>% filter(Layer == "German Bank" | Layer == "Scots Bay")
b=a$`Biomass (tons)`
b=format(b, big.mark=(","), digits=2)
c=as.numeric(a$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
d=d$'Biomass (tons)'
d=format(d, big.mark=(","), digits=2)
f=unique(ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt.")))
f
View(a)
View(tableC)
# remove everything in the workspace
rm(list = ls())
# IMPORTANT : SET GROUND, YEAR, AND SURVEY # HERE
surv="GB"
surv2="German Bank"
year="2022"
surv.no="4"
adhoc = "FALSE" #true or false if an adhoc survey was completed (and "adhoc.csv" exists)
daysturnover = 31 #days since last survey on same ground
#Set vessels for SB only
ids = c("LM","LB", "MS", "SL", "C1", "BP")
NorthVessel = "NA" #set NA if none
EastVessel = "NA" #set NA if none
#Area and TS values
SB1= 640 #SB main area
SB2= 77 #SB north area
SB3= 115 #SB east area
SBTS1 = -35.5 #TS38
GBTS1 = -35.5 #TS38
GB1 = 800 #GB main area
GB2 = 280 #Seal Island area
GB3 = NA #Ad-hoc school survey area
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
##Tagging Data
#Data import and filtering
Tag <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tag$Date = ymd(Tag$Date)
Tag <- Tag %>% mutate(Julian = yday(Date)) #add Julian day
Tag <- Tag %>% mutate(Year = as.numeric(substr(Date, 1, 4)))
Tag = Tag %>% dplyr::select(-Tag_Annual)
#Add tags per year per tagger
Tag_Annual = Tag %>%
group_by(Tagger) %>%
mutate(count = n_distinct(Year)) %>%
summarize(n=n(),
count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2)
Tag_Annual = Tag_Annual %>%
dplyr::select(-n, -count2)
Tag = left_join(Tag, Tag_Annual, by = "Tagger")
#Adding Ground
Tag <- Tag %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay",
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other')))
#Change any 'Sealife' to 'Sealife II', and other corrections
Tag$Vessel = as.factor(Tag$Vessel)
summary(Tag$Vessel) #spot any issues
Tag$Vessel[which(Tag$Vessel=="Sealife")] <- "Sealife II"
Tag$Vessel[which(Tag$Vessel=="Lady Meliss")] <- "Lady Melissa"
Tag$Vessel[which(Tag$Vessel=="Lady Janice II")] <- "Lady Janice"
summary(Tag$Vessel) #double check
Tag %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
##ECHOVIEW DATA##
#Land Data
can<-getData('GADM', download = FALSE, country="CAN", level=1, path = "C:/Users/herri/Documents/GitHub/HerringScience.github.io")
us = getData('GADM', download = FALSE, country = "USA", level = 1, path = "C:/Users/herri/Documents/GitHub/HerringScience.github.io")
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Load functions
pathnames <- list.files(pattern="[.]R$", path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Functions"), full.names=TRUE)
sapply(pathnames, FUN=source)
#Echoview Data
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Map = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Map") %>%
map_df(~read_csv(.))
Region = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "Region") %>%
map_df(~read_csv(.))
if(surv == "SB"){
out = SBout
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = SBTS1, TS50 = NA)
x = surveyTrack3(x=trans, polyNameA  = polySB_main, polyNameB  = polyNorthern,  polyNameC  = polyEastern,  title = name)
northern = trans[which((trans$Vessel == NorthVessel)), ]
eastern = trans[which((trans$Vessel == EastVessel)), ]
main = trans[which((trans$Vessel %in% ids)), ]
ggplot(map, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL)
# Results
resultsa = biomassCalc(x = main, areaKm = SB1)
resultsb = biomassCalc(x = northern, areaKm = SB2)
resultsc = biomassCalc(x = eastern, areaKm = SB3)
tableA = resultTableA(x = main)
tableB = resultTableB(x = main)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = northern)
tableE = resultTableB(x = northern)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = eastern)
tableH = resultTableB(x = eastern)
tableI = resultTableC(x = resultsc)
tableC$Layer = "Main Box"
tableF$Layer = "Northern Box"
tableI$Layer = "Eastern Box"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
}
if(surv=="GB"){
out=GBMap
map = mapDat(x = Map)
x = Region
trans = transects(x= Region, TS38 = GBTS1 , TS50 = NA)
ids = c("T01", "T02", "T03")
trans1 = trans[which((trans$Transect_No %in% ids)), ]
ids = c("T04", "T05", "T06", "T07")
trans2 = trans[which((trans$Transect_No %in% ids)), ]
x = surveyTrack2(x=trans1, polyNameA  = polyGB, polyNameB  = polySI, title = name )
if(adhoc=="TRUE"){SUA = list.files(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no), pattern = "adhoc") %>%
map_df(~read_csv(.))
polyAD = as.PolySet(SUA, projection="LL")
x = surveyTrack2(x=trans2, polyNameA  = polyGB, polyNameB  = polyAD, title = name )
ggplot(trans2, aes(x=X, y=Y)) + geom_polygon(data=polyAD,aes(x=X, y=Y, group=PID), fill = "white", colour = "black")  + geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size = 1)  + labs(x=NULL, y=NULL) + coord_map()
}
ids = c("T01", "T02", "T03")
map1 = map[which((map$Transect_No %in% ids)), ]
ggplot(map1, aes(x=Xend, y=Yend)) + geom_point(aes(colour = Vessel, size = PRC_ABC)) + labs(x=NULL, y=NULL)
SI = trans[which(trans$Transect_No == "T03"), ]
ids = c("T01", "T02")
GB = trans[which((trans$Transect_No %in% ids)), ]
#Results
resultsa = biomassCalc(x = GB, areaKm = GB1)
resultsb = biomassCalc(x = SI, areaKm = GB2)
resultsc = biomassCalc(x = trans2, areaKm = GB3)
tableA = resultTableA(x = GB)
tableB = resultTableB(x = GB)
tableC = resultTableC(x = resultsa)
tableD = resultTableA(x = SI)
tableE = resultTableB(x = SI)
tableF = resultTableC(x = resultsb)
tableG = resultTableA(x = trans2)
tableH = resultTableB(x = trans2)
tableI = resultTableC(x = resultsc)
tableC$Layer = "German Bank"
tableF$Layer = "Seal Island"
tableI$Layer = "School Survey"
A = rbind(tableA,tableD, tableG)
B = rbind(tableB,tableE, tableH)
C = rbind(tableC,tableF, tableI)
write.table(A, file= "tableA.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(B, file= "tableB.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)}
#Turnover Calc
if(surv == "GB"){
y_intercept <- 0.199392662629964
x_Var_1 <-0.528381832773883
Bio = C %>% filter(Layer == "German Bank")
}
if(surv == "SB"){
y_intercept <- 0.364102758434224
x_Var_1 <-0.436969270679439
Bio = C %>% filter(Layer == "Scots Bay")
}
resultsa$Date <-
as.Date(substr(resultsa$Date_Time_S, 0, 10))
Date <- resultsa$Date
Survey <- 1:length(resultsa$Date)
Biomass <- resultsa$trans_biomass
TurnBio = turnoverBio(y_intercept, x_Var_1, daysturnover, Date, Survey, Biomass)
C$Turnover = TurnBio
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
write.table(C, file= "tableC.csv", sep = ",", quote=FALSE, row.names=FALSE, col.names=TRUE)
