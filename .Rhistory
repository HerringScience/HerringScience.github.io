library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(dplyr)
library(geonames)
library(mgcv)
library(scales)
completeReturns <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/complete.returns.csv"))
TaggingEvents <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
# TaggingEvents <- TaggingEvents %>%
#      rename(Tag_Num = TAG_NUMBER)
names(TaggingEvents)[names(TaggingEvents) == 'Tag_Num'] <- 'TAG_NUMBER'
rawReturn <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/rawReturn.csv"))
#relINFO <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/relINFO.csv"))
completeReturns <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/complete.returns.csv"))
polysNAFO <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/NAFO_subunits.csv"))
polysT <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/timGrounds.csv"))
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
#rm(TagReturns)
# Assigning of Grounds
area1=polysT[which(polysT$Box == "NB Coastal"), ]
area2=polysT[which(polysT$Box == "Grand Manan"), ]
area3=polysT[which(polysT$Box == "Grand Manan Banks"), ]
area4=polysT[which(polysT$Box == "Long Island"), ]
area5=polysT[which(polysT$Box == "German Bank"), ]
area6=polysT[which(polysT$Box == "Seal Island"), ]
area7=polysT[which(polysT$Box == "Scots Bay"), ]
area8=polysT[which(polysT$Box == "Yankee Bank"), ]
area9=polysT[which(polysT$Box == "Trinity"), ]
area10=polysT[which(polysT$Box == "Browns Bank"), ]
area11=polysT[which(polysT$Box == "SW Grounds"), ]
area12=polysT[which(polysT$Box == "Gannet Dry Ledge"), ]
area13=polysT[which(polysT$Box == "Lurcher"), ]
ids = (TaggingEvents$TAG_NUMBER)
r = data.frame( TAG_NUMBER=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
#This part takes a really long time to run.
# Assigning fishing grounds to sets. This takes  a few minutes to run through.
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
# Ground
r$FishingGround = NA
r$FishingGround = with(r, ifelse(r$NB_Coastal > 0, "NB Coastal",
ifelse(r$Grand_Manan > 0, "Grand Manan",
ifelse(r$Grand_Manan_Banks > 0, "Grand Manan Banks",
ifelse(r$Long_Island > 0, "Long Island",
ifelse(r$German_Bank > 0, "German Bank",
ifelse(r$Seal_Island > 0, "Seal Island",
ifelse(r$Scots_Bay > 0, "Scots Bay",
ifelse(r$Yankee_Bank > 0, "Yankee Bank",
ifelse(r$Trinity > 0, "Trinity",
ifelse(r$Browns_Bank > 0, "Brown Bank",
ifelse(r$SW_Grounds > 0, "SW Grounds",
ifelse(r$Gannet_Dry_Ledge > 0, "Gannet Dry Ledge",
ifelse(r$Lurcher > 0, "Lurcher",
"Other"))))))))))))))
TaggingEvents <- merge(TaggingEvents, r[, c("TAG_NUMBER", "FishingGround")], by = "TAG_NUMBER")
#TaggingSubset <- TaggingEvents[sample(1:nrow(TaggingEvents), 25, replace = FALSE),]
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Histogram showing average time differences between tagging in Days. Split into categories.
# Category 1 = 0 to 2 days. These should mostly be removed from analysis due to them being caught almost instantly.
# Category 2 = 3 to 10 days. This is the period that the survey window covers.
# Cat. 3 = 11 to 30 days. Rest of the first month.
# Cat. 4 = 31 to 183 days. Caught after the first month, before the 6 month mark.
# Cat. 5 = 184 to 365. Minimum time of 6 months between tagging event and being recaptured.
# Cat. 6 = 366 to 730. Caught a minimum of a year, up to two years after the tagging event.
# Cat. 7 = Anything after two years since tagging event.
TagReturns$timeDifference <- TagReturns$DATE - TagReturns$Date
TagReturns$timeDifference <- as.numeric(TagReturns$timeDifference)
TagReturns <- TagReturns[TagReturns$timeDifference >= 0,]
TagReturns$category = with(TagReturns, ifelse(TagReturns$timeDifference < 3, 1,
ifelse(TagReturns$timeDifference < 11 & TagReturns$timeDifference >= 3, 2,
ifelse(TagReturns$timeDifference < 31 & TagReturns$timeDifference >= 11, 3,
ifelse(TagReturns$timeDifference < 184 & TagReturns$timeDifference >= 31, 4,
ifelse(TagReturns$timeDifference < 366 & TagReturns$timeDifference >= 184, 5,
ifelse(TagReturns$timeDifference < 731 & TagReturns$timeDifference >= 366, 6,
ifelse(TagReturns$timeDifference < 1095 & TagReturns$timeDifference >= 731, 7, 8))))))))
TagReturns$category <- as.numeric(TagReturns$category)
TagReturns$Count <- 1
#When combining there are NAs that are being counted. This is to remove those.
TagReturns <- TagReturns[!is.na(TagReturns$TAG_NUMBER),]
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
#TagReturns$timeDifferenceMax <- factor(TagReturns$timeDifferenceMax, levels=c('2', '10', '30', '183', '365', '730', '1094', '>1095'))
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
#breaks is only showing the first few values, not the last few.
#This one works, but mixes up the legend
# ggplot(TagReturns,(aes(x = category, fill = timeDifferenceMax))) +
#           geom_histogram(binwidth=1, colour = "white", stat = "count") +
#           theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
#           labs(x = "Category", y="Count") +
#           scale_fill_discrete(name = "Maximum time diference between tag and recapture")
TagReturns = TagReturns %>%
group_by(timeDifference) %>%
mutate(No.ofSameNumberOfDays = length(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
Table <- TagReturns %>%
dplyr::select(category,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(category)
Table1 <- unique(Table) %>%
arrange(category)
# kbl(Table1, col.names=c("Category", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F) %>%
#   kable_styling(full_width = F, fixed_thead = T, )
Table1 %>% write.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/tagReturnsTracey.csv"))
SummaryTable <- subset(Table1, select = -c(timeDifference, No.ofSameNumberOfDays))
SummaryTable <- unique(SummaryTable) %>%
arrange(category)
kbl(SummaryTable, col.names=c("Category", "Average Time Difference (days)", "Minimum Time Difference (Days)", "Maximum Time Difference (Days)", "Category Abundance"), align = "c")
Cat1 <- subset(TagReturns, category == "1")
Cat1 <- subset(Cat1, subset = (catchAREA == "German Bank" |
catchAREA == "German Bank (Area 7)" |
catchAREA == "Lurcher" |
catchAREA == "NB Coastal" |
catchAREA =="Grand Manan" |
catchAREA == "Grand Manan Banks" |
catchAREA =="Long Island"|
catchAREA =="Seal Island"|
catchAREA == "Scots Bay"|
catchAREA =="Yankee Bank"|
catchAREA =="Trinity"|
catchAREA =="Brown Bank"|
catchAREA =="SW Grounds"|
catchAREA =="Gannet Dry Ledge" ))
ggplot(data = Cat1, (aes(FishingGround, fill = catchAREA))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Tagging Ground", y="Count") +
scale_fill_discrete(name = "Recapture area")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete() #breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram() +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1, stat = count) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = timeDifferenceMax, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
geom_histogram(binwidth = 1, stat = "count" +
)
ggplot(TagReturns,(aes(x = timeDifferenceMax, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1, stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
ggplot(TagReturns,(aes(x = timeDifferenceMax, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1, stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = timeDifferenceMax, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1, stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
??geom_histogram
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1, stat = "bin") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(binwidth = 1, stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = timeDifferenceMax, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
??scale_fill_discrete
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete() #breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete() #breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
str(TagReturns)
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
str(TagReturns)
aggingEvents <- merge(TaggingEvents, r[, c("TAG_NUMBER", "FishingGround")], by = "TAG_NUMBER")
#TaggingSubset <- TaggingEvents[sample(1:nrow(TaggingEvents), 25, replace = FALSE),]
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Histogram showing average time differences between tagging in Days. Split into categories.
# Category 1 = 0 to 2 days. These should mostly be removed from analysis due to them being caught almost instantly.
# Category 2 = 3 to 10 days. This is the period that the survey window covers.
# Cat. 3 = 11 to 30 days. Rest of the first month.
# Cat. 4 = 31 to 183 days. Caught after the first month, before the 6 month mark.
# Cat. 5 = 184 to 365. Minimum time of 6 months between tagging event and being recaptured.
# Cat. 6 = 366 to 730. Caught a minimum of a year, up to two years after the tagging event.
# Cat. 7 = Anything after two years since tagging event.
TagReturns$timeDifference <- TagReturns$DATE - TagReturns$Date
TagReturns$timeDifference <- as.numeric(TagReturns$timeDifference)
TagReturns <- TagReturns[TagReturns$timeDifference >= 0,]
TagReturns$category = with(TagReturns, ifelse(TagReturns$timeDifference < 3, 1,
ifelse(TagReturns$timeDifference < 11 & TagReturns$timeDifference >= 3, 2,
ifelse(TagReturns$timeDifference < 31 & TagReturns$timeDifference >= 11, 3,
ifelse(TagReturns$timeDifference < 184 & TagReturns$timeDifference >= 31, 4,
ifelse(TagReturns$timeDifference < 366 & TagReturns$timeDifference >= 184, 5,
ifelse(TagReturns$timeDifference < 731 & TagReturns$timeDifference >= 366, 6,
ifelse(TagReturns$timeDifference < 1095 & TagReturns$timeDifference >= 731, 7, 8))))))))
TagReturns$category <- as.numeric(TagReturns$category)
TagReturns$Count <- 1
#When combining there are NAs that are being counted. This is to remove those.
TagReturns <- TagReturns[!is.na(TagReturns$TAG_NUMBER),]
str(TagReturns)
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
str(TagReturns)
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete() #breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_continuous() #breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete() #breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture"))
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(2, 10, 30, 183, 365, 730, 1094, >1095), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(2, 10, 30, 183, 365, 730, 1094, '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = category))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = category))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_continuous(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
ggplot(TagReturns,(aes(x = category, group = category, fill = category))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, fill = timeDifferenceMax))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(name = "Maximum time diference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
ggplot(TagReturns,(aes(x = category, fill = timeDifferenceMax))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, fill = timeDifferenceMax))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_manual(name = "Maximum time diference between tag and recapture",
labels = c('2', '10', '30', '183', '365', '730', '1094', '>1095'))
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_manual(name = "Maximum time diference between tag and recapture",
labels = c('2', '10', '30', '183', '365', '730', '1094', '>1095'),
values = c('red', 'blue', 'green', 'pink', 'black', 'purple', 'orange', 'grey'))
ggplot(TagReturns,(aes(x = category, group = category, fill = category))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_manual(name = "Maximum time diference between tag and recapture",
labels = c('2', '10', '30', '183', '365', '730', '1094', '>1095'),
values = c('red', 'blue', 'green', 'pink', 'black', 'purple', 'orange', 'grey'))
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(name = "Maximum time diference between tag and recapture",
labels = c('2', '10', '30', '183', '365', '730', '1094', '>1095'),
values = c('red', 'blue', 'green', 'pink', 'black', 'purple', 'orange', 'grey'))
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(name = "Maximum time diference between tag and recapture",
labels = c('2', '10', '30', '183', '365', '730', '1094', '>1095')) #,
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_manual(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, fill = timeDifferenceMax))) +
geom_histogram(group = category,stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
ggplot(TagReturns,(aes(x = category, fill = timeDifferenceMax))) +
geom_histogram(group = category,stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(group = category,stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c('2', '10', '30', '183', '365', '730', '1094', '>1095'), name = "Maximum time diference between tag and recapture")
