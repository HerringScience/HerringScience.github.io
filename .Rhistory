Tagging = NA
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
Table %>%
filter(!is.na()) %>%
kbl() %>%
kable_paper("striped", full_width = F)
## Global options
rm(list = ls())
#Change these options
surv = "SB"
surv2 = "Scots Bay"
surv.date = "2023-05-18 22:00"
surv.no = "1"
Allocation = "0"
SIAllocation = "75"
vessels = 3
EVessel = NA
NVessel = NA
PlanktonVessel = "Lady Janice II"
Tagging = NA
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages and data
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M")
StartTime = substr(surv.date, 12,16)
StartDate = substr(surv.date, 1,10)
year = substr(surv.date, 1,4)
#Load plan
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/"))
Plan = list.files(pattern = "*plan.csv") %>%
map_df(~read_csv(.))
Table = list.files(pattern = "*Table.csv") %>%
map_df(~read_csv(.))
#Land Data
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/"))
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Make CTD Cast Box (GB or SB)
a = c("4334.320", "4333.600", "4333.600", "4334.320")
b = c("6622.080", "6622.080", "6621.000", "6621.000")
c = c("4503.432", "4503.000", "4503.000", "4503.432")
d = c("6513.048", "6513.048", "6512.000", "6512.000")
if(surv == "SB") {
CTDBox = data.frame(c,d)
names(CTDBox) = c('Lat', 'Lon')
}
if(surv == "GB") {
CTDBox = data.frame(a,b)
names(CTDBox) = c('Lat', 'Lon')
}
#Make Tow Box (SB only)
a = c("4501.800", "4504.200", "4506.780", "4504.500")
b = c("6515.300", "6506.600", "6506.600", "6515.300")
TowBox = data.frame(a,b)
names(TowBox) = c('Lat', 'Lon')
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Table %>%
filter(!is.na()) %>%
kbl() %>%
kable_paper("striped", full_width = F)
Table %>%
filter(!is.na(Vessel)) %>%
kbl() %>%
kable_paper("striped", full_width = F)
View(Plan)
View(Plan)
?Sys.Date
Sys.Date()
## Global options
year= substr(Sys.Date(),1,4)
View(Table)
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
rm(list = ls())
#Change these options
surv = "SB"
surv2 = "Scots Bay"
year = "2023"
surv.no = "3"
hightide = "2023-06-19 01:00:00"
# Set all tagging log data here
Tag_Num = c(523501:523650, 556401:556800, 100:200, 300:400) #Can add any tag entries, including breaks/gaps in the sequences
# Set all tagging log data here
Tag_Num = c(468879:469036) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-07-02" #"YYYY-MM-DD"
Lat = "44 17 97" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "62 16 91"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
# Load TaggingEvents.csv
#Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tagging <- read_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv")
Tag_Num = c(468879:469036) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-07-02" #"YYYY-MM-DD"
Lat = "44 17 97" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "62 16 91"
Vessel = "Lady Melissa" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
#Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tagging <- read_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv")
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
rm(list = ls())
#Change these options
surv = "SB"
surv2 = "Scots Bay"
year = "2022"
surv.no = "10"
hightide = "2022-10-02 17:00:00"
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
#Survey Data
Survey = read_csv("Survey Data.csv") #Survey Data
Survey$Year = as.factor(Survey$Year)
Survey$Ground = as.factor(Survey$Ground)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
CTD2=CTD
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
Tag = Tag %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
CTD = CTD %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
current=paste0(unique(Survey$Ground), unique(Survey$Survey.No))
if(!is.na(unique(Survey$EVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBEastern.csv"))
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(unique(Survey$NVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBNorthern.csv"))
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SB.csv"))
polySB_main = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current))
Map = list.files(pattern = "Map*") %>%
map_df(~read_csv(.))
Region = list.files(pattern = "Region*") %>%
map_df(~read_csv(.))
Speed=read_csv("Speed.csv")
Distance=read_csv("Distance.csv")
SurveyTotal=read_csv("Performance Total.csv")
#Results Tables
tableB=read_csv("tableB.csv") %>% dplyr::select(-Distance)
tableC=read_csv("tableC.csv")
View(Tag)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
Tag = Tag %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
CTD = CTD %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
current=paste0(unique(Survey$Ground), unique(Survey$Survey.No))
if(!is.na(unique(Survey$EVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBEastern.csv"))
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(unique(Survey$NVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBNorthern.csv"))
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SB.csv"))
polySB_main = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current))
Map = list.files(pattern = "Map*") %>%
map_df(~read_csv(.))
Region = list.files(pattern = "Region*") %>%
map_df(~read_csv(.))
Speed=read_csv("Speed.csv")
Distance=read_csv("Distance.csv")
SurveyTotal=read_csv("Performance Total.csv")
#Results Tables
tableB=read_csv("tableB.csv") %>% dplyr::select(-Distance)
tableC=read_csv("tableC.csv")
x=unique(ifelse(Survey$Ground == "SB", "Scots Bay", "German Bank"))
y=unique(Survey$Survey.No)
z=unique(Survey$Date)
Map = Map %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
Region = Region %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
a = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))
b = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))
ifelse(Survey$Ground == "SB", plot(a), plot(b))
a=unique(Survey$Vessel.No)
b=unique(ifelse(Survey$Sample == "Y", "fishing", ifelse(Survey$Sample == "N", "non-fishing", "NA")))
c=unique(Survey$Date)
d=unique(Survey$StartTime)
e=unique(Survey$EVessel)
f=unique(Survey$NVessel)
g=unique(ifelse(Survey$Ground == "GB", "two transects in the German Bank box and one transect in the Seal Island Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "No", "two transects each in the Main Survey Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", paste("two transects each in the Main Survey Box, and the ", e, " ran four lines in the Eastern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", paste("two transects each in the Main Survey Box, and the ", f, "ran four lines in the Northern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", paste("two transects each in the Main Survey Box, the ", e, "ran four lines in the Eastern Survey Box, and the ", f, "ran four lines in the Northern            Survey Box"),
"NA"))))))
h=unique(ifelse(is.na(Survey$PlanktonVessel), "There was no plankton tow or CTD cast conducted", paste("There was a plankton tow and replicate conducted and CTD cast by ", unique(Survey$PlanktonVessel))))
i=unique(ifelse(Survey$Ground == "GB", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "No", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", a-2,
"NA"))))))
month1 = substr(c,4,5)
day1 = substr(c,1,2)
tidestring = paste0(year, "-", month1, "-", day1, " ", d)
tidestring = as.POSIXlt(tidestring, format="%Y-%m-%d %H:%M:%S")
hightide = as.POSIXlt(hightide, format="%Y-%m-%d %H:%M:%S")
tidediff = as.double(difftime(tidestring, hightide, units = "hours"))
j = ifelse(tidediff < 0, "before", "after")
k = abs(round(tidediff, digits = 2))
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(ifelse(Survey$Sample == "Y",
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey."))
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(ifelse(Survey$Sample == "Y" & !is.na(Tag_Summary)),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(ifelse(Survey$Sample == "Y" & is.na(Tag_Summary)),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(ifelse(Survey$Sample == "Y" & Tag_Summary != NA),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(ifelse(!is.na(Tag_Summary)),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
View(Tag_Summary)
Tag_Summary
print(Tag_Summary)
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(if_else(!is.na(Tag_Summary)),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(if_else(!is.na(Tag_Summary),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey."))
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=unique(if_else(!is.na(Tag_Summary),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey."))
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=if_else(!is.na(Tag_Summary),
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=if_else(a == 0,
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=if_else(a != 0,
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
