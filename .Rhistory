mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2) #used to drop the columns made just to calculate the annual tags
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger") #combine the database + new data with the annual counts all into one frame
# Save TaggingEvents.csv - saves the same file in both Source and Main data which is redundant but necessary because of how other coding is setup
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
# Set all tagging log data here
Tag_Num = c(520001:520050) #Can add any tag entries, including breaks/gaps in the sequences
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
# Set all tagging log data here
Tag_Num = c(520001:520050) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-10-15" #"YYYY-MM-DD"
Lat = "44 16 11" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "67 00 76"
Vessel = "Sealife II" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
Tagging$Date = ymd(Tagging$Date)
# Modify Data
Lon = conv_unit(Lon,"deg_min_sec","dec_deg") #converts the entered longitude from deg_min_sec to decimal degrees
Lon = as.numeric(Lon) #then saves it as a numeric value
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg") #same as above but for latitude
Lat = as.numeric(Lat)
Lon = -1*Lon #convert longitude to negative
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD) #saves all the values into a tibble (a tidyverse dataframe)
Tags$Date = ymd(Tags$Date) #convert the Date to a year-month-day (ymd) format
Tags = Tags %>% #this entire pipeline (%>%) will take the Tags dataframe, and mutate (create or modify) a variable named Tagger
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson", #this is used to link each tagger to their vessel
ifelse(Vessel == "Sealife II", "Annik Doucette", #if the vessel-tagger assignments change it needs to be edited here
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay", #finally, if lat/lon is between these values it will assign ground as either SB or GB
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other'))) #if lat/lon is in neither range, ground will be set to Other
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags) #joins the tagging database with the new data
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>% #adds the Julian date column (again, through Mutate which makes new columns)
mutate(Year = as.numeric(substr(Date, 1, 4))) %>% #Year is a substring of Date, from the 1st to the 4th value
dplyr::select(-Tag_Annual) #a negative select will drop the Annual Tag count for now, because it is calculated later
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>% #group_by can by read as "for each", so in this case, for each unique Tagger and each unique Year they tagged in we will calculate their annual tags applied
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2) #used to drop the columns made just to calculate the annual tags
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger") #combine the database + new data with the annual counts all into one frame
# Save TaggingEvents.csv - saves the same file in both Source and Main data which is redundant but necessary because of how other coding is setup
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
year= substr(Sys.Date(),1,4)
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
#library(rgeos)
library(terra)
library(sf)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(terra)
library(sf)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
LRP2 %>% dplyr::select(Year, Biomass, LRP, ThreeYear) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
Larval = Larval %>% filter(Ground == "SB")
Larval %>% ggplot(aes(y=Lengthmm, x=Julian, colour = Year)) +
geom_point() +
labs(y="Length (mm)", x="Julian Date of Collection")
ggplot(Larval, aes(Year, Lengthmm, colour = Year)) +
geom_boxplot() +
labs(y="Length (mm)")
Table = Larval %>%
group_by(Year) %>%
summarize(MinLength = min(Lengthmm),
MaxLength = max(Lengthmm),
AvgLength = mean(Lengthmm),
AvgSD = mean(SD),
Abundance = n()) %>%
mutate_if(is.numeric, format, digits=2)
kbl(Table, col.names=c("Year", "Min Length (mm)", "Max Length (mm)", "Mean Length (mm)", "+/- SD (mm)", "Abundance"), align = "c") %>%
kable_paper("striped", full_width = F)
year= substr(Sys.Date(),1,4)
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
LRP2 %>% dplyr::select(Year, Biomass, LRP, ThreeYear) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 = LRP2 %>%
dplyr::select(Year, Scots, German, Seal, Biomass, LRP, ThreeYear="ThreeYear") %>%
mutate(Difference = ThreeYear-LRP)
LRP3 %>% arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay", "German Bank", "Seal Isl.", "Biomass (mt)", "LRP", "3yr Avg", "Difference"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'))) %>%
formatStyle(columns = "Difference", color = styleInterval(cuts = 0, values = c("red", "green")))
LRP3 %>% dplyr::select(Year, Scots) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, Scots) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay"),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>% dplyr::select(Year, German) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, German, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "German Bank", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>%
dplyr::select(Year, German, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "German Bank", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
Plot_Summary = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(Biomass = sum(DFO_Turnover_Adjusted), na.rm = FALSE)
p = ggplot(data=Plot_Summary,  aes(x=Year, y=Biomass)) +
geom_col(fill = "darkblue") +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
arrange(desc(Year))
datatable(Table,
colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
p = ggplot(data=subset(SSB, Ground == "Scots Bay"),  aes(x=Year, y=DFO_Turnover_Adjusted, fill= Survey_Number)) +
geom_col() +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "Scots Bay") %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
ungroup() %>%
arrange(desc(Year))
datatable(Table, colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
p = ggplot(data=subset(SSB, Ground == "German Bank"),  aes(x=Year, y=DFO_Turnover_Adjusted, fill= Survey_Number)) +
geom_col() +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "German Bank") %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
ungroup() %>%
arrange(desc(Year))
datatable(Table, colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "Scots Bay" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "Scots Bay" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "German Bank" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "German Bank" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
??gIntersection
library(rgeos)
#Import all packages, CTD data, and land data
install.packages("rgeos")
library(rgeos)
library(rgeos)
#Import all packages, CTD data, and land data
install.packages("rgeos")
library(sf)
library(terra)
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "German Bank" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "German Bank" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
Plot = Tag %>% subset(Ground == "Scots Bay" & Year == year) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup()
ggplot(data = Plot, aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Survey, # of Tags")
out <- raster(NBNS, CP, byid=TRUE)
