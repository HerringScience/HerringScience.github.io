ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "Long Island", "BB to LI",
ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "Seal Island", "BB to SI",
ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "Yank", "BB to YB",
ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "Trinity", "BB to T",
ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "Browns Bank", "BB to BB",
ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "SW Grounds", "BB to SWG",
ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "Gannet Dry Ledge", "BB to GDL",
ifelse(TagReturnsBB$FishingGround == "Browns Bank" & TagReturnsBB$catchAREA == "Lurcher", "BB to L", "Other"
))))))))))))))
TagReturnsBB <- subset(TagReturnsBB, TagLocation != "Other")
SummaryTable <- TagReturnsBB %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
# ggplot(data = TagReturnsBB, (aes(TagLocation, fill = category))) +
#         geom_histogram(binwidth=1, colour = "white", stat = "count") +
#         theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
#         labs(x = "Tag to Catch Location", y="Number of Events") +
#         ggtitle("Browns Bank Tag Returns") +
#         scale_y_continuous(breaks= pretty_breaks())
#
# Table <- TagReturnsBB %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
#Removed category 1 larvae - any caught within 2 days of tagging.
TagReturnsBB <- subset(TagReturnsBB, subset = (category != "1"))
ggplot(data = TagReturnsBB, (aes(TagLocation, fill = category))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Tag to Catch Location", y="Number of Events") +
ggtitle("Browns Bank Tag Returns excluding fish caught within 2 days of being tagged") +
scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsBB %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- TagReturnsBB %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
TagReturnsSWG <- subset(TagReturns, subset = (FishingGround == "SW Grounds"))
TagReturnsSWG$TagLocation <- with(TagReturnsSWG, ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "German Bank" |
TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "German Bank (Area 7)", "SWG to GB",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Scots Bay" |
TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Scots Bay (Area 8)", "SWG to SB",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "NB Coastal", "SWG to NBC",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Grand Manan", "SWG to GM",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Grand Manan Banks", "SWG to GMB",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Long Island", "SWG to LI",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Seal Island", "SWG to SI",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Yank", "SWG to YB",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Trinity", "SWG to T",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Browns Bank", "SWG to BB",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "SW Grounds", "SWG to SWG",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Gannet Dry Ledge", "SWG to GDL",
ifelse(TagReturnsSWG$FishingGround == "SW Grounds" & TagReturnsSWG$catchAREA == "Lurcher", "GDL to L","Other"
))))))))))))))
TagReturnsSWG <- subset(TagReturnsSWG, TagLocation != "Other")
SummaryTable <- TagReturnsSWG %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
# ggplot(data = TagReturnsSWG, (aes(TagLocation, fill = category))) +
#         geom_histogram(binwidth=1, colour = "white", stat = "count") +
#         theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
#         labs(x = "Tag to Catch Location", y="Number of Events") +
#         ggtitle("SW Grounds Tag Returns") +
#         scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsSWG %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
#Removed category 1 larvae - any caught within 2 days of tagging.
#Not sure why an NA has popped up
TagReturnsSWG <- subset(TagReturnsSWG, subset = (category != "1"))
ggplot(data = TagReturnsSWG, (aes(TagLocation, fill = category))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Tag to Catch Location", y="Number of Events") +
ggtitle("SW Grounds Tag Returns excluding fish caught within 2 days of being tagged") +
scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsSWG %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- TagReturnsSWG %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
TagReturnsGDL <- subset(TagReturns, subset = (FishingGround == "Gannet Dry Ledge"))
TagReturnsGDL$TagLocation <- with(TagReturnsGDL, ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "German Bank" |
TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "German Bank (Area 7)", "GDL to GB",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Scots Bay" |
TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Scots Bay (Area 8)", "GDL to SB",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "NB Coastal", "GDL to NBC",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Grand Manan", "GDL to GM",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Grand Manan Banks", "GDL to GMB",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Long Island", "GDL to LI",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Seal Island", "GDL to SI",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Yank", "GDL to YB",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Trinity", "GDL to T",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Browns Bank", "GDL to BB",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "SW Grounds", "GDL to SWG",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Gannet Dry Ledge", "GDL to GDL",
ifelse(TagReturnsGDL$FishingGround == "Gannet Dry Ledge" & TagReturnsGDL$catchAREA == "Lurcher", "GDL to L","Other"
))))))))))))))
TagReturnsGDL <- subset(TagReturnsGDL, TagLocation != "Other")
SummaryTable <- TagReturnsGDL %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
# ggplot(data = TagReturnsGDL, (aes(TagLocation, fill = category))) +
#         geom_histogram(binwidth=1, colour = "white", stat = "count") +
#         theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
#         labs(x = "Tag to Catch Location", y="Number of Events") +
#         ggtitle("Gannet Dry Ledge Tag Returns") +
#         scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsGDL %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
#Removed category 1 larvae - any caught within 2 days of tagging.
TagReturnsGDL <- subset(TagReturnsGDL, subset = (category != "1"))
ggplot(data = TagReturnsGDL, (aes(TagLocation, fill = category))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Tag to Catch Location", y="Number of Events") +
ggtitle("Gannet Dry Ledget Tag Returns excluding fish caught within 2 days of being tagged") +
scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsGDL %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- TagReturnsGDL %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
TagReturnsL <- subset(TagReturns, subset = (FishingGround == "Lurcher"))
TagReturnsL$TagLocation <- with(TagReturnsL, ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "German Bank" |
TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "German Bank (Area 7)", "L to GB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Scots Bay" |
TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Scots Bay (Area 8)", "L to SB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "NB Coastal", "L to NBC",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Grand Manan", "L to GM",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Grand Manan Banks", "L to GMB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Long Island", "L to LI",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Seal Island", "L to SI",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Yank", "L to YB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Trinity", "L to T",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Browns Bank", "L to BB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "SW Grounds", "L to SWG",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Gannet Dry Ledge", "L to GDL",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Lurcher", "L to L", "Other"
))))))))))))))
TagReturnsL <- subset(TagReturnsL, TagLocation != "Other")
SummaryTable <- TagReturnsL %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
# ggplot(data = TagReturnsL, (aes(TagLocation, fill = category))) +
#         geom_histogram(binwidth=1, colour = "white", stat = "count") +
#         theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
#         labs(x = "Tag to Catch Location", y="Number of Events") +
#         ggtitle("Lurcher Tag Returns") +
#         scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsL %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
#Removed category 1 larvae - any caught within 2 days of tagging.
TagReturnsL <- subset(TagReturnsL, subset = (category != "1"))
ggplot(data = TagReturnsL, (aes(TagLocation, fill = category))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Tag to Catch Location", y="Number of Events") +
ggtitle("Lurcher Tag Returns excluding fish caught within 2 days of being tagged") +
scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsL %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- TagReturnsL %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
GearTable <- TagReturns %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
GearType,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
GearTable$Count = 1
GearTable<-subset(GearTable, subset = (GearType != "N/A"))
ggplot(GearTable, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return") +
labs(fill = "Category")
GearWithout1 <- subset(GearTable, subset = (category != 1))
ggplot(GearWithout1, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return") +
labs(fill = "Category")
SummaryTable <- GearWithout1 %>%
group_by(GearType, category) %>%
count()
kbl(SummaryTable, col.names = c("Gear Type", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
WeirTable <- subset(GearTable, subset = (GearType != "Purse Seine"))
WeirTable <- subset(WeirTable, subset = (GearType != "Mid Water Trawl"))
ggplot(WeirTable, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return to Gear Type") +
labs(fill = "Category")
ggplot(WeirTable, aes(x=GearType, y = Count, fill = factor(FishingGround))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return to gear type from specific tagging ground") +
labs(fill = "Tagging Ground")
SummaryTable <-WeirTable %>%
group_by(GearType, category) %>%
count()
kbl(SummaryTable, col.names = c("Gear Type", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$timeDifferenceMax), name = "Maximum time difference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$timeDifferenceMax), name = "Maximum time difference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
str(TagReturns)
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Histogram showing average time differences between tagging in Days. Split into categories.
# Category 1 = 0 to 2 days. These should mostly be removed from analysis due to them being caught almost instantly.
# Category 2 = 3 to 10 days. This is the period that the survey window covers.
# Cat. 3 = 11 to 30 days. Rest of the first month.
# Cat. 4 = 31 to 183 days. Caught after the first month, before the 6 month mark.
# Cat. 5 = 184 to 365. Minimum time of 6 months between tagging event and being recaptured.
# Cat. 6 = 366 to 730. Caught a minimum of a year, up to two years after the tagging event.
# Cat. 7 = Anything after two years since tagging event.
TagReturns$timeDifference <- TagReturns$DATE - TagReturns$Date
TagReturns$timeDifference <- as.numeric(TagReturns$timeDifference)
TagReturns <- TagReturns[TagReturns$timeDifference >= 0,]
TagReturns$category = with(TagReturns, ifelse(TagReturns$timeDifference < 3, 1,
ifelse(TagReturns$timeDifference < 11 & TagReturns$timeDifference >= 3, 2,
ifelse(TagReturns$timeDifference < 31 & TagReturns$timeDifference >= 11, 3,
ifelse(TagReturns$timeDifference < 184 & TagReturns$timeDifference >= 31, 4,
ifelse(TagReturns$timeDifference < 366 & TagReturns$timeDifference >= 184, 5,
ifelse(TagReturns$timeDifference < 731 & TagReturns$timeDifference >= 366, 6,
ifelse(TagReturns$timeDifference < 1095 & TagReturns$timeDifference >= 731, 7, 8))))))))
TagReturns$category <- as.numeric(TagReturns$category)
TagReturns$Count <- 1
#When combining there are NAs that are being counted. This is to remove those.
TagReturns <- TagReturns[!is.na(TagReturns$TAG_NUMBER),]
str(TagReturns)
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$timeDifferenceMax), name = "Maximum time difference between tag and recapture")
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$category), name = "Maximum time difference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$category), name = "Maximum time difference between tag and recapture")
TagReturns$timeDifferenceMax <- cut(TagReturns$timeDifferenceMax, breaks = 8, labels=c('2', '10', '30', '183', '365', '730', '1094', '>1095'))
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$category), name = "Maximum time difference between tag and recapture")
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Histogram showing average time differences between tagging in Days. Split into categories.
# Category 1 = 0 to 2 days. These should mostly be removed from analysis due to them being caught almost instantly.
# Category 2 = 3 to 10 days. This is the period that the survey window covers.
# Cat. 3 = 11 to 30 days. Rest of the first month.
# Cat. 4 = 31 to 183 days. Caught after the first month, before the 6 month mark.
# Cat. 5 = 184 to 365. Minimum time of 6 months between tagging event and being recaptured.
# Cat. 6 = 366 to 730. Caught a minimum of a year, up to two years after the tagging event.
# Cat. 7 = Anything after two years since tagging event.
TagReturns$timeDifference <- TagReturns$DATE - TagReturns$Date
TagReturns$timeDifference <- as.numeric(TagReturns$timeDifference)
TagReturns <- TagReturns[TagReturns$timeDifference >= 0,]
TagReturns$category = with(TagReturns, ifelse(TagReturns$timeDifference < 3, 1,
ifelse(TagReturns$timeDifference < 11 & TagReturns$timeDifference >= 3, 2,
ifelse(TagReturns$timeDifference < 31 & TagReturns$timeDifference >= 11, 3,
ifelse(TagReturns$timeDifference < 184 & TagReturns$timeDifference >= 31, 4,
ifelse(TagReturns$timeDifference < 366 & TagReturns$timeDifference >= 184, 5,
ifelse(TagReturns$timeDifference < 731 & TagReturns$timeDifference >= 366, 6,
ifelse(TagReturns$timeDifference < 1095 & TagReturns$timeDifference >= 731, 7, 8))))))))
TagReturns$category <- as.numeric(TagReturns$category)
TagReturns$Count <- 1
#When combining there are NAs that are being counted. This is to remove those.
TagReturns <- TagReturns[!is.na(TagReturns$TAG_NUMBER),]
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) #%>%
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$category), name = "Maximum time difference between tag and recapture")
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$category), name = "Maximum time difference between tag and recapture")
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Histogram showing average time differences between tagging in Days. Split into categories.
# Category 1 = 0 to 2 days. These should mostly be removed from analysis due to them being caught almost instantly.
# Category 2 = 3 to 10 days. This is the period that the survey window covers.
# Cat. 3 = 11 to 30 days. Rest of the first month.
# Cat. 4 = 31 to 183 days. Caught after the first month, before the 6 month mark.
# Cat. 5 = 184 to 365. Minimum time of 6 months between tagging event and being recaptured.
# Cat. 6 = 366 to 730. Caught a minimum of a year, up to two years after the tagging event.
# Cat. 7 = Anything after two years since tagging event.
TagReturns$timeDifference <- TagReturns$DATE - TagReturns$Date
TagReturns$timeDifference <- as.numeric(TagReturns$timeDifference)
TagReturns <- TagReturns[TagReturns$timeDifference >= 0,]
TagReturns$category = with(TagReturns, ifelse(TagReturns$timeDifference < 3, 1,
ifelse(TagReturns$timeDifference < 11 & TagReturns$timeDifference >= 3, 2,
ifelse(TagReturns$timeDifference < 31 & TagReturns$timeDifference >= 11, 3,
ifelse(TagReturns$timeDifference < 184 & TagReturns$timeDifference >= 31, 4,
ifelse(TagReturns$timeDifference < 366 & TagReturns$timeDifference >= 184, 5,
ifelse(TagReturns$timeDifference < 731 & TagReturns$timeDifference >= 366, 6,
ifelse(TagReturns$timeDifference < 1095 & TagReturns$timeDifference >= 731, 7, 8))))))))
TagReturns$category <- as.numeric(TagReturns$category)
TagReturns$Count <- 1
#When combining there are NAs that are being counted. This is to remove those.
TagReturns <- TagReturns[!is.na(TagReturns$TAG_NUMBER),]
TagReturns <- TagReturns %>%
group_by(category) %>%
mutate(AvgtimeDifference = mean(timeDifference)) %>%
mutate(No.InCategory = length(category)) %>%
mutate(timeDifferenceMin = min(timeDifference)) %>%
mutate(timeDifferenceMax= max(timeDifference)) %>%
mutate_if(is.numeric, format, digits = 2)
ggplot(TagReturns,(aes(x = category, group = category, fill = timeDifferenceMax))) +
geom_histogram(stat = "count", binwidth = 1, show.legend = TRUE) +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_fill_discrete(breaks = c(TagReturns$category), name = "Maximum time difference between tag and recapture")
