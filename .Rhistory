t = paste0("Tide Schedule for Margaretsville NS, Station #315m Source: www.waterlevels.gc.ca")
}
if(surv == "GB"){
t=cat("\n")
}
if(surv == "GB"){b= tableC %>% filter(Layer == "German Bank")
b=sum(b$'Biomass (tons)')}
if(surv == "SB"){b=sum(tableC$`Biomass (tons)`)}
b=format(b, big.mark=(","), digits=2)
c=as.numeric(tableC$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
d=d$'Biomass (tons)'
d=format(d, big.mark=(","), digits=2)
if(surv.no == 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt."))}
if(surv.no > 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt."))}
f=f[1:1]
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/PRCplot.jpg"), rel_path = FALSE)
TransDetails = SurveyTotal %>%
filter(Type == "Actual") %>%
dplyr::select(-Dist..km., -Type, -Survey) %>%
rename("Transect #" = Transect.No., "Date/Time Start" = Date.Time.Start, "Date/Time End" = Date.Time.End, "Start Lon" = Start.Lon, "Start Lat" = Start.Lat, "End Lon" = End.Lon, "End Lat" = End.Lat, "Distance (km)" = Distance) %>%
arrange(Vessel, "Transect #") %>%
dplyr::select(-Start, -End, -Duration, -Year, -Date)
TransDetails$`Distance (km)`=round(TransDetails$`Distance (km)`, digits = 2)
TransDetails$Speed=round(TransDetails$Speed, digits=2)
TransDetails$`Start Lat`=round(TransDetails$`Start Lat`, digits=3)
TransDetails$`Start Lon`=round(TransDetails$`Start Lon`, digits=3)
TransDetails$`End Lat`=round(TransDetails$`End Lat`, digits=3)
TransDetails$`End Lon`=round(TransDetails$`End Lon`, digits=3)
kbl(TransDetails, caption="Table 1: Transect Details", align='c') %>%
kable_paper("striped") %>%
scroll_box(width="100%", height = "350px")
table1 = tableB %>% arrange(desc(`Mean Sa (/m2)`))
table1$`Mean Sa (/m2)`=round(table1$`Mean Sa (/m2)`, digits=3)
table1$`Biomass Density (kg/m2)`=round(table1$`Biomass Density (kg/m2)`, digits=3)
kbl(table1, caption="Table 2: Acoustic Survey Results", align = 'c') %>%
kable_paper("striped", full_width=F) %>%
footnote(general = "Transects are listed from greatest to least backscatter.")
table2 = tableC %>%
mutate("Percent Area" = (`Area (km2)`/sum(`Area (km2)`)*100),
"Percent Biomass" = `Biomass (tons)`/sum(`Biomass (tons)`)*100)
table2$`Percent Area` = round(table2$'Percent Area', digits = 1)
table2$'Percent Biomass' = round(table2$'Percent Biomass', digits = 1)
table2$`Density (kg/m2)` = round(table2$`Density (kg/m2)`, digits = 4)
table2$`Mean Sa` = round(table2$`Mean Sa`, digits = 4)
table2$`Standard Error (tons)` = round(table2$`Standard Error (tons)`, digits = 2)
table2$`Standard Error (%)` = round(table2$`Standard Error (%)`, digits = 2)
table2 = table2 %>% dplyr::select(Layer, "Target Strength", "Area (km2)", "Mean Sa", "Density (kg/m2)", "Biomass (tons)", "Percent Area", "Percent Biomass", "Standard Error (tons)", "Standard Error (%)")
kbl(table2, caption="Table 3: Survey Summary Table", format.args=(list(big.mark=","))) %>%
kable_paper("striped", full_width=F)
PRC = Map %>%
slice_max(PRC_ABC)
Dense = Region %>%
slice_max(Area_Backscatter_Strength)
a = unique(PRC$Vessel)
c = unique(Dense$Vessel)
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Snip.jpg"), rel_path = FALSE)
if(surv == "SB"){
a = ggplot() +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_point(data=PRC,aes(x=Lon, y=Lat, colour = Vessel, size = 400)) +
guides(size="none") +
coord_map() +
labs(x=NULL, y=NULL)}
if(surv == "GB"){
a = ggplot() +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(data=PRC,aes(x=Lon, y=Lat, colour = Vessel, size = 400)) +
guides(size="none") +
coord_map() +
labs(x=NULL, y=NULL)}
plot(a)
if(surv == "SB"){
a = ggplot() +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_segment(data=Dense, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
guides(size="none") +
coord_map() +
labs(x=NULL, y=NULL)}
if(surv == "GB"){
a = ggplot() +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_segment(data=Dense, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
guides(size="none") +
coord_map() +
labs(x=NULL, y=NULL)}
plot(a)
year = as.numeric(year)
Annual_Compare1 = SSB %>%
filter(Year == year & Ground == surv2) %>%
dplyr::select(-DFO_Estimate, -DFO_Turnover_Adjusted)
Annual_Compare2 = SSB %>%
filter(Year == year-1 & Ground == surv2)
Annual_Compare3 = full_join(Annual_Compare1, Annual_Compare2, by=c("Ground", "Survey_Number"))
Annual_Compare4 = Annual_Compare3 %>%
rename("Survey Number" = Survey_Number, "Survey Date" = Survey_Date.x, "HSC Estimate" = HSC_Estimate.x, "HSC Turnover Adjusted" = HSC_Turnover_Adjusted.x, "Survey Date " = Survey_Date.y, "HSC Estimate " = HSC_Estimate.y, "HSC Turnover Adjusted " = HSC_Turnover_Adjusted.y, "DFO Estimate" = DFO_Estimate, "DFO Turnover Adjusted" = DFO_Turnover_Adjusted) %>%
dplyr::select(-Year.x, -Year.y)
kbl(Annual_Compare4, caption="Table 4: Annual Comparison Table", format.args=list(big.mark=",")) %>%
kable_paper("striped") %>%
column_spec(3:5, background = "Grey", color= "White") %>%
add_header_above(c(" "=2, "Current Year"=3, "Previous Year"=5), bold = TRUE, align = "l", underline=TRUE, font_size = 20)
Annual_Compare5 = full_join(Annual_Compare1, Annual_Compare2, by=c("Ground", "Survey_Number", "Year", "Survey_Date", "HSC_Estimate", "HSC_Turnover_Adjusted")) %>%
group_by(Year, Ground) %>%
summarize("HSC Estimate" = sum(HSC_Estimate),
"HSC Turnover Adjusted" = sum(HSC_Turnover_Adjusted),
"DFO Estimate" = sum(DFO_Estimate),
"DFO Turnover Adjusted" = sum(DFO_Turnover_Adjusted))
kbl(Annual_Compare5, caption="Table 5: Annual Summary Table", format.args=list(big.mark=",")) %>%
kable_paper("striped", full_width=F)
CTD_Sum = CTD %>%
group_by(ID) %>%
summarize(Lat = mean(Lat),
Lon = mean(Lon)) %>%
rename(Vessel = ID) %>%
mutate(Vessel = "CTD Cast",
Tag_Count = 300)
if(!is.na(unique(Survey$PlanktonVessel))){
Tows_Sum =
Survey %>%
group_by(id, PlanktonVessel) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2)) %>%
rename(Vessel = PlanktonVessel) %>%
mutate(Vessel = "Plankton Tow",
Tag_Count = 300)}
if(is.na(unique(Survey$PlanktonVessel))){Tows_Sum = CTD_Sum}
Tag_Sum = Tag %>%
group_by(Lat, Lon, Vessel, Tagger) %>%
summarize(Tag_Count=n_distinct(Tag_Num),
Lat=mean(Lat),
Lon=mean(Lon))
ScienceData = full_join(Tows_Sum, CTD_Sum, by = c("Vessel", "Lat", "Lon", "Tag_Count"))
ScienceData2 = full_join(ScienceData, Tag_Sum)
if(surv == "SB"){
a = ggplot(ScienceData2, aes(x=Lon, y=Lat)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_point(aes(colour = Vessel, size = Tag_Count)) +
coord_map() +
labs(x=NULL, y=NULL)}
if(surv == "GB"){
a = ggplot(ScienceData2, aes(x=Lon, y=Lat)) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(colour = Vessel, size = Tag_Count)) +
coord_map() +
labs(x=NULL, y=NULL)}
plot(a)
Tag_Sum = Tag_Sum %>%
group_by(Vessel) %>%
summarize(Tags = sum(Tag_Count))
kbl(Tag_Sum)%>%
kable_paper("striped", full_width = F)
Plankton = Survey %>%
rename(Vessel = PlanktonVessel) %>%
dplyr::select(Vessel, id, Ground, Date, WindDirection, Swell, AirTemp, Time1, Time2, Lat1, Lat2, Lon1, Lon2, AvgTowDepth, Speed, Heading, TideDirection, FlowReading1, FlowReading2, NoRevs, DistanceCalc, Volume, DiscDepthD, DiscDepthA) %>%
rename("Set Number" = id, "Wind Direction (km/h)" = WindDirection, "Swell (m)" = Swell, "Air Temp (c)" = AirTemp, "Tow Start" = Time1, "Tow End" = Time2, "Start Lat" = Lat1, "End Lat" = Lat2, "Start Lon" = Lon1, "End Lon" = Lon2, "Avg Tow Depth (m)" = AvgTowDepth, "Tide Direction" = TideDirection, "Flow Start" = FlowReading1, "Flow End" = FlowReading2, "No. Revolutions" = NoRevs, "Distance (m)" = DistanceCalc, "Secchi Disappear (m)" = DiscDepthD, "Secchi Reappear (m)" = DiscDepthA)
Plankton = t(Plankton)
kbl(Plankton) %>%
kable_paper("striped") %>%
add_header_above(c("", "Tow 1", "Tow 2")) %>%
pack_rows("Base Details", 1, 7) %>%
pack_rows("Tow Details", 8, 17) %>%
pack_rows("Other Data Collection", 18, 24)
a=first(Survey$id)
b=Survey %>% slice(1L)
c=b$TideDirection
d=b$AvgTowDepth
e=last(Survey$id)
f=Survey %>% slice(2L)
g=unique(f$TideDirection)
h=unique(f$AvgTowDepth)
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Tow 1.jpg"), rel_path = FALSE)
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Tow 2.jpg"), rel_path = FALSE)
a=ggplot(data = subset(CTD2, Ground == "Scots Bay" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) +
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (°C) vs. Depth (m)")
b=ggplot(data = subset(CTD2, Ground == "German Bank" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) +
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (°C) vs. Depth (m)")
ifelse(Survey$Ground == "SB", plot(a), plot(b))
c=unique(ifelse(Survey$Ground == "SB", "Scots Bay", "German Bank"))
View(CTD2)
CTD3 = CTD2 %>% filter(Ground == "German Bank" & Year == year)
View(CTD3)
a=ggplot(data = subset(CTD2, Ground == "Scots Bay" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) +
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (°C) vs. Depth (m)")
b=ggplot(data = subset(CTD2, Ground == "German Bank" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) +
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (°C) vs. Depth (m)")
ifelse(Survey$Ground == "SB", plot(a), plot(b))
c=unique(ifelse(Survey$Ground == "SB", "Scots Bay", "German Bank"))
View(CTD3)
install.packages("weathercan")
install.packages("weathercan",
repos = c("https://ropensci.r-universe.dev",
"https://cloud.r-project.org"))
year= substr(Sys.Date(),1,4)
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
library(mapproj)
install.packages("mapproj")
---
title: ""
## Global options
rm(list = ls())
#Change these options
surv = "SB"
surv2 = "Scots Bay"
surv.date = "2023-08-20 20:00:00"
surv.no = "8"
Allocation = "200" #set to "0" for a non-fishing survey
SIAllocation = "0" #Seal Island allocation for GB-only
Tagging = "Canada 100, Morning Star, Lady Janice II, Lady Melissa, Sealife II" #list vessel names in a single quote string (e.g. "Lady Melissa and Sealife II")
#Set vessels below
vessels = 8
EVessel = NA #Set NA for GB or excluding box
NVessel = NA #Set NA for GB or excluding box
PlanktonVessel = "Lady Melissa"
#Main box only (e.g. if vessels = 9 with both SB boxes, should have 1 Evessel, 1 Nvessel, and 7 Vessels below)
V1 = "Leroy and Barry"
V2 = "Morning Star"
V3 = PlanktonVessel
V4 = "Canada 100"
V5 = "Sealife II"
V6 = "Fundy Monarch"
V7 = "Lady Janice"
V8 = "Brunswick Provider"
V9 = NA
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages and data
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19)
StartDate = substr(surv.date, 1,10)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
#Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels,
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1,
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2,
NA)))
Main = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
if(!is.na(NVessel)){North = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
if(!is.na(EVessel)){East = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)}
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)}
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)}
if(is.na(NVessel) & is.na(EVessel)){Plan = Main}
#Add vessel names to Plan
Plan = Plan %>%
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>%
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Land Data
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/"))
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Make CTD Cast Box (GB or SB)
a = c("4334.320", "4333.600", "4333.600", "4334.320")
b = c("6622.080", "6622.080", "6621.000", "6621.000")
c = c("4503.432", "4503.000", "4503.000", "4503.432")
d = c("6513.048", "6513.048", "6512.000", "6512.000")
if(surv == "SB") {
CTDBox = data.frame(c,d)
names(CTDBox) = c('Lat', 'Lon')
}
if(surv == "GB") {
CTDBox = data.frame(a,b)
names(CTDBox) = c('Lat', 'Lon')
}
#Make Tow Box (SB only)
a = c("4501.800", "4504.200", "4506.780", "4504.500")
b = c("6515.300", "6506.600", "6506.600", "6515.300")
TowBox = data.frame(a,b)
names(TowBox) = c('Lat', 'Lon')
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
if(surv == "GB"){
a=paste0("**", "non-fishing", "**")
}
if(surv == "SB") {
a="fishing"
}
a=if(surv == "SB" & !is.na(EVessel) & !is.na(NVessel)){
paste(EVessel, "and", NVessel, "will run 4 lines in the East and North boxes, and all other vessels will be running 2 lines in the Main Survey Box")
}
b=if(surv == "SB" & is.na(EVessel) & !is.na(NVessel)){
paste(NVessel, "will run 4 lines in the North box, and all other vessels will be running 2 lines in the Main Survey Box")
}
c=if(surv == "SB" & is.na(EVessel) & is.na(NVessel)){
"All vessels will be running 2 lines in the Main Survey Box"
}
d=if(surv=="GB"){
"All vessels are to complete two lines each in the German Survey Box and one line in the Seal Island Box"
}
e=if(surv == "SB" & !is.na(EVessel) & is.na(NVessel)){
paste(EVessel, "will run 4 lines in the East box, and all other vessels will be running 2 lines in the Main Survey Box")
}
f=if(!is.na(Tagging)){
paste0("Tagging will be conducted from the ", Tagging, ".")
}
c="Vessels are reminded to complete their assigned transects as listed, straight, and without deviating."
#Afterwards, school surveying can be conducted while waiting to begin fishing but not before the assigned transects have been completed. Please run at least 3 parallel lines over the school and ensure the fishing sonars are turned off.
Plan2 = Plan %>%
dplyr::select(X = "Start Lon", Y = "Start Lat", Xend = "End Lon", Yend = "End Lat", Vessel)
if(surv=="GB"){
a =
ggplot(Plan2, aes(x=X, y=Y)) +
geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size=1) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group), fill = "gray") +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID),fill='white',col='black') +
coord_map() +
labs(x=NULL, y=NULL, caption = "Figure 1. Survey lines to be completed by participating vessels.")}
if(surv=="SB"){a = ggplot(Plan2, aes(x=X, y=Y)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group), fill = "gray") +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID),fill='white',col='black') +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID),fill='white',col='black') +
geom_segment(data=Plan2, aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size=0.5) +
coord_map() +
labs(x=NULL, y=NULL, caption = "Figure 1. Survey lines to be completed by participating vessels.")}
print(a)
a=if(surv=="SB"){
paste0(PlanktonVessel, " will complete both plankton towing (bottom left outer box) and CTD casts (inner box)")
}
b=if(surv=="GB"){
paste0(PlanktonVessel, " will complete both plankton towing and CTD casts (northern small box)")
}
if(surv=="SB"){
kables(list(
kable(CTDBox, caption = "CTD Box") %>%
kable_styling(full_width = FALSE, position = "float_left"),
kable(TowBox, caption = "Tow Box") %>%
kable_styling(full_width = FALSE, position = "right")))
}
if(surv=="GB"){
kbl(CTDBox, caption = "CTD Box") %>%
kable_styling(full_width = FALSE)
}
if(surv=="SB"){vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels,
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1,
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2,
NA)))}
if(surv=="GB"){vessels2=vessels}
Main = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/C", vessels2, ".csv"))
if(surv=="SB"){
if(!is.na(NVessel)){North = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
if(!is.na(EVessel)){East = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)}
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)}
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)}
if(is.na(NVessel) & is.na(EVessel)){Plan = Main}}
if(surv=="GB"){Plan=Main}
#Add vessel names to Plan
Plan = Plan %>%
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
Plan %>%
arrange(Vessel) %>%
kbl() %>%
kable_styling(full_width=FALSE)
b=surv.date+days(1)
c=substr(b,1,10)
d=paste0(Allocation, "mt/vessel.")
e=paste0(Allocation, "mt/vessel for German Bank and ", SIAllocation, "mt/vessel for Seal Island.")
i= "7. This is a non-fishing survey."
h=if(Allocation == 0){
print(i)
}
f=if(surv=="SB" & Allocation != 0){
paste0("7. Fishing to start on ", c, ", and allocation is ", d)
}
g=if(surv=="GB" & Allocation != 0){
paste0("7. Fishing to start on ", c, ", and allocation is ", e)
}
if(surv=="SB"){
cat("\n")
cat("### Tidal Charts", "\n")
cat("\n")
knitr::include_graphics(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Hourly.jpg"), rel_path = FALSE)
}
if(surv=="SB"){
cat("\n")
cat("### Tidal Charts", "\n")
cat("\n")
knitr::include_graphics(path=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Hourly.jpg"), rel_path = FALSE)
}
if(surv=="SB"){
knitr::include_graphics(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Daily.jpg"), rel_path = FALSE)
}
#save all changes and information to a .csv for Update Data and results
CurrentData = tibble(FlowmeterType = "General Oceanics", TowType = "Surface Tow", Gear = "1/500", PlanktonVessel = PlanktonVessel, EVessel = EVessel, NVessel = NVessel, Survey.No = surv.no, Ground = surv, Vessel.No = vessels, Net = "1")
Month = substr(StartDate, 6,7)
Day = substr(StartDate, 9,10)
Year = substr(StartDate, 1,4)
CurrentData$Date = as.character(paste0(Day,"/",Month,"/",Year))
CurrentData$StartTime = as.character(StartTime)
CurrentData = CurrentData %>%
mutate(ExtraBox = ifelse(!is.na(EVessel) & is.na(NVessel), "East",
ifelse(is.na(EVessel) & !is.na(NVessel), "North",
ifelse(!is.na(EVessel) & !is.na(NVessel), "Both",
ifelse(is.na(EVessel) & is.na(NVessel), "None",
NA))))) %>%
mutate(Fishing = ifelse(Allocation > 0 | !is.na(Allocation), "Y", "N")) %>%
mutate(PlanktonVessel = ifelse(PlanktonVessel == "Lady Janice", "Lady Janice II", PlanktonVessel))
CurrentData %>% write_csv((paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/Plan Data.csv")))
