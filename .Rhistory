can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
#GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
GBout <-crop(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
#SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
SBout <- crop(NBNS, SBMap, byid=TRUE)
#Make CTD Cast Box (GB or SB)
a = c("4334.320", "4333.600", "4333.600", "4334.320")
b = c("6622.080", "6622.080", "6621.000", "6621.000")
c = c("4503.432", "4503.000", "4503.000", "4503.432")
d = c("6513.048", "6513.048", "6512.000", "6512.000")
#If survey is Scots Bay, load the C + D coordinates above for the CTD box
if(surv == "SB") {
CTDBox = data.frame(c,d)
names(CTDBox) = c('Lat', 'Lon')
}
#If survey is German Bank, load the A + B coordinates above for the CTD Box
if(surv == "GB") {
CTDBox = data.frame(a,b)
names(CTDBox) = c('Lat', 'Lon')
}
#Make Tow Box (SB only)
a = c("4501.800", "4504.200", "4506.780", "4504.500")
b = c("6515.300", "6506.600", "6506.600", "6515.300")
TowBox = data.frame(a,b) #combine A + B into a dataframe for the Tow Box
names(TowBox) = c('Lat', 'Lon')
## Global options
rm(list = ls()) #removes everything in the current environment
#Change these options
surv = "GB"
surv2 = "German Bank"
surv.date = "2024-08-18 20:00:00" #survey date and time, as formatted
surv.no = "2"
Allocation = "100" #set to "0" for a non-fishing survey
SIAllocation = "100" #Seal Island allocation for GB-only
Tagging = "NA" #list vessel names in a single quote string (e.g. "Lady Melissa and Sealife II")
#Set vessels below
vessels = 6
EVessel = NA #Set NA for GB or excluding box
NVessel = NA #Set NA for GB or excluding box
PlanktonVessel = "Lady Melissa"
#Main box only (e.g. if vessels = 9 with both SB boxes, should have 1 Evessel, 1 Nvessel, and 7 Vessels below)
V1 = "Brunswick Provider"
V2 = "Lady Janice"
V3 = "Leroy and Barry"
V4 = "Fundy Monarch"
V5 = "Morning Star"
V6 = PlanktonVessel
V7 = NA
V8 = NA
V9 = NA
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/")) #sets the root directory for the entire document, when it isnt changed elsewhere by setwd()
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center') #sets the coding chunk options of the whole document to not appear in the actual document (echo)
#Import all packages and data
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
#Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Comment out to here for manual plans.
#Land Data - loads the land data the same way as Jenna's previous scripts
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/"))
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
#GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
GBout <-crop(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
#SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
SBout <- crop(NBNS, SBMap, byid=TRUE)
#Make CTD Cast Box (GB or SB)
a = c("4334.320", "4333.600", "4333.600", "4334.320")
b = c("6622.080", "6622.080", "6621.000", "6621.000")
c = c("4503.432", "4503.000", "4503.000", "4503.432")
d = c("6513.048", "6513.048", "6512.000", "6512.000")
#If survey is Scots Bay, load the C + D coordinates above for the CTD box
if(surv == "SB") {
CTDBox = data.frame(c,d)
names(CTDBox) = c('Lat', 'Lon')
}
#If survey is German Bank, load the A + B coordinates above for the CTD Box
if(surv == "GB") {
CTDBox = data.frame(a,b)
names(CTDBox) = c('Lat', 'Lon')
}
#Make Tow Box (SB only)
a = c("4501.800", "4504.200", "4506.780", "4504.500")
b = c("6515.300", "6506.600", "6506.600", "6515.300")
TowBox = data.frame(a,b) #combine A + B into a dataframe for the Tow Box
names(TowBox) = c('Lat', 'Lon')
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#if the Survey is German Bank, it will be stated as non-fishing (in **bold**)
if(surv == "GB"){
a=paste0("**", "non-fishing", "**")
}
#if the Survey is Scots Bay, it will be a 'fishing' survey.
if(surv == "SB") {
a="fishing"
}
#various combinations of which boxes are being used (north, east, none, etc), to determine a statement of which lines vessels are running
a=if(surv == "SB" & !is.na(EVessel) & !is.na(NVessel)){
paste(EVessel, "and", NVessel, "will run 4 lines in the East and North boxes, and all other vessels will be running 2 lines in the Main Survey Box")
}
b=if(surv == "SB" & is.na(EVessel) & !is.na(NVessel)){
paste(NVessel, "will run 4 lines in the North box, and all other vessels will be running 2 lines in the Main Survey Box")
}
c=if(surv == "SB" & is.na(EVessel) & is.na(NVessel)){
"All vessels will be running 2 lines in the Main Survey Box"
}
# change between one and two lines in Seal box as needed.
d=if(surv=="GB"){
"All vessels are to complete two lines each in the German Survey Box and two line in the Seal Island Box"
}
e=if(surv == "SB" & !is.na(EVessel) & is.na(NVessel)){
paste(EVessel, "will run 4 lines in the East box, and all other vessels will be running 2 lines in the Main Survey Box")
}
#Statement which only appears if Tagging is not NA
f=if(!is.na(Tagging)){
paste0("Tagging will be conducted from the ", Tagging, ".")
}
c="Vessels are reminded to complete their assigned transects as listed, straight, and without deviating."
#Afterwards, school surveying can be conducted while waiting to begin fishing but not before the assigned transects have been completed. Please run at least 3 parallel lines over the school and ensure the fishing sonars are turned off.
Plan2 = Plan %>%
dplyr::select(X = "Start Lon", Y = "Start Lat", Xend = "End Lon", Yend = "End Lat", Vessel)
if(surv=="GB"){
a =
ggplot(Plan2, aes(x=X, y=Y)) +
geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size=1) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group), fill = "gray") +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID),fill='white',col='black') +
coord_map() +
labs(x=NULL, y=NULL, caption = "Figure 1. Survey lines to be completed by participating vessels.")}
if(surv=="SB"){a = ggplot(Plan2, aes(x=X, y=Y)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group), fill = "gray") +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID),fill='white',col='black') +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID),fill='white',col='black') +
geom_segment(data=Plan2, aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size=0.5) +
coord_map() +
labs(x=NULL, y=NULL, caption = "Figure 1. Survey lines to be completed by participating vessels.")}
print(a)
## Global options
rm(list = ls()) #removes everything in the current environment
#Change these options
surv = "GB"
surv2 = "German Bank"
surv.date = "2024-08-18 20:00:00" #survey date and time, as formatted
surv.no = "2"
Allocation = "100" #set to "0" for a non-fishing survey
SIAllocation = "100" #Seal Island allocation for GB-only
Tagging = "NA" #list vessel names in a single quote string (e.g. "Lady Melissa and Sealife II")
#Set vessels below
vessels = 6
EVessel = NA #Set NA for GB or excluding box
NVessel = NA #Set NA for GB or excluding box
PlanktonVessel = "Lady Melissa"
#Main box only (e.g. if vessels = 9 with both SB boxes, should have 1 Evessel, 1 Nvessel, and 7 Vessels below)
V1 = "Brunswick Provider"
V2 = "Lady Janice"
V3 = "Leroy and Barry"
V4 = "Fundy Monarch"
V5 = "Morning Star"
V6 = PlanktonVessel
V7 = NA
V8 = NA
V9 = NA
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/")) #sets the root directory for the entire document, when it isnt changed elsewhere by setwd()
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center') #sets the coding chunk options of the whole document to not appear in the actual document (echo)
#Import all packages and data
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
#Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Comment out to here for manual plans.
#Land Data - loads the land data the same way as Jenna's previous scripts
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/"))
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
#GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
GBout <-crop(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
#SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
SBout <- crop(NBNS, SBMap, byid=TRUE)
#Make CTD Cast Box (GB or SB)
a = c("4334.320", "4333.600", "4333.600", "4334.320")
b = c("6622.080", "6622.080", "6621.000", "6621.000")
c = c("4503.432", "4503.000", "4503.000", "4503.432")
d = c("6513.048", "6513.048", "6512.000", "6512.000")
#If survey is Scots Bay, load the C + D coordinates above for the CTD box
if(surv == "SB") {
CTDBox = data.frame(c,d)
names(CTDBox) = c('Lat', 'Lon')
}
#If survey is German Bank, load the A + B coordinates above for the CTD Box
if(surv == "GB") {
CTDBox = data.frame(a,b)
names(CTDBox) = c('Lat', 'Lon')
}
#Make Tow Box (SB only)
a = c("4501.800", "4504.200", "4506.780", "4504.500")
b = c("6515.300", "6506.600", "6506.600", "6515.300")
TowBox = data.frame(a,b) #combine A + B into a dataframe for the Tow Box
names(TowBox) = c('Lat', 'Lon')
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#if the Survey is German Bank, it will be stated as non-fishing (in **bold**)
if(surv == "GB"){
a=paste0("**", "non-fishing", "**")
}
#if the Survey is Scots Bay, it will be a 'fishing' survey.
if(surv == "SB") {
a="fishing"
}
#various combinations of which boxes are being used (north, east, none, etc), to determine a statement of which lines vessels are running
a=if(surv == "SB" & !is.na(EVessel) & !is.na(NVessel)){
paste(EVessel, "and", NVessel, "will run 4 lines in the East and North boxes, and all other vessels will be running 2 lines in the Main Survey Box")
}
b=if(surv == "SB" & is.na(EVessel) & !is.na(NVessel)){
paste(NVessel, "will run 4 lines in the North box, and all other vessels will be running 2 lines in the Main Survey Box")
}
c=if(surv == "SB" & is.na(EVessel) & is.na(NVessel)){
"All vessels will be running 2 lines in the Main Survey Box"
}
# change between one and two lines in Seal box as needed.
d=if(surv=="GB"){
"All vessels are to complete two lines each in the German Survey Box and two line in the Seal Island Box"
}
e=if(surv == "SB" & !is.na(EVessel) & is.na(NVessel)){
paste(EVessel, "will run 4 lines in the East box, and all other vessels will be running 2 lines in the Main Survey Box")
}
#Statement which only appears if Tagging is not NA
f=if(!is.na(Tagging)){
paste0("Tagging will be conducted from the ", Tagging, ".")
}
c="Vessels are reminded to complete their assigned transects as listed, straight, and without deviating."
#Afterwards, school surveying can be conducted while waiting to begin fishing but not before the assigned transects have been completed. Please run at least 3 parallel lines over the school and ensure the fishing sonars are turned off.
Plan2 = Plan %>%
dplyr::select(X = "Start Lon", Y = "Start Lat", Xend = "End Lon", Yend = "End Lat", Vessel)
if(surv=="GB"){
a =
ggplot(Plan2, aes(x=X, y=Y)) +
geom_segment(aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size=1) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group), fill = "gray") +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID),fill='white',col='black') +
coord_map() +
labs(x=NULL, y=NULL, caption = "Figure 1. Survey lines to be completed by participating vessels.")}
if(surv=="SB"){a = ggplot(Plan2, aes(x=X, y=Y)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group), fill = "gray") +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID),fill='white',col='black') +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID),fill='white',col='black') +
geom_segment(data=Plan2, aes(x = X, y = Y, xend = Xend, yend = Yend, colour = Vessel), size=0.5) +
coord_map() +
labs(x=NULL, y=NULL, caption = "Figure 1. Survey lines to be completed by participating vessels.")}
print(a)
a=if(surv=="SB"){
paste0(PlanktonVessel, " will complete both plankton towing (bottom left outer box) and CTD casts (inner box)")
}
b=if(surv=="GB"){
paste0(PlanktonVessel, " will complete both plankton towing and CTD casts (northern small box)")
}
if(surv=="SB"){
kables(list(
kable(CTDBox, caption = "CTD Box") %>%
kable_styling(full_width = FALSE, position = "float_left"),
kable(TowBox, caption = "Tow Box") %>%
kable_styling(full_width = FALSE, position = "right")))
}
if(surv=="GB"){
kbl(CTDBox, caption = "CTD Box") %>%
kable_styling(full_width = FALSE)
}
#Main = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/2024/", surv, surv.no, "/", "Table.csv"))
# use the above if manual plan.
#Add vessel names to Plan
Plan = Main %>%
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "v3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "v4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V10", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V11", EVessel))
#if manual plan, read Table file and comment out below
if(surv=="SB"){vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels,
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1,
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1,
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2,
NA))))}
if(surv=="GB"){vessels2=vessels}
Main = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/C", vessels2, ".csv"))
if(surv=="SB"){
if(!is.na(NVessel)){North = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box_Captains.csv"))}
if(!is.na(EVessel)){East = read_csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box_Captains.csv"))}
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)}
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)}
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)}
if(is.na(NVessel) & is.na(EVessel)){Plan = Main}}
if(surv=="GB"){Plan=Main}
#Comment out to here
#Add vessel names to Plan
Plan = Plan %>%
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
Plan %>%
arrange(Vessel) %>%
kbl() %>%
kable_styling(., full_width = FALSE)
