#install.packages("devtools")
library(devtools)
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
rgeos <- "https://cran.r-project.org/src/contrib/Archive/rgeos/rgeos_0.6-4.tar.gz"
install.packages(rgeos, repos = NULL, type = "source")
library(rgeos) #this is an old version, and downloaded from archieve.
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(pander)
library(geodata) #this is an old version, and downloaded from archive.
library(pacman)
library(rnaturalearth)
library(rnaturalearthdata)
library(raster)
library(devtools)
library(maps)
library(dplyr)
#source("/Users/herri/Herring Science Council/Science Team - Documents/R Functions/getData.R")
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
# Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Comment out to here for manual plans.
#Land Data
#can<-getData('GADM', country="CAN", level=1) #getData is discontinued
can<-gadm(country='CAN', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("New Brunswick", "Nova Scotia", "Prince Edward Island", "Newfoundland and Labrador", "QuÃ©bec"))
library(devtools)
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
rgeos <- "https://cran.r-project.org/src/contrib/Archive/rgeos/rgeos_0.6-4.tar.gz"
install.packages(rgeos, repos = NULL, type = "source")
library(rgeos) #this is an old version, and downloaded from archieve.
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(pander)
library(geodata) #this is an old version, and downloaded from archive.
library(pacman)
library(rnaturalearth)
library(rnaturalearthdata)
library(raster)
library(devtools)
library(maps)
library(dplyr)
#source("/Users/herri/Herring Science Council/Science Team - Documents/R Functions/getData.R")
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
# Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Comment out to here for manual plans.
#Land Data
can<-getData('GADM', country="CAN", level=1) #getData is discontinued
library(geodata) #this is an old version, and downloaded from archive.
install.packages("geodata")
install.packages("geodata")
library(geodata) #this is an old version, and downloaded from archive.
library(geodata) #this is an old version, and downloaded from archive.
library(pacman)
library(rnaturalearth)
library(rnaturalearthdata)
library(raster)
library(devtools)
library(maps)
library(dplyr)
#source("/Users/herri/Herring Science Council/Science Team - Documents/R Functions/getData.R")
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
# Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Comment out to here for manual plans.
library(raster)
raster <- "https://cran.r-project.org/src/contrib/raster_3.6-32.tar.gz"
install.packages(raster, repos = NULL, type = "source")
library(raster)
library(devtools)
library(maps)
library(dplyr)
#source("/Users/herri/Herring Science Council/Science Team - Documents/R Functions/getData.R")
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
# Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Land Data
can<-getData('GADM', country="CAN", level=1) #getData is discontinued
#Land Data
#can<-getData('GADM', country="CAN", level=1) #getData is discontinued
can<-gadm(country='CAN', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("New Brunswick", "Nova Scotia", "Prince Edward Island", "Newfoundland and Labrador", "QuÃ©bec"))
#us = getData('GADM', country = "USA", level = 1) # getData is discontinued
us<-gadm(country='USA', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("Maine"))
can1 = rbind(can,us)
NBNS = can1
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
?as()
??[]
?[]
can<-gadm(country='CAN', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("New Brunswick", "Nova Scotia", "Prince Edward Island", "Newfoundland and Labrador", "QuÃ©bec"))
#us = getData('GADM', country = "USA", level = 1) # getData is discontinued
us<-gadm(country='USA', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("Maine"))
can1 = rbind(can,us)
NBNS = can1
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
??as()
#NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
#NBNS <- as(NBNS, "Spatial") #This causes it to run very slowly - takes a few minutes to process.
NBNS <- spatVectorToSpatial(NBNS)
```{r Data Import, include=FALSE}
library(devtools)
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
rgeos <- "https://cran.r-project.org/src/contrib/Archive/rgeos/rgeos_0.6-4.tar.gz"
install.packages(rgeos, repos = NULL, type = "source")
library(rgeos) #this is an old version, and downloaded from archieve.
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(pander)
install.packages("geodata")
library(geodata) #this is an old version, and downloaded from archive.
library(pacman)
library(rnaturalearth)
library(rnaturalearthdata)
raster <- "https://cran.r-project.org/src/contrib/raster_3.6-32.tar.gz"
install.packages(raster, repos = NULL, type = "source")
library(raster)
library(devtools)
library(maps)
library(dplyr)
#source("/Users/herri/Herring Science Council/Science Team - Documents/R Functions/getData.R")
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
# Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Comment out to here for manual plans.
install.packages("geodata")
#install.packages("geodata")
library(geodata) #this is an old version, and downloaded from archive.
library(pacman)
library(rnaturalearth)
library(rnaturalearthdata)
raster <- "https://cran.r-project.org/src/contrib/raster_3.6-32.tar.gz"
install.packages(raster, repos = NULL, type = "source")
library(raster)
library(devtools)
library(maps)
library(dplyr)
#source("/Users/herri/Herring Science Council/Science Team - Documents/R Functions/getData.R")
#Parse date time
surv.date = as.POSIXlt(surv.date, format="%Y-%m-%d %H:%M:%S")
StartTime = substr(surv.date, 12,19) #turns the 12th-19th section of surv.date into the start time (the 20:00:00 time of surv.date)
StartDate = substr(surv.date, 1,10) #turns the 1st-10th section of surv.date into the start date (the 2023-01-01 date of surv.date)
year = substr(surv.date, 1,4)
#Create Plan by combining main box with any extra boxes
# Plan = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#above line is only used if a manual plan override is needed, the ignore the below code (can '#' it to temporarily disable it)
vessels2 = ifelse(is.na(EVessel) & is.na(NVessel), vessels, #if no east + north vessels (SB), total number of main box vessels is equal to 'vessels' without changes
ifelse(!is.na(EVessel) & is.na(NVessel), vessels-1, #if there is an east vessel (but not north), total # of main box vessels is equal to 'vessels' minus 1
ifelse(is.na(EVessel) & !is.na(NVessel), vessels-1, #if there is a north vessel (but not east), total # of main box vessels is equal to 'vessels' minus 1
ifelse(!is.na(EVessel) & !is.na(NVessel), vessels-2, #if there is both an east + north vessel, total number of main box vessels is equal to 'vessels' minus 2
NA))))
Main = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/V", vessels2, ".csv"))
#the above line loads the default V# spreadsheets with the proper box spacing, based on number of attending vessels.
if(!is.na(NVessel)){North = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/North_Box.csv"))}
#if there is a NVessel this will load the North_Box.csv box outline
if(!is.na(EVessel)){East = read.csv(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Surveys/Survey Lines/", surv, "/East_Box.csv"))}
#if there is a EVessel this will load the East_Box.csv box outline
if(!is.na(NVessel) & is.na(EVessel)){Plan = full_join(Main, North)} #if there is a north vessel (but not east), the plan combines (full join) the main box + north box
if(is.na(NVessel) & !is.na(EVessel)){Plan = full_join(Main, East)} #if there is an east vessel (but not north), the plan combines (full join) the main box + east box
if(!is.na(NVessel) & !is.na(EVessel)){
Plan = full_join(Main, North)
Plan = full_join(Plan, East)} #if there is both an east and north vessel, the plan combines main + north first, then this combined frame with + east box.
if(is.na(NVessel) & is.na(EVessel)){Plan = Main} #if there is only main box vessels, the plan is equal to the main box plan with no changes.
#Add vessel names to Plan
Plan = Plan %>% #renames the base "V#" Vessels in the plan to the actual vessel names manually listed in the first code chunk.
mutate(Vessel = replace(Vessel, Vessel == "V1", V1)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V2", V2)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V3", V3)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V4", V4)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V5", V5)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V6", V6)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V7", V7)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V8", V8)) %>%
mutate(Vessel = replace(Vessel, Vessel == "V9", V9)) %>%
mutate(Vessel = replace(Vessel, Vessel == "NVessel", NVessel)) %>%
mutate(Vessel = replace(Vessel, Vessel == "EVessel", EVessel))
#Short-hand names and save for Update Data script usage
Plan2 = Plan %>% #convert the vessel names (on a separate Plan2) to their shorthand forms for other tools to use
mutate(Vessel = replace(Vessel, Vessel == "Leroy and Barry", "LB")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Morning Star", "MS")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Canada 100", "C1")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Fundy Monarch", "FM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Brunswick Provider", "BP")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Melissa", "LM")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Sealife II" | Vessel == "Sealife", "SL")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Lady Janice" | Vessel == "Lady Janice II", "LJ")) %>%
mutate(Vessel = replace(Vessel, Vessel == "Tasha Marie", "TM"))
write_csv(x=Plan2, file=paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no, "/survey plan.csv"))
#Comment out to here for manual plans.
#Land Data
#can<-getData('GADM', country="CAN", level=1) #getData is discontinued
can<-gadm(country='CAN', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("New Brunswick", "Nova Scotia", "Prince Edward Island", "Newfoundland and Labrador", "QuÃ©bec"))
