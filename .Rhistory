#}
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
with(test1, ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), as.numeric(1),
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), as.numeric(1),
0))))))))))))))
}
##
# Ground
r$FishingGround = NA
r$FishingGround = with(r, ifelse(r$NB_Coastal > 0, "NB Coastal",
ifelse(r$Grand_Manan > 0, "Grand Manan",
ifelse(r$Grand_Manan_Banks > 0, "Grand Manan Banks",
ifelse(r$Long_Island > 0, "Long Island",
ifelse(r$German_Bank > 0, "German Bank",
ifelse(r$Seal_Island > 0, "Seal Island",
ifelse(r$Scots_Bay > 0, "Scots Bay",
ifelse(r$Yankee_Bank > 0, "Yankee Bank",
ifelse(r$Trinity > 0, "Trinity",
ifelse(r$Browns_Bank > 0, "Brown Bank",
ifelse(r$SW_Grounds > 0, "SW Grounds",
ifelse(r$Gannet_Dry_Ledge > 0, "Gannet Dry Ledge",
ifelse(r$Lurcher > 0, "Lurcher",
"Other"))))))))))))))
TaggingEvents <- merge(TaggingEvents, r[, c("TAG_NUMBER", "FishingGround")], by = "TAG_NUMBER")
#TaggingSubset <- TaggingEvents[sample(1:nrow(TaggingEvents), 25, replace = FALSE),]
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Histogram showing average time differences between tagging in Days. Split into categories.
# Category 1 = 0 to 2 days. These should mostly be removed from analysis due to them being caught almost instantly.
# Category 2 = 3 to 10 days. This is the period that the survey window covers.
# Cat. 3 = 11 to 30 days. Rest of the first month.
# Cat. 4 = 31 to 183 days. Caught after the first month, before the 6 month mark.
# Cat. 5 = 184 to 365. Minimum time of 6 months between tagging event and being recaptured.
# Cat. 6 = 366 to 730. Caught a minimum of a year, up to two years after the tagging event.
# Cat. 7 = Anything after two years since tagging event.
TagReturns$timeDifference <- TagReturns$DATE - TagReturns$Date
TagReturns$timeDifference <- as.numeric(TagReturns$timeDifference)
TagReturns <- TagReturns[TagReturns$timeDifference >= 0,]
TagReturns$category = with(TagReturns, ifelse(TagReturns$timeDifference < 3, 1,
ifelse(TagReturns$timeDifference < 11 & TagReturns$timeDifference >= 3, 2,
ifelse(TagReturns$timeDifference < 31 & TagReturns$timeDifference >= 11, 3,
ifelse(TagReturns$timeDifference < 184 & TagReturns$timeDifference >= 31, 4,
ifelse(TagReturns$timeDifference < 366 & TagReturns$timeDifference >= 184, 5,
ifelse(TagReturns$timeDifference < 731 & TagReturns$timeDifference >= 366, 6,
ifelse(TagReturns$timeDifference < 1095 & TagReturns$timeDifference >= 731, 7, 8))))))))
TagReturns$category <- as.numeric(TagReturns$category)
TagReturns$Count <- 1
View(r)
# Assigning fishing grounds to sets. This takes  a few minutes to run through. This chunk between the ## is the slowest bit.
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"]) #
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
View(r)
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
with(test1, ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), "1",
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), "1",
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), "1",
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), "1",
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), "1",
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), "1",
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE),"1",
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), "1",
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), "1",
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), "1",
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), "1",
"N/A"))))))))))))))
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
with(test1, ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), "1",
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), "1",
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), "1",
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), "1",
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), "1",
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), "1",
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE),"1",
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), "1",
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), "1",
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), "1",
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), "1",
"N/A"))))))))))))))
}
# Ground
r$FishingGround = NA
exit
)
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
with(test1, ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), "1",
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), "1",
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), "1",
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), "1",
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), "1",
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), "1",
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE),"1",
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), "1",
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), "1",
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), "1",
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), "1",
"N/A"))))))))))))))
}
View(r)
year= substr(Sys.Date(),1,4)
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages, CTD data, and land data
local({r <- getOption("repos")
r["CRAN"] <- "https://cran.r-project.org"
options(repos=r)
})
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(pander)
library(geodata)
library(pacman)
library(rnaturalearth)
library(rnaturalearthdata)
library(raster)
library(devtools)
library(maps)
library(dplyr)
state_prov <- rnaturalearth::ne_states(c("united states of america", "canada"))
#Survey Data
surveyData <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/Survey Data.csv")
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
#All Adjusted Ages and Dates are originally added in Larval QC script.
#All preservative length adjustments added in in Larval QC script.
#Changed code within compendium from Lengthmm to LengthAdjustment
Larval = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Full Larval Jan 2025.csv"))
LarvalSum = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/LarvalSum Jan 2025.csv"))
LarvalSum$Year <- as.factor(LarvalSum$Year)
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$MonthDay <- format(Larval$Date, "%m-%d")
#Fix this
#Larval$AdjustedJulianSpawnDate <- as.numeric(Larval$AdjustedJulianSpawnDate) #AdjustedJulianSpawnDate is the median of the min and the max spawn date provided.
#Changed to X and Y to fit in better with compendium code. These are the tow start and finish coordinates.
names(Larval)[names(Larval) =="Lon1"] <- "X"
names(Larval)[names(Larval) =="Lat1"] <- "Y"
names(Larval)[names(Larval) =="Lon2"] <- "Xend"
names(Larval)[names(Larval) =="Lat2"] <- "Yend"
#Seal Island Larval
LarvalSI = filter(Larval, Ground == "SI")
LarvalSI = merge(LarvalSI, LarvalSum[,c("id", "TowReplicate", "TowID")], by = "id")
Larval = merge(Larval, LarvalSum[,c("id", "TowReplicate", "TowID")], by = "id")
#Land Data
#can<-getData('GADM', country="CAN", level=1) #getData is discontinued
can<-gadm(country='CAN', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("New Brunswick", "Nova Scotia", "Prince Edward Island", "Newfoundland and Labrador", "Québec"))
#us = getData('GADM', country = "USA", level = 1) # getData is discontinued
us<-gadm(country='USA', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("Maine"))
can1 = rbind(can,us)
NBNS = can1
#NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
#NBNS <- as(NBNS, "Spatial") #This causes it to run very slowly - takes about 20 minutes to process.
NBNS <- sf::st_as_sf(NBNS)
#For Tag Returns
completeReturns <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/complete.returns.csv"))
TaggingEvents <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
# TaggingEvents <- TaggingEvents %>%
#      rename(Tag_Num = TAG_NUMBER)
names(TaggingEvents)[names(TaggingEvents) == 'Tag_Num'] <- 'TAG_NUMBER'
rawReturn <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/rawReturn.csv"))
relINFO <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/relINFO.csv"))
polysNAFO <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/NAFO_subunits.csv"))
polysT <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/timGrounds.csv"))
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Assigning of Grounds
area1=polysT[which(polysT$Box == "NB Coastal"), ]
area2=polysT[which(polysT$Box == "Grand Manan"), ]
area3=polysT[which(polysT$Box == "Grand Manan Banks"), ]
area4=polysT[which(polysT$Box == "Long Island"), ]
area5=polysT[which(polysT$Box == "German Bank"), ]
area6=polysT[which(polysT$Box == "Seal Island"), ]
area7=polysT[which(polysT$Box == "Scots Bay"), ]
area8=polysT[which(polysT$Box == "Yankee Bank"), ]
area9=polysT[which(polysT$Box == "Trinity"), ]
area10=polysT[which(polysT$Box == "Browns Bank"), ]
area11=polysT[which(polysT$Box == "SW Grounds"), ]
area12=polysT[which(polysT$Box == "Gannet Dry Ledge"), ]
area13=polysT[which(polysT$Box == "Lurcher"), ]
ids = (TaggingEvents$TAG_NUMBER)
r = data.frame( TAG_NUMBER=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
#This part takes a really long time to run.
# Assigning fishing grounds to sets. This takes  a few minutes to run through. This chunk between the ## is the slowest bit.
#  for (i in 1:nrow(r)){
#    test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"]) #
#    test1 = TaggingEvents[test, ]
#    r$Y[i] = test1$Lat
#    r$X[i] = test1$Lon
#    r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
#    r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
#    r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
#    r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
#    r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
#    r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
#    r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
#    r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
#    r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
#    r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
#    r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
#    r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
#    r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
#
# }
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
with(test1, ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), "1",
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), "1",
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), "1",
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), "1",
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), "1",
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), "1",
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE),"1",
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), "1",
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), "1",
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), "1",
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), "1",
"N/A"))))))))))))))
}
##
# Ground
r$FishingGround = NA
r$FishingGround = with(r, ifelse(r$NB_Coastal > 0, "NB Coastal",
ifelse(r$Grand_Manan > 0, "Grand Manan",
ifelse(r$Grand_Manan_Banks > 0, "Grand Manan Banks",
ifelse(r$Long_Island > 0, "Long Island",
ifelse(r$German_Bank > 0, "German Bank",
ifelse(r$Seal_Island > 0, "Seal Island",
ifelse(r$Scots_Bay > 0, "Scots Bay",
ifelse(r$Yankee_Bank > 0, "Yankee Bank",
ifelse(r$Trinity > 0, "Trinity",
ifelse(r$Browns_Bank > 0, "Brown Bank",
ifelse(r$SW_Grounds > 0, "SW Grounds",
ifelse(r$Gannet_Dry_Ledge > 0, "Gannet Dry Ledge",
ifelse(r$Lurcher > 0, "Lurcher",
"Other"))))))))))))))
TaggingEvents <- merge(TaggingEvents, r[, c("TAG_NUMBER", "FishingGround")], by = "TAG_NUMBER")
#TaggingSubset <- TaggingEvents[sample(1:nrow(TaggingEvents), 25, replace = FALSE),]
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Histogram showing average time differences between tagging in Days. Split into categories.
# Category 1 = 0 to 2 days. These should mostly be removed from analysis due to them being caught almost instantly.
# Category 2 = 3 to 10 days. This is the period that the survey window covers.
# Cat. 3 = 11 to 30 days. Rest of the first month.
# Cat. 4 = 31 to 183 days. Caught after the first month, before the 6 month mark.
# Cat. 5 = 184 to 365. Minimum time of 6 months between tagging event and being recaptured.
# Cat. 6 = 366 to 730. Caught a minimum of a year, up to two years after the tagging event.
# Cat. 7 = Anything after two years since tagging event.
TagReturns$timeDifference <- TagReturns$DATE - TagReturns$Date
TagReturns$timeDifference <- as.numeric(TagReturns$timeDifference)
TagReturns <- TagReturns[TagReturns$timeDifference >= 0,]
TagReturns$category = with(TagReturns, ifelse(TagReturns$timeDifference < 3, 1,
ifelse(TagReturns$timeDifference < 11 & TagReturns$timeDifference >= 3, 2,
ifelse(TagReturns$timeDifference < 31 & TagReturns$timeDifference >= 11, 3,
ifelse(TagReturns$timeDifference < 184 & TagReturns$timeDifference >= 31, 4,
ifelse(TagReturns$timeDifference < 366 & TagReturns$timeDifference >= 184, 5,
ifelse(TagReturns$timeDifference < 731 & TagReturns$timeDifference >= 366, 6,
ifelse(TagReturns$timeDifference < 1095 & TagReturns$timeDifference >= 731, 7, 8))))))))
TagReturns$category <- as.numeric(TagReturns$category)
TagReturns$Count <- 1
View(r)
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), "1",
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), "1",
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), "1",
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), "1",
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), "1",
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), "1",
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE),"1",
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), "1",
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), "1",
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), "1",
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), "1",
"N/A"))))))))))))))
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), "1",
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), "1",
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), "1",
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), "1",
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), "1",
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), "1",
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE),"1",
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), "1",
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), "1",
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), "1",
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), "1",
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), "1",
"N/A")))))))))))))
}
View(r)
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE),
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE),
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE),
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE),
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE),
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE),
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE),
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE),
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE),
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE),
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE),
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE),
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE),
)))))))))))))
}
View(r)
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE),
View(test1)
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
with(test1, ifelse(point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE == r$Scots_Bay[i]), 1,
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), 1,
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), 1,
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), 1,
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), 1,
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), 1,
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), 1,
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE), 1,
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE),  1,
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), 1,
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), 1,
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), 1,
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), 1,
"N/A"
))))))))))))))
}
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
with(test1, ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), 1,
ifelse(r$German_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE), 1,
ifelse(r$Seal_Island[i] == point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE), 1,
ifelse(r$Gannet_Dry_Ledge[i] == point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE), 1,
ifelse(r$Grand_Manan_Banks[i] == point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE), 1,
ifelse(r$Long_Island[i] == point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE), 1,
ifelse(r$Lurcher[i] == point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE), 1,
ifelse(r$SW_Grounds[i] == point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE), 1,
ifelse(r$NB_Coastal[i] == point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE), 1,
ifelse(r$Grand_Manan[i] == point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE), 1,
ifelse(r$Trinity[i] == point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE), 1,
ifelse(r$Yankee_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE), 1,
ifelse(r$Browns_Bank[i] == point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE), 1,
NA
))))))))))))))
}
View(r)
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
(test1, ifelse(r$Scots_Bay[i] == point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE), 1,
