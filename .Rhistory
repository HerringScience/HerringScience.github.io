xlab("Julian Day") +
ylim(NA, 14.5) +
ggtitle("German Bank"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "German Bank"), aes(x = Julian, y = StratTemp, colour = Year)) +
geom_point() +
ylab("Temperature Difference") +
xlab("Julian Day") +
ylim(c(0, 8)) +
ggtitle("German Bank")
ggplot(data = subset(atDepth, Ground == "German Bank"), aes(x=Year, y=StratTemp, group = Year, colour = Year)) +
geom_boxplot() +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(NA, 6.5)+
labs(x="Year", y = "Temperature Difference (C)", title = "Temperature Difference (Stratification) vs. Year")
atDepth1 = atDepth %>%
filter(Ground == "German Bank") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = StratTemp, colour = Year)) +
geom_point() +
geom_line() +
ylab("Temperature Difference") +
xlab("Julian Day") +
ylim(c(0, 8)) +
ggtitle("German Bank"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "German Bank"), aes(x = Julian, y = StratSalt, colour = Year)) +
geom_point() +
ylab("Salinity Difference") +
xlab("Julian Day") +
ylim(c(0, 1.8)) +
ggtitle("German Bank")
ggplot(data = subset(atDepth, Ground == "German Bank"), aes(x=Year, y=StratSalt, group = Year, colour = Year)) +
geom_boxplot() +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -1) +
ylim(NA,1.6) +
labs(x="Year", y = "Salinity Difference (PSS)", title = "Salinity Difference (Stratification) vs. Year")
atDepth1 = atDepth %>%
filter(Ground == "German Bank") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = StratSalt, colour = Year)) +
geom_point() +
geom_line() +
ylab("Salinity Difference") +
xlab("Julian Day") +
ylim(c(0, 1.8)) +
ggtitle("German Bank"))
cat("\n")
}
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
ggplot(data = subset(CTD, Ground == "Scots Bay"), aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = Year), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL)
CP <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
ggplot(data = subset(CTD, Ground == "German Bank" & In_Box == "1"), aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(fill = Year), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL)
#Reset spatial extent back to full view
CP <- as(extent(-69, -63, 42, 45.5), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
ggplot(data = CTD, aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group),fill='burlywood4',col='black') +
geom_point(pch=21, size = 2, fill = "White")+ ggtitle("CTD Cast Locations") +
labs(x=NULL, y=NULL) +
coord_map() +
theme(panel.background = element_rect(fill = "grey68"))
ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == year & In_Box == "1"), aes(x=Lon, y=Lat)) + #To use if within the survey season
#ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == 2023 & In_Box == "1"), aes(x=Lon, y=Lat)) + #To use if outside of the survey season. Reset year.
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = Survey), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL)
#ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) + #To use if within the survey season
ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == 2023), aes(x=Temperature, y=Depth, colour = Julian_factor)) + #To use if outside of the survey season. Reset year.
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (째C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (째C) vs. Depth (m)")
ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == year & In_Box == "1"), aes(x=Lon, y=Lat)) + #To use if within the survey season
#ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == 2023 & In_Box == "1"), aes(x=Lon, y=Lat)) + #To use if outside of the survey season. Reset year.
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = Survey), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL)
ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) + #To use if within the survey season
#ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == 2023), aes(x=Temperature, y=Depth, colour = Julian_factor)) + #To use if outside of the survey season. Reset year.
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (째C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (째C) vs. Depth (m)")
year= substr(Sys.Date(),1,4)
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates USING 2024 HSC NUMBERS.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data 2024 HSC numbers.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
#All Adjusted Ages and Dates are originally added in Larval QC script.
#All preservative length adjustments added in in Larval QC script.
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation. They did suggest that this adjustment would be less accurate the longer the tow period.
# These equations are when the maximum shrinkage has occurred.
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$MonthDay <- format(Larval$Date, "%m-%d")
LarvalSI = filter(Larval, Ground == "SI")
LarvalSum = read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/LarvalSum.csv"))
LarvalSum$Year <- as.factor(LarvalSum$Year)
#Land Data
# added raster:: as getData alone was throwing an error
can<-raster::getData('GADM', country="CAN", level=1)
us = raster::getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu챕bec", "Maine"),]
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
LRP2 %>% dplyr::select(Year, Biomass, LRP, ThreeYear) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP2 %>% dplyr::select(Year, Biomass, LRP, ThreeYear) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 = LRP2 %>%
dplyr::select(Year, Scots, German, Seal, Biomass, LRP, ThreeYear="ThreeYear") %>%
mutate(Difference = ThreeYear-LRP)
LRP3 %>% arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay", "German Bank", "Seal Isl.", "Biomass (mt)", "LRP", "3yr Avg", "Difference"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'))) %>%
formatStyle(columns = "Difference", color = styleInterval(cuts = 0, values = c("red", "green")))
View(LRP2)
View(LRP3)
LRP3 %>% dplyr::select(Year, Scots) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, Scots) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay"),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>% dplyr::select(Year, German) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, German, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "German Bank", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>% filter(Year > 2017) %>%
dplyr::select(Year, Seal) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
#breaks=unique(as.integer("x")) %>% #use as as.integer for x axis to reformat to full years?
dyOptions(drawPoints = TRUE, pointSize = 2, digitsAfterDecimal = 0) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
View(LRP2)
View(SSB)
year= substr(Sys.Date(),1,4)
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates USING 2024 HSC NUMBERS.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data 2024 HSC numbers.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
#All Adjusted Ages and Dates are originally added in Larval QC script.
#All preservative length adjustments added in in Larval QC script.
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation. They did suggest that this adjustment would be less accurate the longer the tow period.
# These equations are when the maximum shrinkage has occurred.
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$MonthDay <- format(Larval$Date, "%m-%d")
LarvalSI = filter(Larval, Ground == "SI")
LarvalSum = read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/LarvalSum.csv"))
LarvalSum$Year <- as.factor(LarvalSum$Year)
#Land Data
# added raster:: as getData alone was throwing an error
can<-raster::getData('GADM', country="CAN", level=1)
us = raster::getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu챕bec", "Maine"),]
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
LRP2 %>% dplyr::select(Year, Biomass, LRP, ThreeYear) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 = LRP2 %>%
dplyr::select(Year, Scots, German, Seal, Biomass, LRP, ThreeYear="ThreeYear") %>%
mutate(Difference = ThreeYear-LRP)
LRP3 %>% arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay", "German Bank", "Seal Isl.", "Biomass (mt)", "LRP", "3yr Avg", "Difference"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'))) %>%
formatStyle(columns = "Difference", color = styleInterval(cuts = 0, values = c("red", "green")))
LRP3 %>% dplyr::select(Year, Scots) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, Scots) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay"),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>% dplyr::select(Year, German) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, German, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "German Bank", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>% filter(Year > 2017) %>%
dplyr::select(Year, Seal) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
#breaks=unique(as.integer("x")) %>% #use as as.integer for x axis to reformat to full years?
dyOptions(drawPoints = TRUE, pointSize = 2, digitsAfterDecimal = 0) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>% filter(Year > 2017) %>%
dplyr::select(Year, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
Plot_Summary = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank" | Ground == "Seal Island") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(Biomass = sum(DFO_Turnover_Adjusted), na.rm = FALSE)
p = ggplot(data=Plot_Summary,  aes(x=Year, y=Biomass)) +
geom_col(fill = "darkblue") +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank" | Ground == "Seal Island") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
arrange(desc(Year))
datatable(Table,
colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
