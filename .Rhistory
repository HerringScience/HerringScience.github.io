labs(x = "Tag to Catch Location", y="Number of Events") +
ggtitle("Gannet Dry Ledget Tag Returns excluding fish caught within 2 days of being tagged") +
scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsGDL %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- TagReturnsGDL %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
TagReturnsL <- subset(TagReturns, subset = (FishingGround == "Lurcher"))
TagReturnsL$TagLocation <- with(TagReturnsL, ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "German Bank" |
TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "German Bank (Area 7)", "L to GB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Scots Bay" |
TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Scots Bay (Area 8)", "L to SB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "NB Coastal", "L to NBC",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Grand Manan", "L to GM",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Grand Manan Banks", "L to GMB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Long Island", "L to LI",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Seal Island", "L to SI",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Yank", "L to YB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Trinity", "L to T",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Browns Bank", "L to BB",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "SW Grounds", "L to SWG",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Gannet Dry Ledge", "L to GDL",
ifelse(TagReturnsL$FishingGround == "Lurcher" & TagReturnsL$catchAREA == "Lurcher", "L to L", "Other"
))))))))))))))
TagReturnsL <- subset(TagReturnsL, TagLocation != "Other")
SummaryTable <- TagReturnsL %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
# ggplot(data = TagReturnsL, (aes(TagLocation, fill = category))) +
#         geom_histogram(binwidth=1, colour = "white", stat = "count") +
#         theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
#         labs(x = "Tag to Catch Location", y="Number of Events") +
#         ggtitle("Lurcher Tag Returns") +
#         scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsL %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
#Removed category 1 larvae - any caught within 2 days of tagging.
TagReturnsL <- subset(TagReturnsL, subset = (category != "1"))
ggplot(data = TagReturnsL, (aes(TagLocation, fill = category))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Tag to Catch Location", y="Number of Events") +
ggtitle("Lurcher Tag Returns excluding fish caught within 2 days of being tagged") +
scale_y_continuous(breaks= pretty_breaks())
# Table <- TagReturnsL %>%
#   dplyr::select(TAG_NUMBER,
#                 category,
#                 Date,
#                 FishingGround,
#                 DATE,
#                 catchAREA,
#                 timeDifference,
#                 AvgtimeDifference,
#                 timeDifferenceMin,
#                 timeDifferenceMax,
#                 No.InCategory,
#                 No.ofSameNumberOfDays)%>%
#   arrange(timeDifference)
#
#
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- TagReturnsL %>%
group_by(TagLocation, category) %>%
count()
kbl(SummaryTable, col.names = c("Tag Location", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
GearTable <- TagReturns %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
GearType,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
GearTable$Count = 1
GearTable<-subset(GearTable, subset = (GearType != "N/A"))
ggplot(GearTable, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return") +
labs(fill = "Category")+
scale_x_discrete(guide = guide_axis(n.dodge = 3))
GearWithout1 <- subset(GearTable, subset = (category != 1))
ggplot(GearWithout1, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return") +
labs(fill = "Category")+
scale_x_discrete(guide = guide_axis(n.dodge = 3))
SummaryTable <- GearWithout1 %>%
group_by(GearType, category) %>%
count()
kbl(SummaryTable, col.names = c("Gear Type", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
WeirTable <- subset(GearTable, subset = (GearType != "Purse Seine"))
WeirTable <- subset(WeirTable, subset = (GearType != "Mid Water Trawl"))
WeirTable <- subset(WeirTable, subset = GearType != "Seiner/Frozen")
ggplot(WeirTable, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return to Gear Type") +
labs(fill = "Category")+
scale_x_discrete(guide = guide_axis(n.dodge = 3))
ggplot(WeirTable, aes(x=GearType, y = Count, fill = factor(FishingGround))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return to gear type from specific tagging ground") +
labs(fill = "Tagging Ground")+
scale_x_discrete(guide = guide_axis(n.dodge = 3))
SummaryTable <-WeirTable %>%
group_by(GearType, category) %>%
count()
kbl(SummaryTable, col.names = c("Gear Type", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
#ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == year & In_Box == "1"), aes(x=Lon, y=Lat)) + #To use if within the survey season
ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == 2023 & In_Box == "1"), aes(x=Lon, y=Lat)) + #To use if outside of the survey season. Reset year.
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = Survey), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL)
#ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) + #To use if within the survey season
ggplot(data = subset(CTD, Ground == "Scots Bay" & Year == 2023), aes(x=Temperature, y=Depth, colour = Julian_factor)) + #To use if outside of the survey season. Reset year.
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (°C) vs. Depth (m)")
#CTD1 = CTD %>%
# filter(Year == year & Ground == "Scots Bay") %>%
# arrange(Survey)                                          # To use within the survey window
CTD1 = CTD %>%
filter(Year == 2023 & Ground == "Scots Bay") %>%
arrange(Survey)                                           # To use outside of Survey window. Reset year.
for(i in unique(CTD1$Survey)) {
cat("\n")
cat("##### Survey", i, "\n")
cat("\n")
print(ggplot(data = subset(CTD1, Survey == i), aes(x=Lon, y=Lat)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(pch=21, size = 2, fill = "red") +
coord_map() +
labs(x=NULL, y=NULL))
cat("\n")
print(ggplot(data = subset(CTD1, Survey == i), aes(x=Temperature, y=Depth)) +
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", title = "Temperature (°C) vs. Depth (m)"))
cat("\n")
}
CP <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons") #set boundaries for German Bank before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
# ggplot(data = subset(CTD, Ground == "German Bank" & Year == year & In_Box == "1"), aes(x=Lon, y=Lat)) + #To use within the survey window
ggplot(data = subset(CTD, Ground == "German Bank" & Year == 2023 & In_Box == "1"), aes(x=Lon, y=Lat)) +  #To use outside of the survey window. Reset Year.
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(fill = Survey), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL)
#ggplot(data = subset(CTD, Ground == "German Bank" & Year == year), aes(x=Temperature, y=Depth, colour = Julian_factor)) +  #To use within the survey window
ggplot(data = subset(CTD, Ground == "German Bank" & Year == 2023), aes(x=Temperature, y=Depth, colour = Julian_factor)) +   # To use outside of the survey window. Reset Year.
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", colour='Julian Day', title = "Temperature (°C) vs. Depth (m)")
CTD1 = CTD %>%
filter(Year == year & Ground == "German Bank") %>%
arrange(Survey)
for(i in unique(CTD1$Survey)) {
cat("\n")
cat("##### Survey", i, "\n")
cat("\n")
print(ggplot(data = subset(CTD1, Survey == i), aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(pch=21, size = 2, fill = "red") +
coord_map() +
labs(x=NULL, y=NULL))
cat("\n")
print(ggplot(data = subset(CTD1, Survey == i), aes(x=Temperature, y=Depth)) +
geom_path(size = 1.5) +
scale_y_reverse() +
labs(x="Temperature (°C)", y = "Depth (m)", title = "Temperature (°C) vs. Depth (m)"))
cat("\n")
}
ggplot(data = subset(SST, Ground == "Scots Bay" & In_Box == "1"), aes(x = Julian, y = Temperature, colour = Year)) +
geom_point() +
geom_line() +
ylab("Average Sea Surface Temperature") +
xlab("Julian Day") +
ggtitle("Scots Bay")
Summer = SST %>%
subset(Ground == "Scots Bay" & In_Box == "1" & Month == "8")
ggplot(data = Summer, aes(x=Year, y=Temperature, group = Year, colour = Year))+
geom_boxplot() +
ylab("Average Sea Surface Temperature") +
ggtitle("August SST") +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(8.5,16.5)
ggplot(data = subset(SST, Ground == "Scots Bay" & In_Box == "1"), aes(x=Year, y=Temperature, group = Year, colour = Year)) +
geom_boxplot() +
facet_wrap(~Month) +
ylim(7.5, 15.5) +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -1) +
labs(x="Year", y = "Sea Surface Temperature (SST) (C)", title = "Scots Bay: Monthly SST vs. Year") +
theme(axis.text.x = element_text(angle = 55))
SST1 = SST %>%
filter(Ground == "Scots Bay" & In_Box == "1") %>%
arrange(Survey) %>%
arrange(Year)
for(i in unique(SST1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(SST1, Year == i), aes(x = Julian, y = Temperature)) +
geom_point() +
geom_line() +
ylab("Average Sea Surface Temperature") +
xlab("Julian Day") +
ylim(NA, 16) +
ggtitle("Scots Bay"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "Scots Bay" & In_Box == "1"), aes(x = Julian, y = Temperature, colour = Year)) +
geom_point() +
geom_line() +
ylab("Average Temperature at 30m Depth") +
xlab("Julian Day") +
ggtitle("Scots Bay")
Summer = atDepth %>%
subset(Ground == "Scots Bay" & In_Box == "1" & Month == "8")
ggplot(data = Summer, aes(x=Year, y=Temperature, group = Year, colour = Year))+
geom_boxplot() +
ylab("Average Temperature at 30m Depth") +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(9,15) +
ggtitle("August At-Depth Temperature")
ggplot(data = subset(atDepth, Ground == "Scots Bay" & In_Box == "1"), aes(x=Year, y=Temperature, group = Year, colour = Year)) +
geom_boxplot() +
facet_wrap(~Month) +
ylim(7.5, 14.5) +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -1) +
labs(x="Year", y = "Temperature (C) at 30m Depth", title = "Scots Bay: Monthly 30m Temperature vs. Year") +
theme(axis.text.x = element_text(angle = 55))
atDepth1 = atDepth %>%
filter(Ground == "Scots Bay" & In_Box == "1") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = Temperature)) +
geom_point() +
geom_line() +
ylab("Average Temperature at 30m Depth") +
xlab("Julian Day") +
ylim(NA, 16) +
ggtitle("Scots Bay"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "Scots Bay" & In_Box == "1"), aes(x = Julian, y = StratTemp, colour = Year)) +
geom_point() +
ylab("Temperature Difference") +
xlab("Julian Day") +
ylim(NA, 1.7) +
ggtitle("Scots Bay")
ggplot(data = subset(atDepth, Ground == "Scots Bay" & In_Box == "1"), aes(x=Year, y=StratTemp, group = Year, colour = Year)) +
geom_boxplot() +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(NA,1.7) +
labs(x="Year", y = "Temperature Difference (C)", title = "Temperature Difference (Stratification) vs. Year")
atDepth1 = atDepth %>%
filter(Ground == "Scots Bay" & In_Box == "1") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = StratTemp, colour = Year)) +
geom_point() +
geom_line() +
ylab("Temperature Difference") +
xlab("Julian Day") +
ylim(NA, 1.7) +
ggtitle("Scots Bay"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "Scots Bay" & In_Box == "1"), aes(x = Julian, y = StratSalt, colour = Year)) +
geom_point() +
ylab("Salinity Difference") +
xlab("Julian Day") +
ylim(c(0, 0.7)) +
ggtitle("Scots Bay")
ggplot(data = subset(atDepth, Ground == "Scots Bay" & In_Box == "1"), aes(x=Year, y=StratSalt, group = Year, colour = Year)) +
geom_boxplot() +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(NA,0.75)
labs(x="Year", y = "Salinity Difference (PSS)", title = "Salinity Difference (Stratification) vs. Year")
atDepth1 = atDepth %>%
filter(Ground == "Scots Bay" & In_Box == "1") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = StratSalt, colour = Year)) +
geom_point() +
geom_line() +
ylab("Salinity Difference") +
xlab("Julian Day") +
ylim(NA, 0.7) +
ggtitle("Scots Bay"))
cat("\n")
}
ggplot(data = subset(SST, Ground == "German Bank" & In_Box == "1"), aes(x = Julian, y = Temperature, colour = Year)) +
geom_point() +
geom_line() +
ylab("Average Sea Surface Temperature") +
xlab("Julian Day") +
ggtitle("German Bank")
Summer = SST %>%
subset(Ground == "German Bank" & In_Box == "1" & Month == "8")
ggplot(data = Summer, aes(x=Year, y=Temperature, group = Year, colour = Year))+
geom_boxplot() +
ylab("Average Sea Surface Temperature") +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(9.5,18) +
ggtitle("August SST")
ggplot(data = subset(SST, Ground == "German Bank" & In_Box == "1"), aes(x=Year, y=Temperature, group = Year, colour = Year)) +
geom_boxplot() +
facet_wrap(~Month) +
ylim(9.5, 18) +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -1) +
labs(x="Year", y = "Sea Surface Temperature (SST) (C)", title = "German Bank: Monthly SST vs. Year") +
theme(axis.text.x = element_text(angle = 55))
SST1 = SST %>%
filter(Ground == "German Bank" & In_Box == "1") %>%
arrange(Survey)
for(i in unique(SST1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(SST1, Year == i), aes(x = Julian, y = Temperature)) +
geom_point() +
geom_line() +
ylab("Average Sea Surface Temperature") +
xlab("Julian Day") +
ylim(NA, 18) +
ggtitle("German Bank"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "German Bank" & In_Box == "1"), aes(x = Julian, y = Temperature, colour = Year)) +
geom_point() +
geom_line() +
ylab("Average Temperature at 30m Depth") +
xlab("Julian Day") +
ggtitle("German Bank")
Summer = atDepth %>%
subset(Ground == "German Bank" & In_Box == "1" & Month == "8")
ggplot(data = Summer, aes(x=Year, y=Temperature, group = Year, colour = Year))+
geom_boxplot() +
ylab("Average Temperature at 30m Depth") +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(9,14)+
ggtitle("August At-Depth Temperature")
ggplot(data = subset(atDepth, Ground == "German Bank" & In_Box == "1"), aes(x=Year, y=Temperature, group = Year, colour = Year)) +
geom_boxplot() +
facet_wrap(~Month) +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -1) +
ylim(10,13.5) +
labs(x="Year", y = "Temperature (C) at 30m Depth", title = "German Bank: Monthly 30m Temperature vs. Year") +
theme(axis.text.x = element_text(angle = 55))
atDepth1 = atDepth %>%
filter(Ground == "German Bank" & In_Box == "1") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = Temperature)) +
geom_point() +
geom_line() +
ylab("Average Temperature at 30m Depth") +
xlab("Julian Day") +
ylim(NA, 14.5) +
ggtitle("German Bank"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "German Bank" & In_Box == "1"), aes(x = Julian, y = StratTemp, colour = Year)) +
geom_point() +
ylab("Temperature Difference") +
xlab("Julian Day") +
ylim(c(0, 8)) +
ggtitle("German Bank")
ggplot(data = subset(atDepth, Ground == "German Bank" & In_Box == "1"), aes(x=Year, y=StratTemp, group = Year, colour = Year)) +
geom_boxplot() +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -0.5) +
ylim(NA, 6.5)+
labs(x="Year", y = "Temperature Difference (C)", title = "Temperature Difference (Stratification) vs. Year")
atDepth1 = atDepth %>%
filter(Ground == "German Bank" & In_Box == "1") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = StratTemp, colour = Year)) +
geom_point() +
geom_line() +
ylab("Temperature Difference") +
xlab("Julian Day") +
ylim(c(0, 8)) +
ggtitle("German Bank"))
cat("\n")
}
ggplot(data = subset(atDepth, Ground == "German Bank" & In_Box == "1"), aes(x = Julian, y = StratSalt, colour = Year)) +
geom_point() +
ylab("Salinity Difference") +
xlab("Julian Day") +
ylim(c(0, 1.8)) +
ggtitle("German Bank")
ggplot(data = subset(atDepth, Ground == "German Bank" & In_Box == "1"), aes(x=Year, y=StratSalt, group = Year, colour = Year)) +
geom_boxplot() +
stat_summary(fun.y = median, fun.ymax = length,
geom = "text", aes(label = ..ymax..), vjust = -1) +
ylim(NA,1.6) +
labs(x="Year", y = "Salinity Difference (PSS)", title = "Salinity Difference (Stratification) vs. Year")
atDepth1 = atDepth %>%
filter(Ground == "German Bank" & In_Box == "1") %>%
arrange(Survey)
for(i in unique(atDepth1$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
print(ggplot(data = subset(atDepth1, Year == i), aes(x = Julian, y = StratSalt, colour = Year)) +
geom_point() +
geom_line() +
ylab("Salinity Difference") +
xlab("Julian Day") +
ylim(c(0, 1.8)) +
ggtitle("German Bank"))
cat("\n")
}
ggplot(data = subset(SST, Ground == "Scots Bay"), aes(x = Julian, y = Temperature, colour = Year)) +
geom_point() +
