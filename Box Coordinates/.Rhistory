mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay",
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other')))
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags)
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>%
mutate(Year = as.numeric(substr(Date, 1, 4))) %>%
dplyr::select(-Tag_Annual)
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>%
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2)
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger")
# Save TaggingEvents.csv
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
#TaggingEvents %>% write_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv")
#TaggingEvents %>% write_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv")
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
# Set all tagging log data here
Tag_Num = c(563750:564000) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-08-20" #"YYYY-MM-DD"
Lat = "45 07 18" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "65 03 23"
Vessel = "Fundy Monarch" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
#Tagging <- read_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv")
Tagging$Date = ymd(Tagging$Date)
# Modify Data
Lon = conv_unit(Lon,"deg_min_sec","dec_deg")
Lon = as.numeric(Lon)
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg")
Lat = as.numeric(Lat)
Lon = -1*Lon
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD)
Tags$Date = ymd(Tags$Date)
Tags = Tags %>%
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson",
ifelse(Vessel == "Sealife II", "Annik Doucette",
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay",
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other')))
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags)
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>%
mutate(Year = as.numeric(substr(Date, 1, 4))) %>%
dplyr::select(-Tag_Annual)
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>%
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2)
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger")
# Save TaggingEvents.csv
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
#TaggingEvents %>% write_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv")
#TaggingEvents %>% write_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv")
# remove everything in the workspace
rm(list = ls())
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
# Set all tagging log data here
Tag_Num = c(521201:521545) #Can add any tag entries, including breaks/gaps in the sequences
Date = "2023-08-23" #"YYYY-MM-DD"
Lat = "43 23 00" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "66 10 00"
Vessel = "Tasha Marie" #As written unless changed in script below: "Lady Melissa", "Sealife II", "Tasha Marie", "Lady Janice", "Morning Star"
Survey = NA #Survey number for Scots Bay or German Bank when tags were applied, otherwise "NA"
CTD = NA #Add the CTD id only if a TAGGER completed a cast (not the cast by the HSC tech)
##
###
### SCRIPT BELOW ###
###
##
# Load TaggingEvents.csv
Tagging <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
#Tagging <- read_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv")
Tagging$Date = ymd(Tagging$Date)
# Modify Data
Lon = conv_unit(Lon,"deg_min_sec","dec_deg")
Lon = as.numeric(Lon)
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg")
Lat = as.numeric(Lat)
Lon = -1*Lon
Tags = tibble(Tag_Num, Date, Lon, Lat, Vessel, Survey, CTD)
Tags$Date = ymd(Tags$Date)
Tags = Tags %>%
mutate(Tagger = ifelse(Vessel == "Lady Melissa", "Joseph Nickerson",
ifelse(Vessel == "Sealife II", "Annik Doucette",
ifelse(Vessel == "Tasha Marie", "Dale Fitzgerald",
ifelse(Vessel == "Lady Janice", "Lee Surette",
ifelse(Vessel == "Morning Star", "Nicholas D'entremont",
ifelse(Vessel == "Fundy Monarch", "William Cusack",
ifelse(Vessel == "Canada 100", "William Cusack",
ifelse(Vessel == "Brunswick Provider", "William Cusack",
NA))))))))) %>%
mutate(Ground = ifelse(between(Lat, 45.02, 45.4) & between(Lon, -65.5, -64.5), "Scots Bay",
ifelse(between(Lat, 43.15, 43.7) & between(Lon, -66.75, -66.05), "German Bank", 'Other')))
# Bind Data and add Julian/Annual Tags
TaggingEvents = full_join(Tagging, Tags)
TaggingEvents = TaggingEvents %>%
mutate(Julian = yday(Date)) %>%
mutate(Year = as.numeric(substr(Date, 1, 4))) %>%
dplyr::select(-Tag_Annual)
Tag_Annual = TaggingEvents %>%
group_by(Tagger) %>%
mutate(count = n_distinct(Year)) %>%
summarize(n=n(), count2 = mean(count)) %>%
mutate(Tag_Annual = n/count2) %>%
dplyr::select(-n, -count2)
TaggingEvents = left_join(TaggingEvents, Tag_Annual, by = "Tagger")
# Save TaggingEvents.csv
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
TaggingEvents %>% write_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv"))
#TaggingEvents %>% write_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv")
#TaggingEvents %>% write_csv("/Users/tracey/Dropbox/Mac/Documents/GitHub/HerringScience.github.io/Main Data/TaggingEvents.csv")
## Global options
rm(list = ls())
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(measurements)
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
# Grand Manan Area
CP6 <- as(extent(-68, -66, 44, 45), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP1) <- CRS(proj4string(NBNS))
All <- gIntersection(NBNS, CP1, byid=TRUE)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
points = read.csv("Points.csv")
boxes = read.csv("timGrounds.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
#polyST = as.PolySet(SUA, projection="LL")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Add tagging data
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Source Data/"))
tags = read.csv("TaggingEvents.csv")
Tag1 = tags %>%
filter(Tag_Num == 551485 |
Tag_Num == 500597 )
Tag1 = Tag1 %>%
dplyr::select(Tag_Num, Date, Lon, Lat, Vessel)
CP6 <- as(extent(-68, -66, 44, 45), "SpatialPolygons")
proj4string(CP6) <- CRS(proj4string(NBNS))
GM <- gIntersection(NBNS, CP6, byid=TRUE)
#All Data at once
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=Tag1, aes(x=Lon, y=Lat, colour = Date), size=3) +
coord_map() +
labs(x=NULL, y=NULL)
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
library(cli)
library(reprex)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(ggplot2)
#Set lat and long here
Lat = "43 37 00" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "66 39 00"
Lon = conv_unit(Lon,"deg_min_sec","dec_deg")
Lon = as.numeric(Lon)
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg")
Lat = as.numeric(Lat)
Lon = -1*Lon
#Set calendar date here
date = "2022-07-14"
julian = yday(date)
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
# Grand Manan Area
CP6 <- as(extent(-68, -66, 44, 45), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP1) <- CRS(proj4string(NBNS))
All <- gIntersection(NBNS, CP1, byid=TRUE)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
points = read.csv("Points.csv")
boxes = read.csv("timGrounds.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
#polyST = as.PolySet(SUA, projection="LL")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
df <- as.data.frame (cbind(Lon,Lat))
#All Data at once
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=df, aes(x=Lon, y=Lat), size=3) +
coord_map() +
labs(x=NULL, y=NULL)
# remove everything in the workspace
rm(list = ls())
library(lubridate)
library(tidyverse)
library(measurements)
library(cli)
library(reprex)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(ggplot2)
#Set lat and long here
Lat = "44 38 00" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "66 38 00"
Lon = conv_unit(Lon,"deg_min_sec","dec_deg")
Lon = as.numeric(Lon)
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg")
Lat = as.numeric(Lat)
Lon = -1*Lon
#Set calendar date here
date = "2022-07-14"
julian = yday(date)
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
# Grand Manan Area
CP6 <- as(extent(-68, -66, 44, 45), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP1) <- CRS(proj4string(NBNS))
All <- gIntersection(NBNS, CP1, byid=TRUE)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
points = read.csv("Points.csv")
boxes = read.csv("timGrounds.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
#polyST = as.PolySet(SUA, projection="LL")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
df <- as.data.frame (cbind(Lon,Lat))
#All Data at once
ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(aes(colour = Box),fill= NA,lwd=1) +
geom_polygon(data=All,aes(x=long, y=lat, group=group)) +
geom_point(data=df, aes(x=Lon, y=Lat), size=3) +
coord_map() +
labs(x=NULL, y=NULL)
# remove everything in the workspace
rm(list = ls())
# remove everything in the workspace
rm(list = ls())
install.packages("suncalc")
library (data.table)
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
library (tibble)
library (sunriset)
install.packages("suncalc")
i
# remove everything in the workspace
rm(list = ls())
install.packages("suncalc")
install.packages("suncalc")
library (data.table)
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
library (tibble)
library (sunriset)
install.packages("suncalc")
install.packages("suncalc")
library (data.table)
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
library (tibble)
library (sunriset)
#Set lat and long here
Lat = "43 15 90" #Degree-Min-Sec format from the boat but only the numbers written with spaces (e.g. "44 16 23")
Lon = "66 21 96"
Lon = conv_unit(Lon,"deg_min_sec","dec_deg")
Lon = as.numeric(Lon)
Lat = conv_unit(Lat, "deg_min_sec", "dec_deg")
Lat = as.numeric(Lat)
Lon = -1*Lon
#Set calendar date here
date = "2023-08-25"
date = as.Date(date)
julian = yday(date)
sunrise.set( "Lat", "Lon", "2023/08/25", timzone = "ADT", num.days = 1 )
install.packages("suncalc")
