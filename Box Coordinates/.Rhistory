library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
#Tagging Data
Tag = read_csv("Tagging Data.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$surv.No <- as.factor(Larval$surv.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
#Import All Boxes
setwd("G:/My Drive/HSC Working/R Markdown/Box Coordinates/")
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Larval1 = Larval %>% filter(Year == i)
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
print(ggplot(Larval1, aes(JulianCollect, Lengthmm)) +
geom_jitter(size = 2) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(x= "Julian Date of Collection", y = "Length (mm)"))
cat("\n")
TotalCategories <- Larval1
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1)
kbl(TotalCategories, col.names=c("Category", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F)
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
print(ggplot(Larval1, aes(JulianCollect, Lengthmm)) +
geom_jitter(size = 2) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(x= "Julian Date of Collection", y = "Length (mm)"))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1)
kbl(TotalCategories, col.names=c("Category", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F)
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
print(ggplot(Larval1, aes(x=X, y=Y)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(data=Larval1, aes(fill = category, size = Abundance), pch=21, alpha = 0.6) +
labs(x=NULL, y=NULL) +
coord_map())
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1)
kbl(TotalCategories, col.names=c("Category", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F)
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
print(ggplot(Larval1, aes(x=X, y=Y)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(data=Larval1, aes(fill = category, size = Abundance), pch=21, alpha = 0.6) +
labs(x=NULL, y=NULL) +
coord_map())
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1)
print(kbl(TotalCategories, col.names=c("Category", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
print(ggplot(aes(Lengthmm, AvgTowDepth, colour = category)) +
geom_point() +
scale_y_reverse() +
labs(x = "Length (mm)", y = "Average Tow Depth (m)", colour = "Category"))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
summarize(n = n(),
MeanDepth = mean(AvgTowDepth, na.rm = TRUE)) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
relocate(MeanDepth, .after= Percentage)
print(kbl(TotalCategories, col.names=c("Category", "Abundance", "%", "Avg Tow Depth (m)"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
print(ggplot(data=Larval1, (aes(Lengthmm, AvgTowDepth, colour = category))) +
geom_point() +
scale_y_reverse() +
labs(x = "Length (mm)", y = "Average Tow Depth (m)", colour = "Category"))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
summarize(n = n(),
MeanDepth = mean(AvgTowDepth, na.rm = TRUE)) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
relocate(MeanDepth, .after= Percentage)
print(kbl(TotalCategories, col.names=c("Category", "Abundance", "%", "Avg Tow Depth (m)"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
?opts_chunk
rm(list = ls())
#Set number of vessels
boats =  7
surv = "Scots Bay"
year = "2023"
setwd("G:/My Drive/HSC Working/Survey Plan R/")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
#Import All Boxes
setwd("G:/My Drive/HSC Working/R Markdown/Box Coordinates/")
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Set Vessel Lines Data
#Make Plan Table
#Make CTD Cast Box (GB or SB)
a = c("Lat", "Lon")
b = c("4334.320", "6622.080")
c = c("4333.600", "6622.080")
d = c("4333.600", "6621.000")
e = c("4334.320", "6621.000")
f = c("4503.432", "6513.048")
g = c("4503.000", "6513.048")
h = c("4503.000", "6512.000")
i = c("4503.432", "6512.000")
if(surv = "Scots Bay") {
if(surv == "Scots Bay") {
CTDBox = data.frame(a,b,c,d,e)
}
if(surv == "German Bank") {
CTDBox = dataframe(a,f,g,h,i)
}
View(CTDBox)
rm(list = ls())
#Set number of vessels
boats =  7
surv = "Scots Bay"
year = "2023"
setwd("G:/My Drive/HSC Working/Survey Plan R/")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
#Import All Boxes
setwd("G:/My Drive/HSC Working/R Markdown/Box Coordinates/")
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Set Vessel Lines Data
#Make Plan Table
#Make CTD Cast Box (GB or SB)
a = c("Lat", "Lon")
b = c("4334.320", "4333.600", "4333.600", "4334.320")
c = c("6622.080", "6622.080", "6621.000", "6621.000")
d = c("4503.432", "4503.000", "4503.000", "4503.432")
e = c("6513.048", "6513.048", "6512.000", "6512.000")
if(surv == "Scots Bay") {
CTDBox = data.frame(a,b,c)
}
if(surv == "German Bank") {
CTDBox = dataframe(a,d,e)
}
View(CTDBox)
b = c("4334.320", "4333.600", "4333.600", "4334.320")
c = c("6622.080", "6622.080", "6621.000", "6621.000")
d = c("4503.432", "4503.000", "4503.000", "4503.432")
e = c("6513.048", "6513.048", "6512.000", "6512.000")
if(surv == "Scots Bay") {
CTDBox = data.frame(b,c)
}
if(surv == "German Bank") {
CTDBox = dataframe(d,e)
}
View(CTDBox)
if(surv == "Scots Bay") {
CTDBox = data.frame(b,c)
names(CTDBox = c('Lat', 'Lon'))
}
if(surv == "German Bank") {
CTDBox = dataframe(d,e)
names(CTDBox = c('Lat', 'Lon'))
}
View(CTDBox)
if(surv == "Scots Bay") {
CTDBox = data.frame(b,c)
names(CTDBox) = c('Lat', 'Lon')
}
if(surv == "German Bank") {
CTDBox = dataframe(d,e)
names(CTDBox) = c('Lat', 'Lon')
}
View(CTDBox)
if(surv == "Scots Bay") {
CTDBox = data.frame(b,c)
names(CTDBox) = c('Lat', 'Lon')
}
View(CTDBox)
if(surv == "Scots Bay") {
CTDBox = data.frame(d,e)
names(CTDBox) = c('Lat', 'Lon')
}
View(CTDBox)
if(surv == "German Bank") {
CTDBox = dataframe(b,c)
names(CTDBox) = c('Lat', 'Lon')
}
View(CTDBox)
rm(list = ls())
#Set number of vessels
boats =  7
surv = "Scots Bay"
year = "2023"
setwd("G:/My Drive/HSC Working/Survey Plan R/")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
#Import All Boxes
setwd("G:/My Drive/HSC Working/R Markdown/Box Coordinates/")
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Set Vessel Lines Data
#Make Plan Table
#Make CTD Cast Box (GB or SB)
b = c("4334.320", "4333.600", "4333.600", "4334.320")
c = c("6622.080", "6622.080", "6621.000", "6621.000")
d = c("4503.432", "4503.000", "4503.000", "4503.432")
e = c("6513.048", "6513.048", "6512.000", "6512.000")
if(surv == "Scots Bay") {
CTDBox = data.frame(d,e)
names(CTDBox) = c('Lat', 'Lon')
}
if(surv == "German Bank") {
CTDBox = dataframe(b,c)
names(CTDBox) = c('Lat', 'Lon')
}
View(CTDBox)
rm(list = ls())
#Set number of vessels
boats =  7
surv = "German Bank"
year = "2023"
setwd("G:/My Drive/HSC Working/Survey Plan R/")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
#Import All Boxes
setwd("G:/My Drive/HSC Working/R Markdown/Box Coordinates/")
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Set Vessel Lines Data
#Make Plan Table
#Make CTD Cast Box (GB or SB)
b = c("4334.320", "4333.600", "4333.600", "4334.320")
c = c("6622.080", "6622.080", "6621.000", "6621.000")
d = c("4503.432", "4503.000", "4503.000", "4503.432")
e = c("6513.048", "6513.048", "6512.000", "6512.000")
if(surv == "Scots Bay") {
CTDBox = data.frame(d,e)
names(CTDBox) = c('Lat', 'Lon')
}
if(surv == "German Bank") {
CTDBox = dataframe(b,c)
names(CTDBox) = c('Lat', 'Lon')
}
rm(list = ls())
#Set number of vessels
boats =  7
surv = "German Bank"
year = "2023"
setwd("G:/My Drive/HSC Working/Survey Plan R/")
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
#Import All Boxes
setwd("G:/My Drive/HSC Working/R Markdown/Box Coordinates/")
boxes = read.csv("surveyBoxes.csv")
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Set Vessel Lines Data
#Make Plan Table
#Make CTD Cast Box (GB or SB)
b = c("4334.320", "4333.600", "4333.600", "4334.320")
c = c("6622.080", "6622.080", "6621.000", "6621.000")
d = c("4503.432", "4503.000", "4503.000", "4503.432")
e = c("6513.048", "6513.048", "6512.000", "6512.000")
if(surv == "Scots Bay") {
CTDBox = data.frame(d,e)
names(CTDBox) = c('Lat', 'Lon')
}
if(surv == "German Bank") {
CTDBox = data.frame(b,c)
names(CTDBox) = c('Lat', 'Lon')
}
View(CTDBox)
