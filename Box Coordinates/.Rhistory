b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=if_else(a != 0,
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
a=unique(ifelse(Survey$Sample == "Y",
"Samples were obtained for target strength estimation.",
"Since no fish were caught, no samples were obtained for target strength estimation."))
if(surv == "SB"){
w=paste0("### Tides Tables")
}
if(surv == "GB"){
w=cat("\n")
}
if(surv == "SB"){
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Daily.jpg"), rel_path = FALSE)
}
if(surv == "SB"){knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Hourly.jpg"), rel_path = FALSE)}
if(surv == "SB"){t = paste0("Tide Schedule for Margaretsville NS, Station #315m Source: www.waterlevels.gc.ca")}
if(surv == "GB"){t=cat("\n")
}
if(surv == "GB"){b= tableC %>% filter(Layer == "German Bank")
b=sum(b$'Biomass (tons)')}
if(surv == "SB"){b=sum(tableC$`Biomass (tons)`, na.rm=TRUE)}
b=format(b, big.mark=(","), digits=2)
c=as.numeric(tableC$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
d=d$'Biomass (tons)'
d=format(d, big.mark=(","), digits=2)
if(surv.no == 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt."))}
if(surv.no > 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt."))}
f=f[1:1]
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/PRCplot.jpg"), rel_path = FALSE)
rm(list = ls())
#Change these options
surv = "GB"
surv2 = "German Bank"
year = "2023"
surv.no = "1"
hightide = "2023-08-06 21:07:00" #for Scots Bay only
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(sp)
library(sf)
library(terra)
#Survey Data
Survey = read_csv("Survey Data.csv") #Survey Data
Survey$Year = as.factor(Survey$Year)
Survey$Ground = as.factor(Survey$Ground)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
CTD2=CTD
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- crop(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- crop(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
Tag = Tag %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
CTD = CTD %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
current=paste0(unique(Survey$Ground), unique(Survey$Survey.No))
if(surv == "SB"){
if(!is.na(unique(Survey$EVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBEastern.csv"))
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(unique(Survey$NVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBNorthern.csv"))
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SB.csv"))
polySB_main = as.PolySet(SUA, projection="LL")}
if(surv == "GB"){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_GB.csv"))
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SI.csv"))
polySI = as.PolySet(SUA, projection="LL")}
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current))
Map = list.files(pattern = "Map*") %>%
map_df(~read_csv(.))
Region = list.files(pattern = "Region*") %>%
map_df(~read_csv(.))
Speed=read_csv("Speed.csv")
Distance=read_csv("Distance.csv")
SurveyTotal=read_csv("Performance Total.csv")
#Results Tables
tableB=read_csv("tableB.csv") %>% dplyr::select(-Distance)
tableC=read_csv("tableC.csv")
x=unique(ifelse(Survey$Ground == "SB", "Scots Bay", "German Bank"))
y=unique(Survey$Survey.No)
z=unique(Survey$Date)
Map = Map %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
Region = Region %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
if(surv == "SB"){
a = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))}
if(surv == "GB"){
a = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))}
plot(a)
a=unique(Survey$Vessel.No)
b=unique(ifelse(Survey$Fishing == "Y", "fishing", ifelse(Survey$Fishing == "N", "non-fishing", "NA")))
c=unique(Survey$Date)
d=unique(Survey$StartTime)
e=unique(Survey$EVessel)
f=unique(Survey$NVessel)
g=unique(ifelse(Survey$Ground == "GB", "All vessels ran two transects in the German Bank box and two transect in the Seal Island Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "None", "All vessels ran two transects each in the Main Survey Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", paste("All vessels ran two transects each in the Main Survey Box, and the ", e, " ran four lines in the Eastern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", paste("All vessels ran two transects each in the Main Survey Box, and the ", f, "ran four lines in the Northern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", paste("All vessels ran two transects each in the Main Survey Box, the ", e, "ran four lines in the Eastern Survey Box, and the ", f, "ran four lines in the Northern            Survey Box"),
"NA"))))))
h=unique(ifelse(is.na(Survey$PlanktonVessel), "There was no plankton tow or CTD cast conducted", paste("There was a plankton tow and replicate conducted and CTD cast by ", unique(Survey$PlanktonVessel))))
i=unique(ifelse(Survey$Ground == "GB", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "None", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", a-2,
"NA"))))))
month1 = substr(c,4,5)
day1 = substr(c,1,2)
tidestring = paste0(year, "-", month1, "-", day1, " ", d)
tidestring = as.POSIXlt(tidestring, format="%Y-%m-%d %H:%M:%S")
hightide = as.POSIXlt(hightide, format="%Y-%m-%d %H:%M:%S")
tidediff = as.double(difftime(tidestring, hightide, units = "hours"))
j = ifelse(tidediff < 0, "before", "after")
k = abs(round(tidediff, digits = 2))
if(surv == "SB")
{n = paste0(a, " commercial purse seiners conducted this ", b, " survey on ", c, " starting at ", d, ", which was ", k, " hours ", j, " hide tide.")}
if(surv == "GB")
{n = paste0(a, " commercial purse seiners conducted this ", b, " survey on ", c, " starting at ", d, ".")}
if(surv == "SB"){
l = paste0(i, " vessels ran ", g)
}
if(surv == "GB"){
l = g
}
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=if_else(a != 0,
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
a=unique(ifelse(Survey$Sample == "Y",
"Samples were obtained for target strength estimation.",
"Since no fish were caught, no samples were obtained for target strength estimation."))
if(surv == "SB"){
w=paste0("### Tides Tables")
}
if(surv == "GB"){
w=cat("\n")
}
if(surv == "SB"){
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Daily.jpg"), rel_path = FALSE)
}
if(surv == "SB"){knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Hourly.jpg"), rel_path = FALSE)}
if(surv == "SB"){t = paste0("Tide Schedule for Margaretsville NS, Station #315m Source: www.waterlevels.gc.ca")}
if(surv == "GB"){t=cat("\n")
}
if(surv == "GB"){b= tableC %>% filter(Layer == "German Bank")
b=sum(b$'Biomass (tons)')}
if(surv == "SB"){b=sum(tableC$`Biomass (tons)`, na.rm=TRUE)}
b=format(b, big.mark=(","), digits=2)
c=as.numeric(tableC$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
d=d$'Biomass (tons)'
d=format(d, big.mark=(","), digits=2)
if(surv.no == 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt."))}
if(surv.no > 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt."))}
f=f[1:1]
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/PRCplot.jpg"), rel_path = FALSE)
rm(list = ls())
#Change these options
surv = "GB"
surv2 = "German Bank"
year = "2023"
surv.no = "1"
hightide = "2023-08-06 21:07:00" #for Scots Bay only
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(sp)
library(sf)
library(terra)
#Survey Data
Survey = read_csv("Survey Data.csv") #Survey Data
Survey$Year = as.factor(Survey$Year)
Survey$Ground = as.factor(Survey$Ground)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
CTD2=CTD
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- crop(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- crop(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
Tag = Tag %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
CTD = CTD %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
current=paste0(unique(Survey$Ground), unique(Survey$Survey.No))
if(surv == "SB"){
if(!is.na(unique(Survey$EVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBEastern.csv"))
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(unique(Survey$NVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBNorthern.csv"))
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SB.csv"))
polySB_main = as.PolySet(SUA, projection="LL")}
if(surv == "GB"){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_GB.csv"))
polyGB = as.PolySet(SUA, projection="LL")
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SI.csv"))
polySI = as.PolySet(SUA, projection="LL")}
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current))
Map = list.files(pattern = "Map*") %>%
map_df(~read_csv(.))
Region = list.files(pattern = "Region*") %>%
map_df(~read_csv(.))
Speed=read_csv("Speed.csv")
Distance=read_csv("Distance.csv")
SurveyTotal=read_csv("Performance Total.csv")
#Results Tables
tableB=read_csv("tableB.csv") %>% dplyr::select(-Distance)
tableC=read_csv("tableC.csv")
x=unique(ifelse(Survey$Ground == "SB", "Scots Bay", "German Bank"))
y=unique(Survey$Survey.No)
z=unique(Survey$Date)
Map = Map %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
Region = Region %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
if(surv == "SB"){
a = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))}
if(surv == "GB"){
a = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))}
plot(a)
a=unique(Survey$Vessel.No)
b=unique(ifelse(Survey$Fishing == "Y", "fishing", ifelse(Survey$Fishing == "N", "non-fishing", "NA")))
c=unique(Survey$Date)
d=unique(Survey$StartTime)
e=unique(Survey$EVessel)
f=unique(Survey$NVessel)
g=unique(ifelse(Survey$Ground == "GB", "All vessels ran two transects in the German Bank box and two transect in the Seal Island Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "None", "All vessels ran two transects each in the Main Survey Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", paste("All vessels ran two transects each in the Main Survey Box, and the ", e, " ran four lines in the Eastern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", paste("All vessels ran two transects each in the Main Survey Box, and the ", f, "ran four lines in the Northern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", paste("All vessels ran two transects each in the Main Survey Box, the ", e, "ran four lines in the Eastern Survey Box, and the ", f, "ran four lines in the Northern            Survey Box"),
"NA"))))))
h=unique(ifelse(is.na(Survey$PlanktonVessel), "There was no plankton tow or CTD cast conducted", paste("There was a plankton tow and replicate conducted and CTD cast by ", unique(Survey$PlanktonVessel))))
i=unique(ifelse(Survey$Ground == "GB", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "None", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", a-2,
"NA"))))))
month1 = substr(c,4,5)
day1 = substr(c,1,2)
tidestring = paste0(year, "-", month1, "-", day1, " ", d)
tidestring = as.POSIXlt(tidestring, format="%Y-%m-%d %H:%M:%S")
hightide = as.POSIXlt(hightide, format="%Y-%m-%d %H:%M:%S")
tidediff = as.double(difftime(tidestring, hightide, units = "hours"))
j = ifelse(tidediff < 0, "before", "after")
k = abs(round(tidediff, digits = 2))
if(surv == "SB")
{n = paste0(a, " commercial purse seiners conducted this ", b, " survey on ", c, " starting at ", d, ", which was ", k, " hours ", j, " hide tide.")}
if(surv == "GB")
{n = paste0(a, " commercial purse seiners conducted this ", b, " survey on ", c, " starting at ", d, ".")}
if(surv == "SB"){
l = paste0(i, " vessels ran ", g)
}
if(surv == "GB"){
l = g
}
Tag_Summary = Tag %>%
group_by(Date, Vessel, Lon, Lat) %>%
summarize(Tag_Count = n_distinct(Tag_Num))
a=sum(Tag_Summary$Tag_Count)
a=format(a, big.mark=",")
b=length(unique(Tag_Summary$Lat))
c=unique(first(Tag_Summary$Date))
d=unique(last(Tag_Summary$Date))
e=length(unique(Tag_Summary$Vessel))
f=if_else(a != 0,
paste0("A total of ", a, " tags were applied during the survey over ", b, " event(s) from ", c, " to ", d, " from ", e, " vessel(s)."),
"No tags were applied during this survey.")
a=unique(ifelse(Survey$Sample == "Y",
"Samples were obtained for target strength estimation.",
"Since no fish were caught, no samples were obtained for target strength estimation."))
if(surv == "SB"){
w=paste0("### Tides Tables")
}
if(surv == "GB"){
w=cat("\n")
}
if(surv == "SB"){
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Daily.jpg"), rel_path = FALSE)
}
if(surv == "SB"){knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/Hourly.jpg"), rel_path = FALSE)}
if(surv == "SB"){t = paste0("Tide Schedule for Margaretsville NS, Station #315m Source: www.waterlevels.gc.ca")}
if(surv == "GB"){t=cat("\n")
}
if(surv == "GB"){b= tableC %>% filter(Layer == "German Bank")
b=sum(b$'Biomass (tons)')}
if(surv == "SB"){b=sum(tableC$`Biomass (tons)`, na.rm=TRUE)}
b=format(b, big.mark=(","), digits=2)
c=as.numeric(tableC$Turnover)
c=format(c, big.mark=(","), digits=2)
d=tableC %>% filter(Layer == "Seal Island")
d=d$'Biomass (tons)'
d=format(d, big.mark=(","), digits=2)
if(surv.no == 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt."))}
if(surv.no > 1){f=ifelse(Survey$Ground=="GB", paste0("Preliminary biomass prediction for German Bank using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt. The preliminary biomass estimate for Seal Island is ", d, "mt."), paste0("Preliminary biomass prediction for Scots Bay using standardized parallel transects is ", b, "mt, and with turnover applied ", c, "mt."))}
f=f[1:1]
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/PRCplot.jpg"), rel_path = FALSE)
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/PRCplot.jpg"), rel_path = FALSE)
knitr::include_graphics(path = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/PRCplot.jpg"), rel_path = FALSE)
