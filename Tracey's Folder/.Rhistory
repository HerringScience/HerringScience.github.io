polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
LRP2 %>% dplyr::select(Year, Biomass, LRP, ThreeYear) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 = LRP2 %>%
dplyr::select(Year, Scots, German, Seal, Biomass, LRP, ThreeYear="ThreeYear") %>%
mutate(Difference = ThreeYear-LRP)
LRP3 %>% arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay", "German Bank", "Seal Isl.", "Biomass (mt)", "LRP", "3yr Avg", "Difference"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'))) %>%
formatStyle(columns = "Difference", color = styleInterval(cuts = 0, values = c("red", "green")))
LRP3 %>% dplyr::select(Year, Scots) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, Scots) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Scots Bay"),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>% dplyr::select(Year, German) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, German, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "German Bank", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
Plot_Summary = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(Biomass = sum(DFO_Turnover_Adjusted), na.rm = FALSE)
p = ggplot(data=Plot_Summary,  aes(x=Year, y=Biomass)) +
geom_col(fill = "darkblue") +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
arrange(desc(Year))
datatable(Table,
colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
p = ggplot(data=subset(SSB, Ground == "Scots Bay"),  aes(x=Year, y=DFO_Turnover_Adjusted, fill= Survey_Number)) +
geom_col() +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "Scots Bay") %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
ungroup() %>%
arrange(desc(Year))
datatable(Table, colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
p = ggplot(data=subset(SSB, Ground == "German Bank"),  aes(x=Year, y=DFO_Turnover_Adjusted, fill= Survey_Number)) +
geom_col() +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "German Bank") %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
ungroup() %>%
arrange(desc(Year))
datatable(Table, colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "Scots Bay" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "Scots Bay" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "German Bank" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "German Bank" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
Plot = Tag %>% subset(Ground == "Scots Bay" & Year == year) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup()
ggplot(data = Plot, aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Survey, # of Tags")
Tag1 = Tag %>%
filter(Year == year & Ground == "Scots Bay") %>%
arrange(Survey) %>%
group_by(Vessel, Survey) %>%
mutate(group2=paste0(Vessel, ", n=", length(Vessel))) %>%
ungroup()
for(i in unique(Tag1$Survey)) {
cat("\n")
cat("##### Survey", i, "\n")
cat("\n")
print(ggplot(data = subset(Tag1, Survey == i), aes(x=Lon, y=Lat)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill = "Vessel, # of Tags"))
cat("\n")
}
CP <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons") #set boundaries for German Bank before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
Plot = Tag %>% subset(Ground == "German Bank" & Year == year) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup()
ggplot(data = Plot, aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Survey, # of Tags")
Tag1 = Tag %>%
filter(Year == year & Ground == "German Bank") %>%
arrange(Survey) %>%
group_by(Vessel, Survey) %>%
mutate(group2=paste0(Vessel, ", n=", length(Vessel))) %>%
ungroup()
for(i in unique(Tag1$Survey)) {
cat("\n")
cat("##### Survey", i, "\n")
cat("\n")
print(ggplot(data = subset(Tag1, Survey == i), aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Vessel, # of Tags"))
cat("\n")
}
#Reset spatial extent back to full view
CP <- as(extent(-69, -63, 42, 45.5), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
ggplot(data = subset(Tag, Lon < -64.1), aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_polygon(data=out,aes(x=long, y=lat, group=group),fill='burlywood4',col='black') +
geom_point(pch=21, size = 2, fill = "White") +
ggtitle("Tagging Locations") +
labs(x=NULL, y=NULL) +
coord_map() +
theme(panel.background = element_rect(fill = "grey68"))
library(rlang)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
library(ggplot2)
library(maps)
library(dplyr)
library(RColorBrewer)
library(AICcmodavg)
library(datasets)
library(multcompView)
###remove everything in environment
rm(list = ls())
setwd("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Tracey's Folder")
Survey_Factors <- read_csv("surveyFactorsAll_Tracey with SSB data.csv")
Survey_Data <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/Survey Data.csv")
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Area", "Julian", "DFO_Estimate"))
JulianAndBiomass <- na.omit(JulianAndBiomass)
ScotsBay_Turnover <- subset(JulianAndBiomass, Survey_Area=='SB' )
OneWayJB <- aov(DFO_Estimate ~ Julian, data = ScotsBay_Turnover)
summary(OneWayJB)
Point_Graph <- ggplot(ScotsBay_Turnover, aes(Julian, DFO_Estimate)) +geom_smooth() + geom_point()
View(Survey_Data)
View(JulianAndBiomass)
View(Survey_Factors)
View(JulianAndBiomass)
View(Survey_Data)
View(Survey_Factors)
setwd("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Tracey's Folder")
Survey_Factors <- read_csv("surveyFactorsAll_Tracey with SSB data.csv")
Survey_Data <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/Survey Data.csv")
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Area", "Julian", "DFO_Estimate"))
JulianAndBiomass <- na.omit(JulianAndBiomass)
ScotsBay_Turnover <- subset(JulianAndBiomass, Survey_Area=='SB' )
OneWayJB <- aov(DFO_Estimate ~ Julian, data = ScotsBay_Turnover)
summary(OneWayJB)
Point_Graph <- ggplot(ScotsBay_Turnover, aes(Julian, DFO_Estimate)) +geom_smooth() + geom_point()
print(Point_Graph)
print(Point_Graph. x = Survey Biomass, y = Julian Day)
Point_Graph <- ggplot(ScotsBay_Turnover, aes(Julian, DFO_Estimate), x = Survey Biomass, y = Julian Day) +geom_smooth() + geom_point()
print(Point_Graph)
Point_Graph <- ggplot(ScotsBay_Turnover, aes(Julian, DFO_Estimate) +geom_smooth() + geom_point()
###Number of Vessels and Survey biomass
VesselsBiomass <- subset(Survey_Factors, select=c("No_of_Vessels", "Julian", "DFO_Estimate", "Survey_Area"))
print(Point_Graph + labs(y = "Survey Biomass", x = "Julian Day"))
print(Point_Graph + labs(y = "Survey Biomass (mt)", x = "Julian Day"))
View(ScotsBay_Turnover)
View(Survey_Factors)
View(Survey_Factors)
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area", "Julian", "DFO_Estimate"))
setwd("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Tracey's Folder")
Survey_Factors <- read_csv("surveyFactorsAll_Tracey with SSB data.csv")
Survey_Data <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/Survey Data.csv")
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area", "Julian", "DFO_Estimate"))
View(JulianAndBiomass)
as.numeric(na.omit(JulianAndBiomass$Survey_Date[2023-05-22]))
View(JulianAndBiomass)
JulianAndBiomass <- na.omit(JulianAndBiomass) + as.numeric(na.omit(JulianAndBiomass$Survey_Date[2023-05-22]))
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area", "Julian", "DFO_Estimate"))
JulianAndBiomass <- na.omit(JulianAndBiomass)
JulianAndBiomass <- as.numeric(na.omit(JulianAndBiomass$Survey_Date[2023-05-22]))
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area", "Julian", "DFO_Estimate"))
JulianAndBiomass <- na.omit(JulianAndBiomass)
ScotsBay_Turnover <- subset(JulianAndBiomass, Survey_Area=='SB' )
View(JulianAndBiomass)
JulianAndBiomass<- subset(JulianAndBiomass, Survey_Date == '2023-05-22')
View(JulianAndBiomass)
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area", "Julian", "DFO_Estimate"))
JulianAndBiomass <- na.omit(JulianAndBiomass)
JulianAndBiomass<- subset(JulianAndBiomass, Survey_Date =/= '2023-05-22')
JulianAndBiomass<- subset(JulianAndBiomass, Survey_Date < '2023-05-22')
View(JulianAndBiomass)
JulianAndBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area", "Julian", "DFO_Estimate"))
JulianAndBiomass <- na.omit(JulianAndBiomass)
JulianAndBiomass<- subset(JulianAndBiomass, Survey_Date < '2023-05-22') #As only one DFO factor for 2023 is in the system, this is removed for accuracy.
ScotsBay_Turnover <- subset(JulianAndBiomass, Survey_Area=='SB' )
OneWayJB <- aov(DFO_Estimate ~ Julian, data = ScotsBay_Turnover)
summary(OneWayJB)
Point_Graph <- ggplot(ScotsBay_Turnover, aes(Julian, DFO_Estimate)) +geom_smooth() + geom_point()
print(Point_Graph + labs(y = "Survey Biomass (mt)", x = "Julian Day"))
View(ScotsBay_Turnover)
OneWayJB <- aov(DFO_Estimate ~ Julian, data = ScotsBay_Turnover)
summary(OneWayJB)
###Number of Vessels and Survey biomass
VesselsBiomass <- subset(Survey_Factors, select=c("No_of_Vessels", "Julian", "DFO_Estimate", "Survey_Area"))
VesselsBiomass <- na.omit(VesselsBiomass)
VesselsBiomass <- subset(VesselsBiomass, Survey_Area == "SB", Survey_Date < '2023-05-22')
VesselsBiomass$No_of_Vessels <- as.factor(VesselsBiomass$No_of_Vessels)
###Number of Vessels and Survey biomass
VesselsBiomass <- subset(Survey_Factors, select=c("Survey_Date", "No_of_Vessels", "Julian", "DFO_Estimate", "Survey_Area"))
VesselsBiomass <- na.omit(VesselsBiomass)
VesselsBiomass <- subset(VesselsBiomass, Survey_Area == "SB", Survey_Date < '2023-05-22')
VesselsBiomass$No_of_Vessels <- as.factor(VesselsBiomass$No_of_Vessels)
GraphVessels <- ggplot(VesselsBiomass, aes(No_of_Vessels, DFO_Estimate))+ geom_point() + geom_smooth()
print(GraphVessels)
BoxplotVessels <-boxplot(VesselsBiomass$DFO_Estimate~VesselsBiomass$No_of_Vessels, main = "Biomass recorded per number of Vessels in Survey", xlab="Number of Vessels in Survey", ylab="DFO Estimates")
BoxplotVessels <-boxplot(VesselsBiomass$DFO_Estimate~VesselsBiomass$No_of_Vessels, main = "Biomass recorded per number of Vessels in Survey", xlab="Number of Vessels in Survey", ylab="Survey Biomass")
View(VesselsBiomass)
OneWayVessels <- aov(DFO_Estimates ~ No_of_Vessels, data = VesselsBiomass)
OneWayVessels <- aov(DFO_Estimate ~ No_of_Vessels, data = VesselsBiomass)
summary(OneWayVessels)
###Survey Area, Julian, Survey Time, High Tide Time, DFO_Estimate
SurveyAreaTimeTideBiomass <- subset(Survey_Factors, select=c("Survey_Area","Year", "Julian", "DFO_Estimate", "Survey_Start", "High_Tide", "Tide_Difference", "Tide_Relative" ))
SurveyAreaTimeTideBiomass <- na.omit(SurveyAreaTimeTideBiomass)
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB")
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB",  Survey_Date < '2023-05-22')
###Survey Area, Julian, Survey Time, High Tide Time, DFO_Estimate
SurveyAreaTimeTideBiomass <- subset(Survey_Factors, select=c("survey_Date", "Survey_Area","Year", "Julian", "DFO_Estimate", "Survey_Start", "High_Tide", "Tide_Difference", "Tide_Relative" ))
###Survey Area, Julian, Survey Time, High Tide Time, DFO_Estimate
SurveyAreaTimeTideBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area","Year", "Julian", "DFO_Estimate", "Survey_Start", "High_Tide", "Tide_Difference", "Tide_Relative" ))
SurveyAreaTimeTideBiomass <- na.omit(SurveyAreaTimeTideBiomass)
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB",  Survey_Date < '2023-05-22')
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Difference)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point)
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point)
str(Tide_Relative_Point)
str(ScotsBay_HighTideBiomass)
as.numeric(as.character(ScotsBay_HighTideBiomass$Tide_Relative))
str(ScotsBay_HighTideBiomass)
ScotsBay_HighTideBiomass <- as.numeric(ScotsBay_HighTideBiomass$Tide_Relative)
Survey_Factors <- read_csv("surveyFactorsAll_Tracey with SSB data.csv", stringAsFactors = FALSE)
Survey_Factors <- read_csv("surveyFactorsAll_Tracey with SSB data.csv")
Survey_Factors <- read_csv("surveyFactorsAll_Tracey with SSB data.csv")
ScotsBay_HighTideBiomass %>% convert(num(ScotsBay_HighTideBiomass$Tide_Relative))
###Survey Area, Julian, Survey Time, High Tide Time, DFO_Estimate
SurveyAreaTimeTideBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area","Year", "Julian", "DFO_Estimate", "Survey_Start", "High_Tide", "Tide_Difference", "Tide_Relative" ))
SurveyAreaTimeTideBiomass <- na.omit(SurveyAreaTimeTideBiomass)
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB",  Survey_Date < '2023-05-22')
ScotsBay_HighTideBiomass <- ScotsBay_HighTideBiomass %>% convert(num(ScotsBay_HighTideBiomass$Tide_Relative))
as.numeric(character(ScotsBay_HighTideBiomass$Tide_Relative))
as.numeric(factor(ScotsBay_HighTideBiomass$Tide_Relative))
View(ScotsBay_HighTideBiomass)
ScotsBay_HighTideBiomass$Tide_Relative <- as.numeric(ScotsBay_HighTideBiomass$Tide_Relative)
str(ScotsBay_HighTideBiomass)
###Survey Area, Julian, Survey Time, High Tide Time, DFO_Estimate
SurveyAreaTimeTideBiomass <- subset(Survey_Factors, select=c("Survey_Date", "Survey_Area","Year", "Julian", "DFO_Estimate", "Survey_Start", "High_Tide", "Tide_Difference", "Tide_Relative" ))
SurveyAreaTimeTideBiomass <- na.omit(SurveyAreaTimeTideBiomass)
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB",  Survey_Date < '2023-05-22')
ScotsBay_HighTideBiomass$Tide_Relative <- as.numeric(ScotsBay_HighTideBiomass$Tide_Relative)
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point)
print(Tide_Relative_Point, labs(y = "Survey Biomass", x = "High Tide Relative to Survey Start Time, negative is before survey start", )
print(Tide_Relative_Point, labs(y = "Survey Biomass", x = "High Tide Relative to Survey Start Time, negative is before survey start" )
print(Tide_Relative_Point, labs(y = "Survey Biomass", x = "High Tide Relative to Survey Start Time, negative is before survey start" )
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point, labs(y = "Survey Biomass", x = "High Tide Relative to Survey Start Time, negative is before survey start" )
print(Tide_Relative_Point, labs(y = "Survey Biomass", x = "High Tide Relative to Survey Start Time, negative is before survey start"))
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point, labs(y = "Survey Biomass", x = "High Tide Relative to Survey Start Time, negative is before survey start"))
print(Tide_Relative_Point)
print(Tide_Relative_Point + labs(y="Survey Biomass"))
print(Tide_Relative_Point + labs(y="Survey Biomass", x = "Tide Relative to Survey Start in Hours. Negative hours indicates high tide was before the start of the survey"))
SurveyTideDifference.two.way <- aov(DFO_Estimate ~ Survey_Start*Tide_Relative, data = ScotsBay_HighTideBiomass)
SurveyTideDifference.one.way <- aov(DFO_Estimate ~ Tide_Relative, data = ScotsBay_HighTideBiomass)
summary(SurveyTideDifference.one.way)
str(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate)
)
X <- mean(ScotsBay_HighTideBiomass$DFO_Estimate)
#SurveyTideDifference.two.way <- aov(DFO_Estimate ~ Survey_Start*Tide_Relative, data = ScotsBay_HighTideBiomass)
SurveyTideDifference.one.way <- aov(DFO_Estimate ~ Tide_Relative, data = ScotsBay_HighTideBiomass)
summary(SurveyTideDifference.one.way)
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB",  Survey_Date < '2023-05-22')
ScotsBay_HighTideBiomass$Tide_Relative <- as.numeric(ScotsBay_HighTideBiomass$Tide_Relative)
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point + labs(y="Survey Biomass", x = "Tide Relative to Survey Start in Hours. Negative hours indicates high tide was before the start of the survey"))
View(ScotsBay_HighTideBiomass)
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB")
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Date < '2023-05-22')
View(ScotsBay_HighTideBiomass)
ScotsBay_HighTideBiomass$Tide_Relative <- as.numeric(ScotsBay_HighTideBiomass$Tide_Relative)
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point + labs(y="Survey Biomass", x = "Tide Relative to Survey Start in Hours. Negative hours indicates high tide was before the start of the survey"))
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point + labs(y="Survey Biomass", x = "Tide Relative to Survey Start in Hours. Negative hours indicates high tide was before the start of the survey"))
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB")
View(ScotsBay_HighTideBiomass)
ScotsBay_HighTideBiomass <- subset(ScotsBay_HighTideBiomass, Survey_Date < '2023-05-22')
ScotsBay_HighTideBiomass$Tide_Relative <- as.numeric(ScotsBay_HighTideBiomass$Tide_Relative)
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point + labs(y="Survey Biomass", x = "Tide Relative to Survey Start in Hours. Negative hours indicates high tide was before the start of the survey"))
X = mean(ScotsBay_HighTideBiomass$DFO_Estimate)
#SurveyTideDifference.two.way <- aov(DFO_Estimate ~ Survey_Start*Tide_Relative, data = ScotsBay_HighTideBiomass)
SurveyTideDifference.one.way <- aov(DFO_Estimate ~ Tide_Relative, data = ScotsBay_HighTideBiomass)
summary(SurveyTideDifference.one.way)
###Survey Area, Julian, Survey Time, High Tide Time, DFO_Estimate
SurveyAreaTimeTideBiomass <- subset(Survey_Factors, select=c("Survey_Date", "No_of_Vessels", "Survey_Area","Year", "Julian", "DFO_Estimate", "Survey_Start", "High_Tide", "Tide_Difference", "Tide_Relative" ))
SurveyAreaTimeTideBiomass <- na.omit(SurveyAreaTimeTideBiomass)
ScotsBay_HighTideBiomass <- subset(SurveyAreaTimeTideBiomass, Survey_Area=="SB")
ScotsBay_HighTideBiomass <- subset(ScotsBay_HighTideBiomass, Survey_Date < '2023-05-22')
ScotsBay_HighTideBiomass$Tide_Relative <- as.numeric(ScotsBay_HighTideBiomass$Tide_Relative)
###Scot Bay Tide Relative Point Graph
Tide_Relative_Point <- ggplot(ScotsBay_HighTideBiomass, aes(x=Tide_Relative, y=DFO_Estimate)) + geom_point(aes(group= Tide_Relative)) +geom_smooth() + geom_hline(yintercept=mean(ScotsBay_HighTideBiomass$DFO_Estimate))
print(Tide_Relative_Point + labs(y="Survey Biomass", x = "Tide Relative to Survey Start in Hours. Negative hours indicates high tide was before the start of the survey"))
#SurveyTideDifference.two.way <- aov(DFO_Estimate ~ Survey_Start*Tide_Relative, data = ScotsBay_HighTideBiomass)
SurveyTideDifference.one.way <- aov(DFO_Estimate ~ Tide_Relative, data = ScotsBay_HighTideBiomass)
summary(SurveyTideDifference.one.way)
View(ScotsBay_HighTideBiomass)
