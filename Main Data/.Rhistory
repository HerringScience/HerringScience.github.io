# Cat1 <- subset(TagReturns, category == "1")
# Cat1 <- subset(Cat1, subset = (catchAREA == "German Bank" |
#                                catchAREA == "German Bank (Area 7)" |
#                                catchAREA == "Lurcher" |
#                                  catchAREA == "NB Coastal" |
#                                  catchAREA =="Grand Manan" |
#                                  catchAREA == "Grand Manan Banks" |
#                                  catchAREA =="Long Island"|
#                                  catchAREA =="Seal Island"|
#                                  catchAREA == "Scots Bay"|
#                                  catchAREA =="Yankee Bank"|
#                                  catchAREA =="Trinity"|
#                                  catchAREA =="Brown Bank"|
#                                  catchAREA =="SW Grounds"|
#                                  catchAREA =="Gannet Dry Ledge" ))
#
# ggplot(data = Cat1, (aes(FishingGround, fill = catchAREA))) +
#         geom_histogram(binwidth=1, colour = "white", stat = "count") +
#         theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
#         labs(x = "Tagging Ground", y="Count") +
#         scale_fill_discrete(name = "Recapture area")
#TagReturnsSubset <- TagReturns[sample(1:nrow(TagReturns), 100, replace = FALSE),]
GBtoSB <- subset(TagReturns, subset = (FishingGround == "Scots Bay" & catchAREA == "German Bank" |
FishingGround == "German Bank" & catchAREA == "Scots Bay" |
FishingGround == "Scots Bay" & catchAREA == "German Bank (Area 7)" |
FishingGround == "German Bank" & catchAREA == "Scots Bay (Area 8)" ))
GBtoSB$TagLocation <- with(GBtoSB, ifelse(GBtoSB$FishingGround == "Scots Bay", "SB to GB",
ifelse(GBtoSB$FishingGround == "German Bank", "GB to SB","Other")))
GBtoSB$timeDifference <- as.numeric(GBtoSB$timeDifference)
GBSB <- subset(GBtoSB, TagLocation == "GB to SB" )
#  GBSB$timeDifference <- as.numeric(GBSB$timeDifference)
SBGB <- subset(GBtoSB, TagLocation == "SB to GB")
#  SBGB$timeDifference <- as.numeric(GBSB$timeDifference)
ggplot(GBSB, aes(x=category, y = Count, fill = factor(timeDifference))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Category") +
ggtitle("Tag Returns that started in German Bank and were retrieved in Scots Bay") +
labs(fill = "Days between tagging event and tag return")
TableGBSB <- GBSB %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
# kbl(TableGBSB, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- subset(TableGBSB, select = -c(timeDifference, Date, DATE,  No.ofSameNumberOfDays, TAG_NUMBER, No.InCategory))
SummaryTable <- SummaryTable %>%
group_by(category) %>%
mutate(amountInCategory = length(category))
SummaryTable <- unique(SummaryTable) %>%
arrange(category)
kbl(SummaryTable, col.names=c("Category", "Fishing Ground", "Catch Area", "Average Age in Days", "Minimum Age in Days", "Maximum Age in Days", "Category Abundance"), align = "c")
TableSBGB <- SBGB %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
ggplot(SBGB, aes(x=category, y = Count, fill = factor(timeDifference))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Category") +
ggtitle("Tag Returns that started in Scots Bay and were retrieved in German Bank") +
labs(fill = "Days between tagging event and tag return")
# kbl(TableSBGB, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
# SummaryTable <- subset(TableSBGB, select = -c(timeDifference, Date, DATE,  No.ofSameNumberOfDays, TAG_NUMBER, No.InCategory))
# SummaryTable <- SummaryTable %>%
#   group_by(category) %>%
#   mutate(amountInCategory = length(category))
# SummaryTable <- unique(SummaryTable) %>%
#   arrange(category)
# #German Bank Area 7 was a duplicate for everything, except for the catchAREA being German Bank Area 7 vs just German Bank. Removed.
# SummaryTable %>% filter(!row_number() %in% c(2))
#
#
# kbl(SummaryTable, col.names=c("Category", "Fishing Ground", "Catch Area", "Average Age in Days", "Minimum Age in Days", "Maximum Age in Days", "Category Abundance"), align = "c")
#TagReturnsSubset <- TagReturns[sample(1:nrow(TagReturns), 100, replace = FALSE),]
GBtoSB <- subset(TagReturns, subset = (FishingGround == "Scots Bay" & catchAREA == "German Bank" |
FishingGround == "German Bank" & catchAREA == "Scots Bay" |
FishingGround == "Scots Bay" & catchAREA == "German Bank (Area 7)" |
FishingGround == "German Bank" & catchAREA == "Scots Bay (Area 8)" ))
GBtoSB$TagLocation <- with(GBtoSB, ifelse(GBtoSB$FishingGround == "Scots Bay", "SB to GB",
ifelse(GBtoSB$FishingGround == "German Bank", "GB to SB","Other")))
GBtoSB$timeDifference <- as.numeric(GBtoSB$timeDifference)
GBSB <- subset(GBtoSB, TagLocation == "GB to SB" )
#  GBSB$timeDifference <- as.numeric(GBSB$timeDifference)
SBGB <- subset(GBtoSB, TagLocation == "SB to GB")
#  SBGB$timeDifference <- as.numeric(GBSB$timeDifference)
ggplot(GBSB, aes(x=category, y = Count, fill = factor(timeDifference))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Category") +
ggtitle("Tag Returns that started in German Bank and were retrieved in Scots Bay") +
labs(fill = "Days between tagging event and tag return")
TableGBSB <- GBSB %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
# kbl(TableGBSB, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
SummaryTable <- subset(TableGBSB, select = -c(timeDifference, Date, DATE,  No.ofSameNumberOfDays, TAG_NUMBER, No.InCategory))
SummaryTable <- SummaryTable %>%
group_by(category) %>%
mutate(amountInCategory = length(category))
SummaryTable <- unique(SummaryTable) %>%
arrange(category)
kbl(SummaryTable, col.names=c("Category", "Fishing Ground", "Catch Area", "Average Age in Days", "Minimum Age in Days", "Maximum Age in Days", "Category Abundance"), align = "c")
TableSBGB <- SBGB %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
ggplot(SBGB, aes(x=category, y = Count, fill = factor(timeDifference))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Category") +
ggtitle("Tag Returns that started in Scots Bay and were retrieved in German Bank") +
labs(fill = "Days between tagging event and tag return")
# kbl(TableSBGB, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
# SummaryTable <- subset(TableSBGB, select = -c(timeDifference, Date, DATE,  No.ofSameNumberOfDays, TAG_NUMBER, No.InCategory))
# SummaryTable <- SummaryTable %>%
#   group_by(category) %>%
#   mutate(amountInCategory = length(category))
# SummaryTable <- unique(SummaryTable) %>%
#   arrange(category)
#German Bank Area 7 was a duplicate for everything, except for the catchAREA being German Bank Area 7 vs just German Bank. Removed.
SummaryTable %>% filter(!row_number() %in% c(2))
kbl(SummaryTable, col.names=c("Category", "Fishing Ground", "Catch Area", "Average Age in Days", "Minimum Age in Days", "Maximum Age in Days", "Category Abundance"), align = "c")
# Missing GB to SB now, not sure why. When removing category 1 items for GB to SB show up. Possibly it's because there is more category difference when going from GB to SB, so it ends up not showing?
TagReturns$TagLocation <- with(TagReturns, ifelse(TagReturns$FishingGround == "Scots Bay" & TagReturns$catchAREA == "German Bank" |
TagReturns$FishingGround == "Scots Bay" & TagReturns$catchAREA == "German Bank (Area 7)"  , "SB to GB",
ifelse(TagReturns$FishingGround == "German Bank" & TagReturns$catchAREA == "Scots Bay" |
TagReturns$FishingGround == "German Bank" & TagReturns$catchAREA == "Scots Bay (Area 8)", "GB to SB",
ifelse(TagReturns$FishingGround == "German Bank" & TagReturns$catchAREA == "German Bank", "GB to GB",
ifelse(TagReturns$FishingGround == "Scots Bay" & TagReturns$catchAREA == "Scots Bay", "SB to SB",
ifelse(TagReturns$FishingGround == "Scots Bay" & TagReturns$catchAREA != "Scots Bay" |
TagReturns$FishingGround == "Scots Bay" & TagReturns$catchAREA != "German Bank", "SB to Other",
ifelse(TagReturns$FishingGround == "German Bank" & TagReturns$catchAREA != "Scots Bay" |
TagReturns$FishingGround == "German Bank" & TagReturns$catchAREA != "German Bank", "GB to Other", "Other")))))))
TagReturns1 <- subset(TagReturns, TagLocation != "Other")
TagReturns1 <- subset(TagReturns1, TagLocation != "SB to Other")
TagReturns1 <- subset(TagReturns1, TagLocation != "GB to Other")
ggplot(data = TagReturns1, (aes(TagLocation, fill = category))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count")+
scale_y_continuous(breaks= pretty_breaks())
Table <- TagReturns1 %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
SummaryTable <- subset(TableGBSB, select = -c(timeDifference, Date, DATE,  No.ofSameNumberOfDays, TAG_NUMBER, No.InCategory))
SummaryTable <- SummaryTable %>%
group_by(category) %>%
mutate(amountInCategory = length(category))
SummaryTable <- unique(SummaryTable) %>%
arrange(category)
kbl(SummaryTable, col.names=c("Category", "Fishing Ground", "Catch Area", "Average Age in Days", "Minimum Age in Days", "Maximum Age in Days", "Category Abundance"), align = "c")
# SummaryTable <- subset(Table, select = c(category, FishingGround, catchAREA, AvgtimeDifference, timeDifferenceMin, timeDifferenceMax))
# SummaryTable <- SummaryTable %>%
#   group_by(FishingGround, catchAREA, category) %>%
#   mutate(amountInCategory = length(category))
#  SummaryTable <- unique(SummaryTable) %>%
#    arrange(category)
#
# kbl(SummaryTable, col.names=c("Category", "Fishing Area", "Catch Area", "Average Time Difference (days)", "Minimum Time Difference (Days)", "Maximum Time Difference (Days)", "Category Abundance"), align = "c")
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
View(SummaryTable)
TagReturnsGBSI <- subset(TagReturns, subset = (FishingGround == "German Bank" | FishingGround == "Seal Island"))
TagReturnsGBSI <- subset(TagReturnsGBSI, subset = (catchAREA == "German Bank") | catchAREA == "Seal Island" | catchAREA == "German Bank (Area 7)")
TagReturnsGBSI$TagLocation <- with(TagReturnsGBSI, ifelse(TagReturnsGBSI$FishingGround == "German Bank" & TagReturnsGBSI$catchAREA == "German Bank" |
TagReturnsGBSI$FishingGround == "German Bank" & TagReturnsGBSI$catchAREA == "German Bank (Area 7)", "GB to GB",
ifelse(TagReturnsGBSI$FishingGround == "German Bank" & TagReturnsGBSI$catchAREA == "Seal Island", "GB to SI",
ifelse(TagReturnsGBSI$FishingGround == "Seal Island" & TagReturnsGBSI$catchAREA == "Seal Island", "SI to SI",
ifelse(TagReturnsGBSI$FishingGround == "Seal Island" & TagReturnsGBSI$catchAREA == "German Bank" |
TagReturnsGBSI$FishingGround == "Seal Island" & TagReturnsGBSI$catchAREA == "German Bank (Area 7)", "SI to GB", "Other")))))
TagReturnsGBSI <- subset(TagReturnsGBSI, subset = (TagLocation == "GB to SI" | TagLocation == "SI to GB"))
ggplot(data = TagReturnsGBSI, (aes(TagLocation, fill = category))) +
geom_histogram(binwidth=1, colour = "white", stat = "count") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Category", y="Count") +
scale_y_continuous(breaks= pretty_breaks())
Table <- TagReturnsGBSI %>%
group_by(timeDifference) %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays) %>%
arrange(timeDifference)
SummaryTable <- subset(TagReturnsGBSI, select = c(category, FishingGround, catchAREA, AvgtimeDifference, timeDifferenceMin, timeDifferenceMax))
SummaryTable <- SummaryTable %>%
group_by(FishingGround, catchAREA, category) %>%
mutate(amountInCategory = length(category))
SummaryTable <- unique(SummaryTable) %>%
arrange(category)
kbl(SummaryTable, col.names=c("Category", "Fishing Area", "Catch Area", "Average Time Difference (days)", "Minimum Time Difference (Days)", "Maximum Time Difference (Days)", "Category Abundance"), align = "c")
# kbl(Table, col.names=c("Tag Number", "Category", "Tagged Date", "Tagged Ground", "Catch Date", "Catch Area", "Time Difference (days)", "Average Time Difference (days)", "Minimum Time Difference", "Maximum Time Difference", "Amount in the Same Category", "Amount with the same number of Days"), align = "c") %>%
#   kable_paper("striped", full_width = F)
View(GearTable)
GearTable <- TagReturns %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
GearType,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
GearTable$Count = 1
GearTable<-subset(GearTable, subset = (GearType != "N/A"))
GearTable$GearType [which(GearTable$GearType == "SEINER" | "Seiner")] <- "Purse Seine"
GearTable$GearType [which(GearTable$GearType == "SEINER")] <- "Purse Seine"
GearTable$GearType [which(GearTable$GearType == "Seiner")] <- "Purse Seine"
GearTable <- TagReturns %>%
dplyr::select(TAG_NUMBER,
category,
Date,
FishingGround,
DATE,
catchAREA,
GearType,
timeDifference,
AvgtimeDifference,
timeDifferenceMin,
timeDifferenceMax,
No.InCategory,
No.ofSameNumberOfDays)%>%
arrange(timeDifference)
GearTable$Count = 1
GearTable<-subset(GearTable, subset = (GearType != "N/A"))
GearTable$GearType [which(GearTable$GearType == "SEINER")] <- "Purse Seine"
GearTable$GearType [which(GearTable$GearType == "Seiner")] <- "Purse Seine"
ggplot(GearTable, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return") +
labs(fill = "Category")
GearWithout1 <- subset(GearTable, subset = (category != 1))
ggplot(GearWithout1, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return") +
labs(fill = "Category")
SummaryTable <- GearWithout1 %>%
group_by(GearType, category) %>%
count()
kbl(SummaryTable, col.names = c("Gear Type", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
WeirTable <- subset(GearTable, subset = (GearType != "Purse Seine"))
WeirTable <- subset(WeirTable, subset = (GearType != "Mid Water Trawl"))
ggplot(WeirTable, aes(x=GearType, y = Count, fill = factor(category))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return to Gear Type") +
labs(fill = "Category")
ggplot(WeirTable, aes(x=GearType, y = Count, fill = factor(FishingGround))) +
geom_bar(stat="identity") +
labs(y = "Number of Events", x = "Gear Type") +
ggtitle("Tag Return to gear type from specific tagging ground") +
labs(fill = "Tagging Ground")
SummaryTable <-WeirTable %>%
group_by(GearType, category) %>%
count()
kbl(SummaryTable, col.names = c("Gear Type", "Category", "Abundance in Category"), align = "c") %>%
kable_paper("striped", full_width = F)
year= substr(Sys.Date(),1,4)
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.align='center')
#Import all packages, CTD data, and land data
local({r <- getOption("repos")
r["CRAN"] <- "https://cran.r-project.org"
options(repos=r)
})
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(pander)
library(geodata)
library(pacman)
library(rnaturalearth)
library(rnaturalearthdata)
library(raster)
library(devtools)
library(maps)
library(dplyr)
devtools::install_github("ropensci/rnaturalearthhires")
install.packages('GADMTools')
install.packages("Rtools44")
state_prov <- rnaturalearth::ne_states(c("united states of america", "canada"))
#Survey Data
surveyData <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/Survey Data.csv")
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#LRP Data
LRP2 = read_csv("LRP Data.csv")
LRP2 = LRP2 %>% rename(ThreeYear = "3yr Avg")
#Fat Data
FatData = read_csv("Total Fat Data.csv")
#Larval Data
#All Adjusted Ages and Dates are originally added in Larval QC script.
#All preservative length adjustments added in in Larval QC script.
#Changed code within compendium from Lengthmm to LengthAdjustment
Larval = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Full Larval Jan 2025.csv"))
LarvalSum = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/LarvalSum Jan 2025.csv"))
LarvalSum$Year <- as.factor(LarvalSum$Year)
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$MonthDay <- format(Larval$Date, "%m-%d")
#Fix this
#Larval$AdjustedJulianSpawnDate <- as.numeric(Larval$AdjustedJulianSpawnDate) #AdjustedJulianSpawnDate is the median of the min and the max spawn date provided.
#Changed to X and Y to fit in better with compendium code. These are the tow start and finish coordinates.
names(Larval)[names(Larval) =="Lon1"] <- "X"
names(Larval)[names(Larval) =="Lat1"] <- "Y"
names(Larval)[names(Larval) =="Lon2"] <- "Xend"
names(Larval)[names(Larval) =="Lat2"] <- "Yend"
#Seal Island Larval
LarvalSI = filter(Larval, Ground == "SI")
LarvalSI = merge(LarvalSI, LarvalSum[,c("id", "TowReplicate", "TowID")], by = "id")
Larval = merge(Larval, LarvalSum[,c("id", "TowReplicate", "TowID")], by = "id")
#options(geodata_default_path = "c:/you/geodata/path")
#Land Data
#can<-getData('GADM', country="CAN", level=1) #getData is discontinued
can<-gadm(country='CAN', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("New Brunswick", "Nova Scotia", "Prince Edward Island", "Newfoundland and Labrador", "Québec"))
#us = getData('GADM', country = "USA", level = 1) # getData is discontinued
us<-gadm(country='USA', level=1, path = "geodata_default_path",version="latest", resolution = 1, regions = c("Maine"))
can1 = rbind(can,us)
NBNS = can1
#NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Québec", "Maine"),]
NBNS <- as(NBNS, "Spatial") #This causes it to run very slowly - takes about 20 minutes to process.
#For Tag Returns
completeReturns <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/complete.returns.csv"))
TaggingEvents <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/TaggingEvents.csv"))
# TaggingEvents <- TaggingEvents %>%
#      rename(Tag_Num = TAG_NUMBER)
names(TaggingEvents)[names(TaggingEvents) == 'Tag_Num'] <- 'TAG_NUMBER'
rawReturn <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/rawReturn.csv"))
relINFO <- read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Tag Returns/relINFO.csv"))
polysNAFO <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/NAFO_subunits.csv"))
polysT <- read_csv(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Main Data/timGrounds.csv"))
#Combining complete Returns and Tagging events by tag number
TagReturns <- merge(TaggingEvents, completeReturns, by = "TAG_NUMBER")
# Assigning of Grounds
area1=polysT[which(polysT$Box == "NB Coastal"), ]
area2=polysT[which(polysT$Box == "Grand Manan"), ]
area3=polysT[which(polysT$Box == "Grand Manan Banks"), ]
area4=polysT[which(polysT$Box == "Long Island"), ]
area5=polysT[which(polysT$Box == "German Bank"), ]
area6=polysT[which(polysT$Box == "Seal Island"), ]
area7=polysT[which(polysT$Box == "Scots Bay"), ]
area8=polysT[which(polysT$Box == "Yankee Bank"), ]
area9=polysT[which(polysT$Box == "Trinity"), ]
area10=polysT[which(polysT$Box == "Browns Bank"), ]
area11=polysT[which(polysT$Box == "SW Grounds"), ]
area12=polysT[which(polysT$Box == "Gannet Dry Ledge"), ]
area13=polysT[which(polysT$Box == "Lurcher"), ]
ids = (TaggingEvents$TAG_NUMBER)
r = data.frame( TAG_NUMBER=ids,
X = NA,
Y = NA,
NB_Coastal = NA,
Grand_Manan = NA,
Grand_Manan_Banks = NA,
Long_Island = NA,
German_Bank = NA,
Seal_Island = NA,
Scots_Bay = NA,
Yankee_Bank = NA,
Trinity = NA,
Browns_Bank = NA,
SW_Grounds = NA,
Gannet_Dry_Ledge = NA,
Lurcher = NA)
#This part takes a really long time to run.
# Assigning fishing grounds to sets. This takes  a few minutes to run through.
for (i in 1:nrow(r)){
test = which(TaggingEvents$TAG_NUMBER==r[i, "TAG_NUMBER"])
test1 = TaggingEvents[test, ]
r$Y[i] = test1$Lat
r$X[i] = test1$Lon
r$NB_Coastal[i] = point.in.polygon(r$Y[i], r$X[i], area1$Y, area1$X, mode.checked=FALSE)
r$Grand_Manan[i] = point.in.polygon(r$Y[i], r$X[i], area2$Y, area2$X, mode.checked=FALSE)
r$Grand_Manan_Banks[i] = point.in.polygon(r$Y[i], r$X[i], area3$Y, area3$X, mode.checked=FALSE)
r$Long_Island[i] = point.in.polygon(r$Y[i], r$X[i], area4$Y, area4$X, mode.checked=FALSE)
r$German_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area5$Y, area5$X, mode.checked=FALSE)
r$Seal_Island[i] = point.in.polygon(r$Y[i], r$X[i], area6$Y, area6$X, mode.checked=FALSE)
r$Scots_Bay[i] = point.in.polygon(r$Y[i], r$X[i], area7$Y, area7$X, mode.checked=FALSE)
r$Yankee_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area8$Y, area8$X, mode.checked=FALSE)
r$Trinity[i] = point.in.polygon(r$Y[i], r$X[i], area9$Y, area9$X, mode.checked=FALSE)
r$Browns_Bank[i] = point.in.polygon(r$Y[i], r$X[i], area10$Y, area10$X, mode.checked=FALSE)
r$SW_Grounds[i] = point.in.polygon(r$Y[i], r$X[i], area11$Y, area11$X, mode.checked=FALSE)
r$Gannet_Dry_Ledge[i] = point.in.polygon(r$Y[i], r$X[i], area12$Y, area12$X, mode.checked=FALSE)
r$Lurcher[i] = point.in.polygon(r$Y[i], r$X[i], area13$Y, area13$X, mode.checked=FALSE)
}
