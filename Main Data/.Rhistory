xlab("Julian Day") +
scale_y_continuous(limits = c(0, max(Larval1$LengthAdjustment))) +
scale_x_continuous(breaks = seq(from = 150, to = 270, by = 20)) +
ggtitle(paste(i, "Scots Bay")))
cat("\n")
print(ggplot(data = Larval1, (aes(LengthAdjustment, fill = id))) +
geom_histogram(binwidth=0.5, colour = "white") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Length (mm)", y="Count"))
cat("\n")
Table = Larval1 %>%
group_by(Survey.No) %>%
summarize(AvgLength = mean(LengthAdjustment),
AvgSD = mean(SD),
Abundance = n()) %>%
mutate_if(is.numeric, format, digits=2)
print(kbl(Table, col.names=c("Survey #", "Mean Length (mm)", "+/- SD (mm)", "Abundance"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
mutate(Length = ifelse(category==1, "<8",
ifelse(category==2, "8-12",
ifelse(category==3, "13-17",
ifelse(category==4, "18-27",
ifelse(category==5, ">28", NA)))))) %>%
relocate(Length, .after = category) %>%
mutate(Age = ifelse(category==1, "<2 weeks",
ifelse(category==2, "2-5 weeks",
ifelse(category==3, "5-8 weeks",
ifelse(category==4, "8-14 weeks",
ifelse(category==5, ">14 weeks", NA)))))) %>%
relocate(Age, .after = Length)
print(kbl(TotalCategories, col.names=c("Category", "Length (mm)", "Age", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-66.5, -64.5, 44.5, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
Larval2 <- subset(Larval, Ground == 'SB')
#Larval2 <- subset(Larval2, X > -66)
ggplot(Larval2, aes(x=X, y=Y)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(data=Larval2, aes(fill = Year), pch=21, alpha = 0.6) +
labs(x=NULL, y=NULL) +
coord_map()
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i) %>% filter(Ground == "SB")
Larval1 <- subset(Larval1, X > -66)
print(ggplot(Larval1, aes(x=X, y=Y)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(data=Larval1, aes(fill = category), pch=21, alpha = 0.6) +
labs(x=NULL, y=NULL) +
coord_map())
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1)
print(kbl(TotalCategories, col.names=c("Category", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
Larval1 = Larval %>% filter(Ground == "SB")
Larval1 %>%
ggplot(aes(AvgTowDepth, LengthAdjustment, colour = Year)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
scale_y_reverse() +
labs(x = "Average Tow Depth (m)", y = "Larval Length (mm)", colour = "Category")
TotalCategories <- Larval1 %>%
group_by(category) %>%
summarize(n = n(),
MeanDepth = mean(AvgTowDepth, na.rm = TRUE)) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
relocate(MeanDepth, .after= Percentage)
kbl(TotalCategories, col.names=c("Category", "Abundance", "%", "Avg Tow Depth (m)"), align = "c") %>%
kable_paper("striped", full_width = F)
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = Larval %>% filter(Year == i)
Larval1 = Larval1 %>% filter(Ground == "SB")
print(ggplot(data=Larval1, (aes(AvgTowDepth, LengthAdjustment, colour = id))) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
scale_y_reverse() +
labs(x = "Average Tow Depth (m)", y = "Larval Length (mm)", colour = "id"))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
summarize(n = n(),
MeanDepth = mean(AvgTowDepth, na.rm = TRUE)) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
relocate(MeanDepth, .after= Percentage)
print(kbl(TotalCategories, col.names=c("Category", "Abundance", "%", "Avg Tow Depth (m)"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
# The following survey's did not use a flowmeter, therefore does not have water volume or larval density. This is only applicable to surveys that larvae were caught.
# Scots Bay 2017 Survey 1, 2, 6 & 7
# Scots Bay 2019 Survey 8
# Scots Bay 2020 Survey 7
# Scots Bay 2021 Survey 9 & 10
# German Bank 2021 Survey 4 & 5
# Seal Island 2019 Survey unknown, no record in raw data of this survey.
# Overall summary can be found in Volume and Density Investigation - NAs in Full Larval Spreadsheet. Saved under science team, larval project.
Larval1 = LarvalSum %>% filter(Ground == "SB")
print(ggplot(Larval1, aes(x = Survey.No, y = Density, colour = Year)) +
geom_point() +
ylab("Density (Abundance/Volume)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Larval Density "))
print(ggplot(Larval1, aes(x = Survey.No, y = Abundance, colour = Year)) +
geom_point() +
ylab("Abundance (Count/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Larval Abundance"))
print(ggplot(Larval1, aes(x = Survey.No, y = MeanAgeInDays, colour = Year)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$MeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Mean Larval Age of Each Individual Tow"))
View(Larval1)
rm(list = ls())
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
larv = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/Larval Measurements.csv"))
arc = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/ARC Data.csv"))
arc = arc %>% dplyr::select(id, Larvae_Count, Notes)
survey = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Survey Data.csv"))
survey = survey %>% mutate(Ground = substr(id,1,2))
LarvalSum = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/LarvalSum Jan 2025.csv"))
larv = left_join(larv, arc, by="id")
larv = left_join(larv, survey)
larv = larv %>% dplyr::select(Ground, id, Date, Survey.No, No_jars, Lengthmm, Condition, Yolk_sac, Preservative, ARC_Count=Larvae_Count, ARC_Notes=Notes, Lon1, Lat1, Lon2, Lat2, TowTime, AvgTowDepth, MaxTowDepth, CTDAvgTemp=AvgTemp, Volume, Month, Year, Day)
larv$Date = dmy(larv$Date)
larv$Survey.No = as.factor(larv$Survey.No)
larv$Year = as.factor(larv$Year)
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation. They did suggest that this adjustment would be less accurate the longer the tow period.
# These equations are when the maximum shrinkage has occurred.
larv$LengthAdjustment = with(larv, ifelse(larv$Preservative == "4% formalin", (0.984 + 0.993* larv$Lengthmm),
ifelse(larv$Preservative == "70% alcohol", (0.532 + 0.989*larv$Lengthmm),NA)))
#General Category
larv$category =  with(larv, ifelse(larv$Lengthmm < 8 , 1,
ifelse(larv$Lengthmm < 12 & larv$Lengthmm >= 8, 2,
ifelse(larv$Lengthmm >= 12  & larv$Lengthmm < 17, 3,
ifelse(larv$Lengthmm > 17 & larv$Lengthmm < 27, 4, 5)))))
#'Exact' spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper.
# Paper says applies estimate growth rates to calculate the number of days back to 5mm. Took 5mm off total length to account for this.
# Assumes hatching length is 5mm, day of hatching = day 0
# Adjusted Spawn Date to account for incubation period. Using 10 days for GB and SI, and 14 days for SB, as per paper "Fisheries Oceanography - 2022 - Burbank - Understanding factors influencing Atlantic herring Clupea harengus recruitment .pdf" and "Messieh, 1987. Some characteristics of atlantic herring spawning in the southern gulf of st lawrence.pdf".
larv <- larv %>%
mutate(AgeInDays = ((LengthAdjustment - 5)/0.24))
larv$hatchDate = larv$Date - larv$AgeInDays
larv = larv %>%
group_by(Survey.No, Year, Date) %>%
mutate(MeanAgeInDays = mean(AgeInDays))
#This was Darren's old code
#larv$hatchDate = larv$Date - 10
# Adjusted Spawn Date to account for incubation period. Using 10 days for GB and SI, and 14 days for SB, as per paper
#"Fisheries Oceanography - 2022 - Burbank - Understanding factors influencing Atlantic herring Clupea harengus recruitment .pdf"
#and "Messieh, 1987. Some characteristics of atlantic herring spawning in the southern gulf of st lawrence.pdf".
larv$SpawnDate = with(larv, ifelse(larv$Ground == "SB", (larv$hatchDate - 14),
ifelse(larv$Ground == "GB", (larv$hatchDate - 10),
ifelse(larv$Ground == "SI", (larv$hatchDate -10), NA))))
larv$SpawnDate = as.Date(larv$SpawnDate)
#Calculating minimum and maximum spawn dates (Darren code) Unsure where these numbers have come from, so removed from table
# larv=larv %>% mutate(MAXspawnDate = ifelse(category == 1, hatchDate-14,
#                                            ifelse(category == 2, hatchDate-35,
#                                                   ifelse(category == 3, hatchDate-56,
#                                                          ifelse(category == 4, hatchDate-98,
#                                                                 ifelse(category == 5, hatchDate-99, "NA"))))))
# larv$MAXspawnDate=as.numeric(larv$MAXspawnDate)
# larv$MAXspawnDate=as.Date(larv$MAXspawnDate, origin = "1970-01-01")
#
# larv=larv %>% mutate(MINspawnDate = ifelse(category == 1, hatchDate,
#                                            ifelse(category == 2, hatchDate-14,
#                                                   ifelse(category == 3, hatchDate-35,
#                                                          ifelse(category == 4, hatchDate-56,
#                                                                 ifelse(category == 5, hatchDate-98, "NA"))))))
# larv$MINspawnDate=as.numeric(larv$MINspawnDate)
# larv$MINspawnDate=as.Date(larv$MINspawnDate, origin = "1970-01-01")
larv$category = as.factor(larv$category)
larv$hatchDate = ymd(larv$hatchDate)
#add Julian - This is the date they were caught
larv<-larv %>% mutate(Julian = yday(Date))
#Calculating SE/mean/min/max of larval measurements
#First is Darren's code, using lengthmm.
# larv <- larv %>%
#   group_by(Survey.No, Year, Date) %>%
#   mutate(SD = sd(Lengthmm), MinLength = min(Lengthmm), MaxLength = max(Lengthmm), MeanLength = mean(Lengthmm), Abundance = length(Lengthmm)) %>%
#   ungroup()
larv <- larv %>%
group_by(Survey.No, Year, Date) %>%
mutate(SD = sd(LengthAdjustment), MinLength = min(LengthAdjustment), MaxLength = max(LengthAdjustment), MeanLength = mean(LengthAdjustment), Abundance = length(LengthAdjustment)) %>%
ungroup()
larvsummary <- larv %>% group_by(Ground, Survey.No, Year) %>%
summarize(MinLength = mean(MinLength, na.rm = TRUE),
MaxLength = mean(MaxLength, na.rm = TRUE),
MeanLength = mean(MeanLength, na.rm = TRUE),
SD = mean(SD, na.rm = TRUE),
Abundance = length(Lengthmm)) %>%
mutate(SE = SD/sqrt(Abundance))
surveysummary = survey %>% dplyr::select(Ground, Survey.No, Year) %>% group_by(Ground, Survey.No, Year) %>% summarize(Survey.No = mean(Survey.No), Year = mean(Year))
surveysummary$Year = as.factor(surveysummary$Year)
surveysummary$Survey.No = as.factor(surveysummary$Survey.No)
larvsummary = left_join(surveysummary, larvsummary)
larvsummary %>% write.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/Larval Summary Table.csv"))
larv = larv %>%
mutate(Larv_per_jar = Abundance/No_jars) %>%
mutate(Volume = ifelse(Volume < 0.01, NA, Volume)) %>%
mutate(Density = Larv_per_jar/Volume)
larv = larv %>%
dplyr::select(Ground,
id,
Date,
Survey.No,
No_jars,
Abundance,
Lengthmm,
LengthAdjustment,
category,
MinLength,
MaxLength,
MeanLength,
SD,
Abundance,
Larv_per_jar,
Density,
AgeInDays,
MeanAgeInDays,
hatchDate,
SpawnDate,
#MINspawnDate,
#MAXspawnDate,
Julian,
Day,
Month,
Year,
Condition,
Yolk_sac,
Preservative,
ARC_Count,
ARC_Notes,
Lon1,
Lat1,
Lon2,
Lat2,
TowTime,
AvgTowDepth,
MaxTowDepth,
CTDAvgTemp,
Volume)
#larv %>% write.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Full Larval.csv"))
larv %>% write.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Full Larval Jan 2025.csv"))
Larval$Year <- as.factor(Larval$Year)
LarvalSum <- LarvalSum %>% select("Ground",
"Date",
"Year",
"id",
"TowReplicate",
"TowID",
"Survey.No",
"Abundance",
"Density",
"Volume",
"Preservative",
"LengthAdjustment",
"MeanAgeInDays",
#"AdjustedMinDateOfSpawn",
#"AdjustedMaxDateOfSpawn",
"Lat1",
"Lon1",
"Lat2",
"Lon2",
"TowTime",
"AvgTowDepth")
LarvalSum <- unique(LarvalSum)
View(LarvalSum)
LarvalSum %>% write.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/LarvalSum Jan 2025.csv"))
LarvalSum = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/LarvalSum Jan 2025.csv"))
LarvalSum = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/LarvalSum Jan 2025.csv"))
LarvalSum$Year <- as.factor(LarvalSum$Year)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Larval1 <- subset.data.frame(Larval, Ground == "SB")
Larval = read_csv("Full Larval Jan 2025.csv")
Larval = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Full Larval Jan 2025.csv")
Larval = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Full Larval Jan 2025.csv"))
Larval = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Full Larval Jan 2025.csv"))
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Larval1 <- subset.data.frame(Larval, Ground == "SB")
Larval1 %>% ggplot(aes(y=LengthAdjustment, x=Julian, colour = Year)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(y="Length (mm)", x="Julian Date")
ggplot(Larval1, aes(Year, LengthAdjustment, colour = Year)) +
geom_boxplot() +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(y="Length (mm)")
Table = Larval1 %>%
group_by(Year) %>%
summarize(MinLength = min(LengthAdjustment),
MaxLength = max(LengthAdjustment),
AvgLength = mean(LengthAdjustment),
AvgSD = mean(SD),
Abundance = n()) %>%
mutate_if(is.numeric, format, digits=2)
kbl(Table, col.names=c("Year", "Min Length (mm)", "Max Length (mm)", "Mean Length (mm)", "+/- SD (mm)", "Abundance"), align = "c") %>%
kable_paper("striped", full_width = F)
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
mutate(Length = ifelse(category==1, "<8",
ifelse(category==2, "8-12",
ifelse(category==3, "13-17",
ifelse(category==4, "18-27",
ifelse(category==5, ">28", NA)))))) %>%
relocate(Length, .after = category) %>%
mutate(Age = ifelse(category==1, "<2 weeks",
ifelse(category==2, "2-5 weeks",
ifelse(category==3, "5-8 weeks",
ifelse(category==4, "8-14 weeks",
ifelse(category==5, ">14 weeks", NA)))))) %>%
relocate(Age, .after = Length)
kbl(TotalCategories, col.names=c("Category", "Length (mm)", "Age", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F)
for(i in unique(Larval$Year)) {
# In histogram, count is the number of individuals that fall into that length category over the whole year. It is split by colour into each individual survey. Each length category is therefore split up by number of individuals per survey.
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 <- subset.data.frame(Larval, Ground == "SB")
Larval1 = Larval1 %>% filter(Year == i)
Larval1 %>% ggplot(aes(y=LengthAdjustment, x=Julian, colour = id)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
labs(y="Length (mm)", x="Julian Day")
print(ggplot(data = subset(Larval1, Year == i), aes(x = Julian, y = LengthAdjustment, colour = id)) +
geom_jitter(size = 1.25, width = 3) +
geom_hline(yintercept = 8, linetype = "longdash", size =1, colour = "red")  +
geom_hline(yintercept = 12, linetype = "longdash", size =1, colour = "blue")  +
geom_hline(yintercept = 17, linetype = "longdash", size =1, colour = "forestgreen") +
geom_hline(yintercept = 27, linetype = "longdash", size =1, colour = "grey70") +
ylab("Length (mm)") +
xlab("Julian Day") +
scale_y_continuous(limits = c(0, max(Larval1$LengthAdjustment))) +
scale_x_continuous(breaks = seq(from = 150, to = 270, by = 20)) +
ggtitle(paste(i, "Scots Bay")))
cat("\n")
print(ggplot(data = Larval1, (aes(LengthAdjustment, fill = id))) +
geom_histogram(binwidth=0.5, colour = "white") +
theme(panel.background = element_rect(fill = "white", colour = "grey50")) +
labs(x = "Length (mm)", y="Count"))
cat("\n")
Table = Larval1 %>%
group_by(Survey.No) %>%
summarize(AvgLength = mean(LengthAdjustment),
AvgSD = mean(SD),
Abundance = n()) %>%
mutate_if(is.numeric, format, digits=2)
print(kbl(Table, col.names=c("Survey #", "Mean Length (mm)", "+/- SD (mm)", "Abundance"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
TotalCategories <- Larval1 %>%
group_by(category) %>%
dplyr::summarize(n = n()) %>%
mutate(Percentage = (n/sum(n))*100) %>%
mutate_if(is.numeric, format, digits = 1) %>%
mutate(Length = ifelse(category==1, "<8",
ifelse(category==2, "8-12",
ifelse(category==3, "13-17",
ifelse(category==4, "18-27",
ifelse(category==5, ">28", NA)))))) %>%
relocate(Length, .after = category) %>%
mutate(Age = ifelse(category==1, "<2 weeks",
ifelse(category==2, "2-5 weeks",
ifelse(category==3, "5-8 weeks",
ifelse(category==4, "8-14 weeks",
ifelse(category==5, ">14 weeks", NA)))))) %>%
relocate(Age, .after = Length)
print(kbl(TotalCategories, col.names=c("Category", "Length (mm)", "Age", "Abundance", "%"), align = "c") %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-66.5, -64.5, 44.5, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
