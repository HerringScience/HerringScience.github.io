scale_y_continuous(limits = c(0, max(Larval1$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste0(i, "Larval Density ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = Abundance, colour = MonthDay)) +
geom_point() +
ylab("Abundance (Larvae/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste0(i,  "Larval Abundance ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = MeanAgeInDays, colour = MonthDay)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
xlim(0, 10) +
scale_y_continuous(limits = c(0, max(Larval1$MeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste0(i, " Mean Larval Age of Each Individual Tow")))
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = LarvalSum %>% filter(Ground == "SB")
Larval1 = Larval1 %>% filter(Year == i)
Larval1$MonthDay <- format(Larval1$Date, "%m-%d")
print(ggplot(data = subset(Larval1, Year == i), aes(x = as.numeric(Survey.No), y = Density, colour = MonthDay)) +
geom_point() +
ylab("Density (Abundance/Volume)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Density ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = Abundance, colour = MonthDay)) +
geom_point() +
ylab("Abundance (Larvae/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i,  "Larval Abundance ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = MeanAgeInDays, colour = MonthDay)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
xlim(0, 10) +
scale_y_continuous(limits = c(0, max(Larval1$MeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, " Mean Larval Age of Each Individual Tow")))
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = LarvalSum %>% filter(Ground == "SB")
Larval1 = Larval1 %>% filter(Year == i)
Larval1$MonthDay <- format(Larval1$Date, "%m-%d")
print(ggplot(data = subset(Larval1, Year == i), aes(x = as.numeric(Survey.No), y = Density, colour = MonthDay)) +
geom_point() +
ylab("Density (Abundance/Volume)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Density ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = Abundance, colour = MonthDay)) +
geom_point() +
ylab("Abundance (Larvae/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Abundance ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = MeanAgeInDays, colour = MonthDay)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
xlim(0, 10) +
scale_y_continuous(limits = c(0, max(Larval1$MeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, " Mean Larval Age of Each Individual Tow")))
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
Larval1 = LarvalSum %>% filter(Ground == "GB")
Larval1 = Larval1 %>% filter(Year == i)
#Larval1$Density[is.na(Larval1$Density)] <- 0
#Larval1$Abundance[is.na(Larval1$Abundance)] <- 0
#Larval1$MeanAgeInDays[is.na(Larval1$MeanAgeInDays)] <- 0
Larval1$MonthDay <- format(Larval1$Date, "%m-%d")
print(ggplot(data = subset(Larval1, Year == i), aes(x = as.numeric(Survey.No), y = Density, colour = MonthDay)) +
geom_point() +
ylab("Density (Abundance/Volume)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Density ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = Abundance, colour = MonthDay)) +
geom_point() +
ylab("Abundance (Larvae/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(Larval1$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Abundance ")))
cat("\n")
print(ggplot(Larval1, aes(x = as.numeric(Survey.No), y = MeanAgeInDays, colour = MonthDay)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
xlim(0, 10) +
scale_y_continuous(limits = c(0, max(Larval1$MeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Mean Larval Age in Days")))
cat("\n")
}
for(i in unique(Larval$Year)) {
cat("\n")
cat("#####", i, "\n")
cat("\n")
LarvalSum = LarvalSum %>% filter(Year == i)
#LarvalSum$Density[is.na(LarvalSum$Density)] <- 0
#LarvalSum$Abundance[is.na(LarvalSum$Abundance)] <- 0
#LarvalSum$MeanAgeInDays[is.na(LarvalSum$MeanAgeInDays)] <- 0
LarvalSum$MonthDay <- format(LarvalSum$Date, "%m-%d")
print(ggplot(data = subset(LarvalSum, Year == i), aes(x = as.numeric(Survey.No), y = Density, colour = MonthDay)) +
geom_point() +
ylab("Density (Abundance/Volume)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(LarvalSum$Density))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Density ")))
cat("\n")
print(ggplot(LarvalSum, aes(x = as.numeric(Survey.No), y = Abundance, colour = MonthDay)) +
geom_point() +
ylab("Abundance (Larvae/Tow)") +
xlab("Survey Number") +
scale_y_continuous(limits = c(0, max(LarvalSum$Abundance))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Larval Abundance ")))
cat("\n")
print(ggplot(LarvalSum, aes(x = as.numeric(Survey.No), y = MeanAgeInDays, colour = MonthDay)) +
geom_point() +
ylab("Mean Age (days)") +
xlab("Survey Number") +
xlim(0, 10) +
scale_y_continuous(limits = c(0, max(LarvalSum$MeanAgeInDays))) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle(paste(i, "Mean Larval Age of Each Individual Tow")))
cat("\n")
}
rm(list = ls())
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
LarvalA <- select(Larval, id, Date, Survey.No, Abundance, Density, Volume, TowTime, AvgTowDepth)
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
LarvalB <- merge(MeanAgeInDays, MinDateOfSpawn)
LarvalC <- merge(LarvalB, MaxDateOfSpawn)
LarvalC <- merge(LarvalA, LarvalC)
LarvalC <- merge(LarvalA, LarvalC)
LarvalC <- unique(LarvalC)
View(LarvalC)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
LarvalD <- merge(LarvalC, TowCoords)
Plankton2 <- select(Plankton, id, TowTime)
View(Plankton2)
Plankton2 <- Plankton2 %>% drop_na(TowTime)
MeanTowTime <- aggregate(TowTime~id, Plankton2, mean)
View(MeanTowTime)
#Left in because this should update the tow time with means
LarvalE <- merge(LarvalD, MeanTowTime)
Volume <- aggregate(Volume~id, Larval, mean)
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
# 0 is NA in these categories to allow for other data to be pulled.
#Larval$Volume[is.na(Larval$Volume)] <- 0
#Larval$Density[is.na(Larval$Density)] <- 0
#Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
#Larval$TowTime[is.na(Larval$TowTime)] <- 0
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
# Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
#'Exact' spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper.
# Paper says applies estimate growth rates to calculate the number of days back to 5mm. Took 5mm off total length to account for this.
# Assumes hatching length is 5mm, day of hatching = day 0
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
LarvalA <- select(Larval, id, Date, Survey.No, Abundance, Density, Volume, TowTime, AvgTowDepth)
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
LarvalB <- merge(MeanAgeInDays, MinDateOfSpawn)
LarvalC <- merge(LarvalB, MaxDateOfSpawn)
LarvalC <- merge(LarvalA, LarvalC)
LarvalC <- unique(LarvalC)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
#LarvalC$Density[is.na(LarvalC$Density)] <- 0
#LarvalC$AvgTowDepth[is.na(LarvalC$AvgTowDepth)] <- 0
#LarvalC$TowTime[is.na(LarvalC$TowTime)] <- 0
LarvalD <- merge(LarvalC, TowCoords)
#Plankton <- select(Plankton, id, TowTime, AvgTowDepth, Volume)
#  Plankton <- Plankton %>% drop_na(id)
#  Plankton$AvgTowDepth[is.na(Plankton$AvgTowDepth)] <- 0
Plankton2 <- select(Plankton, id, TowTime)
Plankton2 <- Plankton2 %>% drop_na(TowTime)
MeanTowTime <- aggregate(TowTime~id, Plankton2, mean)
#Left in because this should update the tow time with means
LarvalE <- merge(LarvalD, MeanTowTime)
Volume <- aggregate(Volume~id, Larval, mean)
LarvalF <- merge(LarvalE, Volume)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Density", "Preservative", "TowTime", "MeanLength", "Volume")
LarvalSum <- merge(LarvalSum, LarvalF)
LarvalSum <- unique(LarvalSum)
write.csv(LarvalSum,"C:/Users/herri/Documents/GitHub/HerringScience.github.io//Main Data/LarvalSum.csv" )
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
# 0 is NA in these categories to allow for other data to be pulled.
#Larval$Volume[is.na(Larval$Volume)] <- 0
#Larval$Density[is.na(Larval$Density)] <- 0
#Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
#Larval$TowTime[is.na(Larval$TowTime)] <- 0
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
# Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
#'Exact' spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper.
# Paper says applies estimate growth rates to calculate the number of days back to 5mm. Took 5mm off total length to account for this.
# Assumes hatching length is 5mm, day of hatching = day 0
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
LarvalA <- select(Larval, id, Date, Survey.No, Abundance, Density, Volume, TowTime, AvgTowDepth)
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
LarvalB <- merge(MeanAgeInDays, MinDateOfSpawn)
LarvalC <- merge(LarvalB, MaxDateOfSpawn)
LarvalC <- merge(LarvalA, LarvalC)
LarvalC <- unique(LarvalC)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
#LarvalC$Density[is.na(LarvalC$Density)] <- 0
#LarvalC$AvgTowDepth[is.na(LarvalC$AvgTowDepth)] <- 0
#LarvalC$TowTime[is.na(LarvalC$TowTime)] <- 0
LarvalD <- merge(LarvalC, TowCoords)
#Plankton <- select(Plankton, id, TowTime, AvgTowDepth, Volume)
#  Plankton <- Plankton %>% drop_na(id)
#  Plankton$AvgTowDepth[is.na(Plankton$AvgTowDepth)] <- 0
Plankton2 <- select(Plankton, id, TowTime)
Plankton2 <- Plankton2 %>% drop_na(TowTime)
MeanTowTime <- aggregate(TowTime~id, Plankton2, mean)
#Left in because this should update the tow time with means
LarvalE <- merge(LarvalD, MeanTowTime)
Volume <- aggregate(Volume~id, Larval, mean)
LarvalF <- merge(LarvalE, Volume)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Density", "Preservative", "TowTime", "MeanLength", "Volume")
LarvalSum <- merge(LarvalSum, LarvalF)
LarvalSum <- unique(LarvalSum)
write.csv(LarvalSum,"C:/Users/herri/Documents/GitHub/HerringScience.github.io//Main Data/LarvalSum.csv" )
View(LarvalSum)
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$Volume[is.na(Larval$Volume)] <- 0
Larval$Density[is.na(Larval$Density)] <- 0
Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
Larval$TowTime[is.na(Larval$TowTime)] <- 0
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
LarvalA <- select(Larval, id, Date, Survey.No, Abundance, Density, Volume, TowTime, AvgTowDepth)
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
LarvalB <- merge(MeanAgeInDays, MinDateOfSpawn)
LarvalC <- merge(LarvalB, MaxDateOfSpawn)
LarvalC <- merge(LarvalA, LarvalC)
LarvalC <- unique(LarvalC)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
LarvalC$Density[is.na(LarvalC$Density)] <- 0
LarvalC$AvgTowDepth[is.na(LarvalC$AvgTowDepth)] <- 0
LarvalC$TowTime[is.na(LarvalC$TowTime)] <- 0
LarvalD <- merge(LarvalC, TowCoords)
#Plankton <- select(Plankton, id, TowTime, AvgTowDepth, Volume)
Plankton <- Plankton %>% drop_na(id)
Plankton$AvgTowDepth[is.na(Plankton$AvgTowDepth)] <- 0
Plankton2 <- select(Plankton, id, TowTime)
Plankton2 <- Plankton2 %>% drop_na(TowTime)
MeanTowTime <- aggregate(TowTime~id, Plankton2, mean)
#Left in because this should update the tow time with means
LarvalE <- merge(LarvalD, MeanTowTime)
Volume <- aggregate(Volume~id, Larval, mean)
LarvalF <- merge(LarvalE, Volume)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Density", "Preservative", "TowTime", "MeanLength", "Volume")
LarvalSum <- merge(LarvalSum, LarvalF)
LarvalSum <- unique(LarvalSum)
View(LarvalSum)
LarvalSum[LarvalSum == 0] <- NA
View(LarvalSum)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Density", "Preservative", "TowTime", "MeanLength", "Volume", "Depth")
View(Larval)
View(Plankton)
Plankton2 <- select(Plankton, id, TowTime, AvgTowDepth)
View(Plankton2)
Plankton2 <- Plankton2 %>% drop_na(TowTime)
MeanTowTime <- aggregate(TowTime~id, Plankton2, mean)
#Left in because this should update the tow time with means
LarvalE <- merge(LarvalD, MeanTowTime)
Volume <- aggregate(Volume~id, Larval, mean)
LarvalF <- merge(LarvalE, Volume)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Density", "Preservative", "TowTime", "MeanLength", "Volume")
LarvalSum <- merge(LarvalSum, LarvalF)
LarvalSum <- unique(LarvalSum)
LarvalSum[LarvalSum == 0] <- NA
View(LarvalSum)
write.csv(LarvalSum,"C:/Users/herri/Documents/GitHub/HerringScience.github.io//Main Data/LarvalSum.csv" )
View(Larval)
View(Plankton)
