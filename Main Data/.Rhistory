datatable(colnames = c("Year", "Scots Bay"),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>% dplyr::select(Year, German) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
dyOptions(drawPoints = TRUE, pointSize = 2) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>%
dplyr::select(Year, German, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "German Bank", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
LRP3 %>%
dplyr::select(Year, German, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "German Bank", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
Plot_Summary = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(Biomass = sum(DFO_Turnover_Adjusted), na.rm = FALSE)
p = ggplot(data=Plot_Summary,  aes(x=Year, y=Biomass)) +
geom_col(fill = "darkblue") +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "Scots Bay" | Ground == "German Bank") %>%
filter(!is.na(DFO_Turnover_Adjusted)) %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
arrange(desc(Year))
datatable(Table,
colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
p = ggplot(data=subset(SSB, Ground == "Scots Bay"),  aes(x=Year, y=DFO_Turnover_Adjusted, fill= Survey_Number)) +
geom_col() +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "Scots Bay") %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
ungroup() %>%
arrange(desc(Year))
datatable(Table, colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
p = ggplot(data=subset(SSB, Ground == "German Bank"),  aes(x=Year, y=DFO_Turnover_Adjusted, fill= Survey_Number)) +
geom_col() +
scale_y_continuous(labels=scales::comma) +
labs(x="Year", y = "DFO Estimate w/ Turnover") +
theme(axis.text.x = element_text(angle = 55), legend.position = "none")
ggplotly(p)
Table = SSB %>%
filter(Ground == "German Bank") %>%
group_by(Year) %>%
summarize(HSC_Estimate = sum(HSC_Estimate),
HSC_Turnover_Adjusted = sum(HSC_Turnover_Adjusted),
DFO_Estmate = sum(DFO_Estimate),
DFO_Turnover_Adjusted = sum(DFO_Turnover_Adjusted)) %>%
ungroup() %>%
arrange(desc(Year))
datatable(Table, colnames = c("Year", "HSC Estimate", "HSC w/ Turnover", "DFO Estimate", "DFO w/ Turnover"),
extensions = 'Buttons',
options = list(
pageLength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "Scots Bay" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "Scots Bay" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "German Bank" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "German Bank" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
??gIntersection
library(rgeos)
#Import all packages, CTD data, and land data
install.packages("rgeos")
library(rgeos)
library(rgeos)
#Import all packages, CTD data, and land data
install.packages("rgeos")
library(sf)
library(terra)
DFOSSB = SSB %>% dplyr::select(Year, Ground, Survey_Number, DFO_Turnover_Adjusted)
for(i in unique(SSB$Year)) {
cat("\n")
cat("##### ", i, "\n")
cat("\n")
print(ggplot(data=subset(SSB, Ground == "German Bank" & Year == i), aes(x=Survey_Number, y=DFO_Turnover_Adjusted, group=1)) +
geom_point(stat='summary', fun.y=sum) +
stat_summary(fun.y=sum, geo="line") +
labs(x="Survey Number", y="DFO Biomass w/ Turnover"))
cat("\n")
print(kbl(x=subset(DFOSSB, Ground == "German Bank" & Year == i), align = "c", col.names = c("Year", "Ground", "Survey Number", "DFO (Turnover Adjusted)")) %>%
kable_paper("striped", full_width = F))
cat("\n")
}
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- gIntersection(NBNS, CP, byid=TRUE)
CP <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons") #set boundaries for Scots Bay before plotting
proj4string(CP) <- CRS(proj4string(NBNS))
out <- crop(NBNS, CP, byid=TRUE)
Plot = Tag %>% subset(Ground == "Scots Bay" & Year == year) %>% group_by(Survey) %>% mutate(group2=paste0(Survey,", n=",length(Survey))) %>% ungroup()
ggplot(data = Plot, aes(x=Lon, y=Lat)) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_point(aes(fill = group2), pch=21, size = 2) +
coord_map() +
labs(x=NULL, y=NULL, fill="Survey, # of Tags")
out <- raster(NBNS, CP, byid=TRUE)
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI = filter(Larval, Ground == "SI")
LarvalSB = filter(Larval, Ground == "SB")
LarvalGB = filter(Larval, Ground == "GB")
#'Exact' spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper.
# Paper says applies estimate growth rates to calculate the number of days back to 5mm. Took 5mm off total length to account for this.
# Assumes hatching length is 5mm, day of hatching = day 0
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
LarvalSum <- merge(LarvalSum, Larval3)
LarvalSum <- unique(LarvalSum)
View(Larval)
#Plankton Data
Plankton = read_csv("C:\Users\herri\Documents\GitHub\HerringScience.github.io\Source Data\planktonsamplingData.csv")
#Plankton Data
Plankton = setwd("C:\Users\herri\Documents\GitHub\HerringScience.github.io\Source Data\planktonsamplingData.csv")
#Plankton Data
Plankton = read_csv("planktonsamplingData.csv")
#Plankton Data
setwd(paste0("C:\Users\herri\Documents\GitHub\HerringScience.github.io\Source Data\planktonsamplingData.csv"))
#Plankton Data
setwd(paste0("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv"))
Plankton = read_csv("planktonsamplingData.csv")
getwd
Plankton = read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
View(Plankton)
MeanTowDepth <- aggregate(AvgTowDepth~id, Plankton, mean)
View(MeanTowDepth)
View(MeanTowDepth)
colnames(MeanTowDepth)[2] <- "MeanTowDepth"
View(MeanTowDepth)
colnames(MeanTowDepth)[2] <- "MeanTowDepth(m)"
colnames(MeanTowDepth)[2] <- "MeanTowDepth"
Larval4 <- merge(Larval3, MeanTowDepth)
View(Plankton)
MeanTowTime <- aggregate(TowTime~id, Plankton, mean)
View(MeanTowTime)
StartLat <- aggregate(Lat1~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
View(StartLat)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
View(StartCoords)
EndCoords <- merge(EndLat, EndLon)
View(EndCoords)
TowCoords <- merge(StartCoords, EndCoords)
View(TowCoords)
Larval5 <- merge(Larva4, MeanTowTime)
Larval5 <- merge(Larval4, MeanTowTime)
Larval6 <- merge(Larval5, TowCoords)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
LarvalSum <- merge(LarvalSum, Larval6)
LarvalSum <- unique(LarvalSum)
View(LarvalSum)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
View(Larval6)
View(Larval3)
?aggregate
MeanTowDepth <- aggregate(AvgTowDepth~id, Plankton)
?which()
?is.na
MeanTowDepth <- aggregate(AvgTowDepth~id, Plankton, mean | is.na(0))
MeanTowDepth <- aggregate(AvgTowDepth~id, Plankton, mean)
View(MeanTowDepth)
View(MeanTowTime)
colnames(MeanTowDepth)[2] <- "MeanTowDepth"
MeanTowTime <- aggregate(TowTime~id, Plankton, mean)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
Larval4 <- merge(Larval3, MeanTowDepth)
Larval5 <- merge(Larval4, MeanTowTime)
Larval6 <- merge(Larval5, TowCoords)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
LarvalSum <- merge(LarvalSum, Larval6)
LarvalSum <- unique(LarvalSum)
MeanTowDepth <- unique(Plankton$id)
MeanTowDepth <- data.frame(unique(Plankton$id))
View(MeanTowDepth)
View(Plankton)
AvgTowDepth <- data.frame(unique(Plankton$id), Plankton$AvgTowDepth)
AvgTowDepth <- data.frame(Plankton$id, Plankton$AvgTowDepth)
View(AvgTowDepth)
AvgTowDepth %>% drop_na(Plankton.id)
AvgTowDepth %>% drop_na(Plankton.id)
View(AvgTowDepth)
AvgTowDepth <- AvgTowDepth %>% drop_na(Plankton.id)
aggregate(AvgTowDepth~id, Plankton, mean)
AvgTowDepth1 <- aggregate(AvgTowDepth~id, Plankton, mean)
View(AvgTowDepth1)
View(AvgTowDepth)
AvgTowDepth[is.na(AvgTowDepth)] <- 0
View(AvgTowDepth)
View(AvgTowDepth)
colnames(AvgTowDepth)[1] <- "id"
colnames(AvgTowDepth[2]) <- "AvgTowDepth"
View(AvgTowDepth)
View(AvgTowDepth)
colnames(AvgTowDepth[2]) <- "AvgTowDepth"
View(AvgTowDepth)
AvgTowDepth[is.na(AvgTowDepth)] <- 0
colnames(AvgTowDepth)[1] <- "id"
colnames(AvgTowDepth)[2] <- "AvgTowDepth"
View(AvgTowDepth)
AvgTowDepth<- aggregate(AvgTowDepth~id, Plankton, mean)
colnames(MeanTowDepth)[2] <- "MeanTowDepth"
View(AvgTowDepth)
AvgTowDepth <- data.frame(Plankton$id, Plankton$AvgTowDepth)
AvgTowDepth <- AvgTowDepth %>% drop_na(Plankton.id)
AvgTowDepth[is.na(AvgTowDepth)] <- 0
colnames(AvgTowDepth)[1] <- "id"
colnames(AvgTowDepth)[2] <- "AvgTowDepth"
AvgTowDepth<- aggregate(AvgTowDepth~id, Plankton, mean)
colnames(MeanTowDepth)[2] <- "MeanTowDepth"
colnames(AvgTowDepth)[2] <- "MeanTowDepth"
AvgTowDepth<- aggregate(AvgTowDepth~id, Plankton, mean)
colnames(AvgTowDepth)[2] <- "MeanTowDepth"
MeanTowTime <- aggregate(TowTime~id, Plankton, mean)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
Larval4 <- merge(Larval3, MeanTowDepth)
View(Larval4)
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI <- filter(Larval, Ground == "SI")
LarvalSB <- filter(Larval, Ground == "SB")
LarvalGB <- filter(Larval, Ground == "GB")
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
o
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
View(Plankton)
AvgTowDepth <- data.frame(Plankton$id, Plankton$AvgTowDepth)
View(AvgTowDepth)
AvgTowDepth <- AvgTowDepth %>% drop_na(Plankton.id)
AvgTowDepth[is.na(AvgTowDepth)] <- 0
View(AvgTowDepth)
colnames(AvgTowDepth)[1] <- "id"
colnames(AvgTowDepth)[2] <- "AvgTowDepth"
AvgTowDepth1<- aggregate(AvgTowDepth~id, Plankton, mean)
View(AvgTowDepth1)
MeanTowTime <- aggregate(TowTime~id, Plankton, mean)
View(MeanTowTime)
Larval4 <- merge(Larval3, AvgTowDepth)
View(Larval2)
MeanTowTime <- aggregate(TowTime~id, Plankton, mean)
View(Plankton)
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
AvgTowDepth <- data.frame(Plankton$id, Plankton$AvgTowDepth)
AvgTowDepth <- AvgTowDepth %>% drop_na(Plankton.id)
AvgTowDepth[is.na(AvgTowDepth)] <- 0
colnames(AvgTowDepth)[1] <- "id"
colnames(AvgTowDepth)[2] <- "AvgTowDepth"
Larval4 <- merge(Larval3, AvgTowDepth)
MeanTowTime <- aggregate(TowTime~id, Plankton, mean)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
View(TowCoords)
Larval5 <- merge(Larval4, MeanTowTime)
Larval6 <- merge(Larval5, TowCoords)
Plankton <- Plankton[id & AvgTowDepth]
Plankton <- Plankton["id", "AvgTowDepth"]
View(Plankton)
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton1 <- select(Plankton, id, TowTime, AvgTowDeph)
Plankton1 <- select(Plankton, id, TowTime, AvgTowDepth)
View(Plankton1)
Planton <- Plankton %>% drop_na(id)
View(Plankton1)
View(Plankton)
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton <- select(Plankton, id, TowTime, AvgTowDepth)
Planton <- Plankton %>% drop_na(id)
Plankton <- Plankton %>% drop_na(id)
View(Plankton)
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton <- select(Plankton, id, TowTime, AvgTowDepth, Ground)
Plankton1 <- filter(Plankton$id == "SB" || "GB" || "SI")
Plankton1 <- filter(Plankton$id == "SB" | "GB" | "SI")
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton <- select(Plankton, id, TowTime, AvgTowDepth)
Plankton <- Plankton %>% drop_na(id)
View(Plankton)
Plankton[is.na(AvgTowDepth)] <- 0
Plankton[is.na(AvgTowDepth)] <- 0
Plankton$AvgTowDepth[is.na(AvgTowDepth)] <- 0
Plankton <- select(Plankton, id, TowTime, AvgTowDepth)
Plankton <- Plankton %>% drop_na(id)
Plankton$AvgTowDepth[is.na(AvgTowDepth)] <- 0
?is.na
Plankton <- Plankton %>% drop_na(id)
View(Plankton)
Plankton(is.na(AvgTowDepth)) <- 0
rm(list = ls())
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton <- select(Plankton, id, TowTime, AvgTowDepth)
Plankton <- Plankton %>% drop_na(id)
Plankton(is.na(AvgTowDepth)) <- 0
Plankton(is.na(Plankton$AvgTowDepth)) <- 0
is.na(Plankton$AvgTowDepth) <- 0
View(Plankton)
