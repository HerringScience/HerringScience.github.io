SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
for(i in unique(LarvalSum$TowID)) {
cat("\n")
cat(i, "\n")
cat("\n")
LarvalSum1 = subset(LarvalSum, TowReplicate == "TRUE" & Ground == "GB" & TowID == i)
#All Data at once
print(ggplot(boxes,aes(x=X, y=Y)) +
geom_polygon(data = polyGB, aes(colour = Box),fill= NA,lwd=1) +
geom_polygon(data=polySI, aes(x=long, y=lat, group=group)) +
geom_point(data=LarvalSum1, aes(x=Lon1, y=Lat1), size=3) +
coord_map() +
labs(x=NULL, y=NULL))
cat("\nat")
}
for(i in unique(LarvalSum$TowID)) {
cat("\n")
cat(i, "\n")
cat("\n")
LarvalSum1 = subset(LarvalSum, TowReplicate == "TRUE" & Ground == "GB" & TowID == i)
#All Data at once
print(ggplot(polyGB,aes(x=X, y=Y)) +
geom_polygon(data = polyGB, aes(colour = Box),fill= NA,lwd=1) +
geom_polygon(data=polySI, aes(x=long, y=lat, group=group)) +
geom_point(data=LarvalSum1, aes(x=Lon1, y=Lat1), size=3) +
coord_map() +
labs(x=NULL, y=NULL))
cat("\nat")
}
for(i in unique(LarvalSum$TowID)) {
cat("\n")
cat(i, "\n")
cat("\n")
LarvalSum1 = subset(LarvalSum, TowReplicate == "TRUE" & Ground == "GB" & TowID == i)
#All Data at once
print(ggplot(polyGB,aes(x=X, y=Y)) +
geom_polygon(data = polyGB, aes(colour = TowID),fill= NA,lwd=1) +
geom_polygon(data=polySI, aes(x=long, y=lat, group=group)) +
geom_point(data=LarvalSum1, aes(x=Lon1, y=Lat1), size=3) +
coord_map() +
labs(x=NULL, y=NULL))
cat("\nat")
}
View(LarvalSum1)
rm(list = ls())
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$Preservative[is.na(Larval$Preservative)] <- "Unknown"
#Larval Summary Table
LarvalSum = read_csv("LarvalSum.csv")
LarvalSum$Year <- as.factor(LarvalSum$Year)
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation.
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* Larval$Lengthmm),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*Larval$Lengthmm),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
#Split by Ground
LarvalSB = LarvalSum %>% filter(Ground == "SB")
LarvalGB = LarvalSum %>% filter(Ground == "GB")
LarvalSI = LarvalSum %>% filter(Ground == "SI")
#Load all of Canada data and extract Atlantic provinces
can<-getData('GADM', country="CAN", level=1) # provinces
NBNS <- can[can@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","Qu?bec"),]
#Set boundaries that you need to map
# Proper coordinates for Tagging
CP1 <- as(extent(-69, -62, 42, 46), "SpatialPolygons")
# Proper coordinates for GB plankton tow
CP2 <- as(extent(-67, -65, 43, 43.6), "SpatialPolygons")
# Coordinates for German Bank and Spec
CP3 <- as(extent(-67, -65, 43, 44), "SpatialPolygons")
# Scots
CP4 <- as(extent(-66, -63, 44, 46), "SpatialPolygons")
# Scotia Shelf
CP5 <- as(extent(-65, -60, 43, 46), "SpatialPolygons")
# Grand Manan Area
CP6 <- as(extent(-68, -66, 44, 45), "SpatialPolygons")
#Reduce Province data down to only the above extents/limits
proj4string(CP1) <- CRS(proj4string(NBNS))
#All <- gIntersection(NBNS, CP1, byid=TRUE) ## In old package
All <- intersect(NBNS, CP1)
#Load boxes
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7], "/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
points = read.csv("Points.csv")
boxes = read.csv("timGrounds.csv")
#Tim Grounds
SUA = read.csv("timGrounds.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
# Scots Bay
SUA = read.csv("polygon_SBEastern.csv")
polyEastern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SBNorthern.csv")
polyNorthern = as.PolySet(SUA, projection="LL")
SUA = read.csv("polygon_SB.csv")
polySB_main = as.PolySet(SUA, projection="LL")
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
View(LarvalSum)
#Larval Summary Table
LarvalSum = read_csv("LarvalSum.csv")
#Larval Summary Table
LarvalSum = read_csv("LarvalSum.csv")
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
## Importing Data
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$Date <- as.Date(Larval$Date)
#Adds TowID based on date
Larval <- Larval %>%
group_by(Ground) %>%
transform(TowID = as.numeric(factor(Date)))
#Add Replicate Tow 1 or 2
Larval1 <- Larval %>%
group_by(TowID) %>%
summarize(TowReplicate = n_distinct(id))
Larval1$TowReplicate <- as.character(Larval1$TowReplicate)
Larval1$TowReplicate[Larval1$TowReplicate == "1"] <- "False"
Larval1$TowReplicate[Larval1$TowReplicate == "2"] <- "True"
Larval <- merge(Larval, Larval1, by = "TowID")
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation. They did suggest that this adjustment would be less accurate the longer the tow period.
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* Larval$Lengthmm),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*Larval$Lengthmm),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
# 0 is NA in these categories to allow for other data to be pulled.
Larval$Volume[is.na(Larval$Volume)] <- 0
Larval$Density[is.na(Larval$Density)] <- 0
Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
Larval$TowTime[is.na(Larval$TowTime)] <- 0
Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
#'Exact' spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper.
# Paper says applies estimate growth rates to calculate the number of days back to 5mm. Took 5mm off total length to account for this.
# Assumes hatching length is 5mm, day of hatching = day 0
Larval$AdjustedAgeInDays <- ((Larval$LengthAdjustment - 5)/0.24)
Larval$AdjustedSpawnDate <- Larval$Date-Larval$AdjustedAgeInDays
AdjustedMeanAgeInDays <- aggregate(AdjustedAgeInDays~id, Larval, mean)
colnames(AdjustedMeanAgeInDays)[2]<- "AdjustedMeanAgeInDays"
AdjustedMinDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, min)
colnames(AdjustedMinDateOfSpawn)[2] <- "AdjustedMinDateOfSpawn"
AdjustedMaxDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, max)
colnames(AdjustedMaxDateOfSpawn)[2] <- "AdjustedMaxDateOfSpawn"
AdjustedDays <- merge(AdjustedMaxDateOfSpawn, AdjustedMinDateOfSpawn, by = 'id')
AdjustedDays <- merge(AdjustedDays, AdjustedMeanAgeInDays, by = 'id')
Larval <- merge(Larval, AdjustedDays, by = 'id')
# Adding in Tow start and end coordinates
TowCoords <- data.frame(aggregate(Lat1~id, Plankton, mean),
aggregate(Lon1~id, Plankton, mean),
aggregate(Lat2~id, Plankton, mean),
aggregate(Lon2~id, Plankton, mean))
TowCoords <- TowCoords[, !grepl("id.", names(TowCoords))]
Larval <- merge(Larval, TowCoords, by = 'id')
Volume <- aggregate(Volume~id, Larval, mean)
colnames(Volume)[2] <- "AverageVolume"
Larval <- merge(Larval, Volume, by = 'id')
LarvalSum <- Larval %>% select("Ground",
"Date",
"Year",
"id",
"TowReplicate",
"TowID",
"Survey.No",
"Abundance",
"Density",
"Volume",
"Preservative",
"LengthAdjustment",
"AdjustedMeanAgeInDays",
"AdjustedMinDateOfSpawn",
"AdjustedMaxDateOfSpawn",
"Lat1",
"Lon1",
"Lat2",
"Lon2",
"TowTime",
"AvgTowDepth")
LarvalSum <- unique(LarvalSum)
LarvalSum <- unique(LarvalSum)
LarvalSum <- unique(LarvalSum)
View(LarvalSum)
Larval <- merge(Larval, AverageVolume, by = 'id')
colnames(Volume)[2] <- "Volume"
LengthAdjustment <- aggregate(LengthAdjustment~id, Larval, mean)
View(LengthAdjustment)
LengthAdjustment <- aggregate(LengthAdjustment~id, Larval, mean)
colnames(LengthAdjustment)[2]<- "LengthAdjustment"
Larval$AdjustedSpawnDate <- Larval$Date-Larval$AdjustedAgeInDays
Larval$AdjustedAgeInDays <- ((Larval$LengthAdjustment - 5)/0.24)
MeanLengthAdjustment <- aggregate(LengthAdjustment~id, Larval, mean)
colnames(LengthAdjustment)[2]<- "MeanLengthAdjustment"
Larval <- merge(Larval, MeanLengthAdjustment)
#Remove
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
## Importing Data
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$Date <- as.Date(Larval$Date)
#Adds TowID based on date
Larval <- Larval %>%
group_by(Ground) %>%
transform(TowID = as.numeric(factor(Date)))
#Add Replicate Tow 1 or 2
Larval1 <- Larval %>%
group_by(TowID) %>%
summarize(TowReplicate = n_distinct(id))
Larval1$TowReplicate <- as.character(Larval1$TowReplicate)
Larval1$TowReplicate[Larval1$TowReplicate == "1"] <- "False"
Larval1$TowReplicate[Larval1$TowReplicate == "2"] <- "True"
Larval <- merge(Larval, Larval1, by = "TowID")
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation. They did suggest that this adjustment would be less accurate the longer the tow period.
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* Larval$Lengthmm),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*Larval$Lengthmm),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
# 0 is NA in these categories to allow for other data to be pulled.
Larval$Volume[is.na(Larval$Volume)] <- 0
Larval$Density[is.na(Larval$Density)] <- 0
Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
Larval$TowTime[is.na(Larval$TowTime)] <- 0
Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
#'Exact' spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper.
# Paper says applies estimate growth rates to calculate the number of days back to 5mm. Took 5mm off total length to account for this.
# Assumes hatching length is 5mm, day of hatching = day 0
Larval$AdjustedAgeInDays <- ((Larval$LengthAdjustment - 5)/0.24)
MeanLengthAdjustment <- aggregate(LengthAdjustment~id, Larval, mean)
colnames(LengthAdjustment)[2]<- "MeanLengthAdjustment"
#Remove
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
options(ggrepel.max.overlaps = Inf)
## Importing Data
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$Date <- as.Date(Larval$Date)
#Adds TowID based on date
Larval <- Larval %>%
group_by(Ground) %>%
transform(TowID = as.numeric(factor(Date)))
#Add Replicate Tow 1 or 2
Larval1 <- Larval %>%
group_by(TowID) %>%
summarize(TowReplicate = n_distinct(id))
Larval1$TowReplicate <- as.character(Larval1$TowReplicate)
Larval1$TowReplicate[Larval1$TowReplicate == "1"] <- "False"
Larval1$TowReplicate[Larval1$TowReplicate == "2"] <- "True"
Larval <- merge(Larval, Larval1, by = "TowID")
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
# if preservative is formalin, apply L  = 0.984 + 0.993 x X1. (X1 = fixed/preserved length therefore Larval$Lengthmm, L = Live length.)
# if preservation is alcohol apply L = 0.532 + 0.989 x X1
#This is taken from Fox 1996 alcohol vs Formalin paper. They did 5% and 5 minute net capture simulation. They did suggest that this adjustment would be less accurate the longer the tow period.
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* Larval$Lengthmm),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*Larval$Lengthmm),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
# 0 is NA in these categories to allow for other data to be pulled.
Larval$Volume[is.na(Larval$Volume)] <- 0
Larval$Density[is.na(Larval$Density)] <- 0
Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
Larval$TowTime[is.na(Larval$TowTime)] <- 0
Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
#'Exact' spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper.
# Paper says applies estimate growth rates to calculate the number of days back to 5mm. Took 5mm off total length to account for this.
# Assumes hatching length is 5mm, day of hatching = day 0
Larval$AdjustedAgeInDays <- ((Larval$LengthAdjustment - 5)/0.24)
MeanLengthAdjustment <- aggregate(LengthAdjustment~id, Larval, mean)
colnames(MeanLengthAdjustment)[2]<- "MeanLengthAdjustment"
Larval <- merge(Larval, MeanLengthAdjustment)
Larval$AdjustedSpawnDate <- Larval$Date-Larval$AdjustedAgeInDays
AdjustedMeanAgeInDays <- aggregate(AdjustedAgeInDays~id, Larval, mean)
colnames(AdjustedMeanAgeInDays)[2]<- "AdjustedMeanAgeInDays"
AdjustedMinDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, min)
colnames(AdjustedMinDateOfSpawn)[2] <- "AdjustedMinDateOfSpawn"
AdjustedMaxDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, max)
colnames(AdjustedMaxDateOfSpawn)[2] <- "AdjustedMaxDateOfSpawn"
AdjustedDays <- merge(AdjustedMaxDateOfSpawn, AdjustedMinDateOfSpawn, by = 'id')
AdjustedDays <- merge(AdjustedDays, AdjustedMeanAgeInDays, by = 'id')
Larval <- merge(Larval, AdjustedDays, by = 'id')
# Adding in Tow start and end coordinates
TowCoords <- data.frame(aggregate(Lat1~id, Plankton, mean),
aggregate(Lon1~id, Plankton, mean),
aggregate(Lat2~id, Plankton, mean),
aggregate(Lon2~id, Plankton, mean))
TowCoords <- TowCoords[, !grepl("id.", names(TowCoords))]
Larval <- merge(Larval, TowCoords, by = 'id')
Volume <- aggregate(Volume~id, Larval, mean)
colnames(Volume)[2] <- "Volume"
Larval <- merge(Larval, AverageVolume, by = 'id')
Larval <- merge(Larval, Volume, by = 'id')
LarvalSum <- Larval %>% select("Ground",
"Date",
"Year",
"id",
"TowReplicate",
"TowID",
"Survey.No",
"Abundance",
"Density",
"Volume",
"Preservative",
"MeanLengthAdjustment",
"AdjustedMeanAgeInDays",
"AdjustedMinDateOfSpawn",
"AdjustedMaxDateOfSpawn",
"Lat1",
"Lon1",
"Lat2",
"Lon2",
"TowTime",
"AvgTowDepth")
LarvalSum <- Larval %>% select("Ground",
"Date",
"Year",
"id",
"TowReplicate",
"TowID",
"Survey.No",
"Abundance",
"Density",
"Volume",
"Preservative",
"MeanLengthAdjustment",
"AdjustedMeanAgeInDays",
"AdjustedMinDateOfSpawn",
"AdjustedMaxDateOfSpawn",
"Lat1",
"Lon1",
"Lat2",
"Lon2",
"TowTime",
"AvgTowDepth")
View(Larval)
