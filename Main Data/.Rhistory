CTD_Sum = CTD %>%
group_by(ID) %>%
summarize(Lat = mean(Lat),
Lon = mean(Lon)) %>%
rename(Vessel = ID) %>%
mutate(Vessel = "CTD Cast",
Tag_Count = 300)
if(!is.na(unique(Survey$PlanktonVessel))){Tows_Sum =
Survey %>%
group_by(id) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2)) %>%
rename(Vessel = "PlanktonVessel") %>%
mutate(Vessel = "Plankton Tow",
Tag_Count = 300)}
head(Survey)
is.na(unique(Survey$PlanktonVessel))
Survey %>%
group_by(id) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2))
View(Survey)
Survey %>%
group_by(id) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2)) %>%
rename(Vessel = PlanktonVessel)
View(Survey)
?rename
CTD_Sum = CTD %>%
group_by(ID) %>%
summarize(Lat = mean(Lat),
Lon = mean(Lon)) %>%
rename(Vessel = ID) %>%
mutate(Vessel = "CTD Cast",
Tag_Count = 300)
if(!is.na(unique(Survey$PlanktonVessel))){
Tows_Sum =
Survey %>%
group_by(id) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2))
Survey %>%
rename(Vessel = PlanktonVessel) %>%
mutate(Vessel = "Plankton Tow",
Tag_Count = 300)}
if(is.na(unique(Survey$PlanktonVessel))){Tows_Sum = CTD_Sum}
Tag_Sum = Tag %>%
group_by(Lat, Lon, Vessel, Tagger) %>%
summarize(Tag_Count=n_distinct(Tag_Num),
Lat=mean(Lat),
Lon=mean(Lon))
ScienceData = full_join(Tows_Sum, CTD_Sum, by = c("Vessel", "Lat", "Lon", "Tag_Count"))
View(Survey)
View(Tows_Sum)
CTD_Sum = CTD %>%
group_by(ID) %>%
summarize(Lat = mean(Lat),
Lon = mean(Lon)) %>%
rename(Vessel = ID) %>%
mutate(Vessel = "CTD Cast",
Tag_Count = 300)
if(!is.na(unique(Survey$PlanktonVessel))){
Tows_Sum =
Survey %>%
group_by(id) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2))
Tows_Sum %>%
rename(Vessel = PlanktonVessel) %>%
mutate(Vessel = "Plankton Tow",
Tag_Count = 300)}
View(Tows_Sum)
CTD_Sum = CTD %>%
group_by(ID) %>%
summarize(Lat = mean(Lat),
Lon = mean(Lon)) %>%
rename(Vessel = ID) %>%
mutate(Vessel = "CTD Cast",
Tag_Count = 300)
if(!is.na(unique(Survey$PlanktonVessel))){
Tows_Sum =
Survey %>%
group_by(id, PlanktonVessel) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2))
Tows_Sum %>%
rename(Vessel = PlanktonVessel) %>%
mutate(Vessel = "Plankton Tow",
Tag_Count = 300)}
if(is.na(unique(Survey$PlanktonVessel))){Tows_Sum = CTD_Sum}
Tag_Sum = Tag %>%
group_by(Lat, Lon, Vessel, Tagger) %>%
summarize(Tag_Count=n_distinct(Tag_Num),
Lat=mean(Lat),
Lon=mean(Lon))
ScienceData = full_join(Tows_Sum, CTD_Sum, by = c("Vessel", "Lat", "Lon", "Tag_Count"))
View(Tows_Sum)
CTD_Sum = CTD %>%
group_by(ID) %>%
summarize(Lat = mean(Lat),
Lon = mean(Lon)) %>%
rename(Vessel = ID) %>%
mutate(Vessel = "CTD Cast",
Tag_Count = 300)
if(!is.na(unique(Survey$PlanktonVessel))){
Tows_Sum =
Survey %>%
group_by(id, PlanktonVessel) %>%
summarize(Lon=mean(Lon1, Lon2),
Lat=mean(Lat1, Lat2)) %>%
rename(Vessel = PlanktonVessel) %>%
mutate(Vessel = "Plankton Tow",
Tag_Count = 300)}
if(is.na(unique(Survey$PlanktonVessel))){Tows_Sum = CTD_Sum}
Tag_Sum = Tag %>%
group_by(Lat, Lon, Vessel, Tagger) %>%
summarize(Tag_Count=n_distinct(Tag_Num),
Lat=mean(Lat),
Lon=mean(Lon))
ScienceData = full_join(Tows_Sum, CTD_Sum, by = c("Vessel", "Lat", "Lon", "Tag_Count"))
ScienceData2 = full_join(ScienceData, Tag_Sum)
a = ggplot(ScienceData2, aes(x=Lon, y=Lat)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBplankton,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=SBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_point(aes(colour = Vessel, size = Tag_Count)) +
coord_map() +
labs(x=NULL, y=NULL)
b = ggplot(ScienceData2, aes(x=Lon, y=Lat)) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=GBCTD,aes(x=X, y=Y, group=PID), colour = "black", fill = "white", linetype = 3) +
geom_point(aes(colour = Vessel, size = Tag_Count)) +
coord_map() +
labs(x=NULL, y=NULL)
ifelse(Survey$Ground == "SB", plot(a), plot(b))
rm(list = ls())
#Change these options
surv = "SB"
surv2 = "Scots Bay"
year = "2023"
surv.no = "5"
hightide = "2023-07-17 00:11:00"
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
#Survey Data
Survey = read_csv("Survey Data.csv") #Survey Data
Survey$Year = as.factor(Survey$Year)
Survey$Ground = as.factor(Survey$Ground)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
CTD2=CTD
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
Tag = Tag %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
CTD = CTD %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
current=paste0(unique(Survey$Ground), unique(Survey$Survey.No))
if(!is.na(unique(Survey$EVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBEastern.csv"))
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(unique(Survey$NVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBNorthern.csv"))
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SB.csv"))
polySB_main = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current))
Map = list.files(pattern = "Map*") %>%
map_df(~read_csv(.))
Region = list.files(pattern = "Region*") %>%
map_df(~read_csv(.))
Speed=read_csv("Speed.csv")
Distance=read_csv("Distance.csv")
SurveyTotal=read_csv("Performance Total.csv")
#Results Tables
tableB=read_csv("tableB.csv") %>% dplyr::select(-Distance)
tableC=read_csv("tableC.csv")
View(Survey)
# remove everything in the workspace
rm(list = ls())
# IMPORTANT : SET GROUND, YEAR, AND SURVEY # HERE
surv="SB" #SB or GB
surv2="Scots Bay" #"German Bank" or "Scots Bay" as written
year="2023"
surv.no="5"
adhoc = "FALSE" #true or false if an adhoc survey was completed (and "adhoc.csv" exists)
#Set vessels for SB only
ids = c("FM", "LB", "LJ", "SL") #only main box vessels
NorthVessel = "LM" #set NA if none
EastVessel = "C1" #set NA if none
setwd("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/")
Survey = read_csv("planktonsamplingData.csv")
Survey = Survey %>% dplyr::select(Ground, id, Survey.No, Date, StartTime, Sample, Fishing, Vessel.No, ExtraBox, EVessel, NVessel, PlanktonVessel, No_jars, Lon1, Lat1, Lon2, Lat2, Time1, Time2, TowTime, AirTemp, Speed, Heading, TideDirection, AvgTowDepth, MaxTowDepth, CTD_ID, AvgTemp, AvgSalinity, WindDirection, WindSpeed, Swell, FlowReading1, FlowReading2, DepthDiscD, DepthDiscA)
View(Survey)
View(Survey)
?substr
setwd("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/")
Survey = read_csv("planktonsamplingData.csv")
Survey = Survey %>% dplyr::select(Ground, id, Survey.No, Date, StartTime, Sample, Fishing, Vessel.No, ExtraBox, EVessel, NVessel, PlanktonVessel, No_jars, Lon1, Lat1, Lon2, Lat2, Time1, Time2, TowTime, AirTemp, Speed, Heading, TideDirection, AvgTowDepth, MaxTowDepth, CTD_ID, AvgTemp, AvgSalinity, WindDirection, WindSpeed, Swell, FlowReading1, FlowReading2, DepthDiscD, DepthDiscA)
Survey = Survey %>%
mutate(Day = as.numeric(substr(Date, 1, 2)),
Month = as.numeric(substr(Date, 4, 5)),
Year = as.numeric(substr(Date, 7, 10)),
Ground = surv,
NoRevs = FlowReading2-FlowReading1,
DistanceCalc = NoRevs*26873/1000000,
Volume = DistanceCalc*3.1415)
View(Survey)
setwd("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/")
Survey = read_csv("planktonsamplingData.csv")
Survey = Survey %>% dplyr::select(Ground, id, Survey.No, Date, StartTime, Sample, Fishing, Vessel.No, ExtraBox, EVessel, NVessel, PlanktonVessel, No_jars, Lon1, Lat1, Lon2, Lat2, Time1, Time2, TowTime, AirTemp, Speed, Heading, TideDirection, AvgTowDepth, MaxTowDepth, CTD_ID, AvgTemp, AvgSalinity, WindDirection, WindSpeed, Swell, FlowReading1, FlowReading2, DepthDiscD, DepthDiscA)
Survey = Survey %>%
mutate(Day = as.numeric(substr(Date, 1, 2)),
Month = as.numeric(substr(Date, 4, 5)),
Year = as.numeric(substr(Date, 7, 10)),
Ground = surv,
NoRevs = FlowReading2-FlowReading1,
DistanceCalc = NoRevs*26873/1000000,
Volume = DistanceCalc*3.1415)
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
Survey %>% write_csv("Survey Data.csv")
rm(list = ls())
#Change these options
surv = "SB"
surv2 = "Scots Bay"
year = "2023"
surv.no = "5"
hightide = "2023-07-17 00:11:00"
## Global options
knitr::opts_knit$set(root.dir = paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/"))
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
library(rgeos)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
#Survey Data
Survey = read_csv("Survey Data.csv") #Survey Data
Survey$Year = as.factor(Survey$Year)
Survey$Ground = as.factor(Survey$Ground)
#Tagging Data
Tag = read_csv("TaggingEvents.csv") #Tagging Data
polysT = read_csv("timGrounds.csv") #Coloured ground maps
Tag$Year = as.factor(Tag$Year)
Tag$Vessel = as.factor(Tag$Vessel)
Tag$Survey = as.factor(Tag$Survey)
Tag$Tagger = as.factor(Tag$Tagger)
#CTD Data
SST = read_csv("CTD SST.csv") #SST
polysT = read_csv("timGrounds.csv") #coloured ground maps
CTD = read_csv("CTD Full.csv") #All Data
atDepth = read_csv("CTD 30m.csv") #At 30m Depth > This one contains all Stratified Temp + Salinity data as well
SST$Year <- as.factor(SST$Year)
SST$Month <- as.factor(SST$Month)
atDepth$Year <- as.factor(atDepth$Year)
atDepth$Month <- as.factor(atDepth$Month)
CTD$Year <- as.factor(CTD$Year)
CTD$Month <- as.factor(CTD$Month)
CTD$Survey <- as.factor(CTD$Survey)
CTD <- CTD %>%
mutate(Julian_factor = Julian)
CTD$Julian_factor <- as.factor(CTD$Julian_factor)
CTD2=CTD
#SSB Data
SSB = read_csv("SSB Estimates.csv")
SSB$Year <- as.factor(SSB$Year)
SSB$Survey_Number <- as.factor(SSB$Survey_Number)
SSB$Ground <- as.factor(SSB$Ground)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Land Data
can<-getData('GADM', country="CAN", level=1)
us = getData('GADM', country = "USA", level = 1)
can1 = rbind(can,us)
NBNS <- can1[can1@data$NAME_1%in%c("New Brunswick","Nova Scotia","Prince Edward Island","Newfoundland and Labrador","QuÃ©bec", "Maine"),]
# Proper coordinates for German Bank
GBMap <- as(extent(-66.5, -65.5, 43, 44), "SpatialPolygons")
proj4string(GBMap) <- CRS(proj4string(NBNS))
GBout <- gIntersection(NBNS, GBMap, byid=TRUE)
# Proper coordinates for Scots Bay
SBMap <- as(extent(-65.5, -64.5, 45, 45.5), "SpatialPolygons")
proj4string(SBMap) <- CRS(proj4string(NBNS))
SBout <- gIntersection(NBNS, SBMap, byid=TRUE)
#Import All Boxes
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Box Coordinates/"))
boxes = read.csv("surveyBoxes.csv")
# Scots Bay plankton and CTD box
SBplankton=boxes[which(boxes$Box == "SBPlanktonBox"), ]
SBCTD=boxes[which(boxes$Box == "SBocean"), ]
#German Bank CTD box
GBCTD=boxes[which(boxes$Box == "GBocean"), ]
# German Bank
SUA = read.csv("polygon_GB.csv")
polyGB = as.PolySet(SUA, projection="LL")
# Seal Island
SUA = read.csv("polygon_SI.csv")
polySI = as.PolySet(SUA, projection="LL")
View(Survey)
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
View(Survey)
Survey = Survey %>% filter(Ground == surv & Survey.No == surv.no & Year == year)
Tag = Tag %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
CTD = CTD %>% filter(Ground == surv2 & Survey == surv.no & Year == year)
current=paste0(unique(Survey$Ground), unique(Survey$Survey.No))
if(!is.na(unique(Survey$EVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBEastern.csv"))
polyEastern = as.PolySet(SUA, projection="LL")}
if(!is.na(unique(Survey$NVessel))){
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SBNorthern.csv"))
polyNorthern = as.PolySet(SUA, projection="LL")}
SUA = read.csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current, "/polygon_SB.csv"))
polySB_main = as.PolySet(SUA, projection="LL")
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", current))
Map = list.files(pattern = "Map*") %>%
map_df(~read_csv(.))
Region = list.files(pattern = "Region*") %>%
map_df(~read_csv(.))
Speed=read_csv("Speed.csv")
Distance=read_csv("Distance.csv")
SurveyTotal=read_csv("Performance Total.csv")
#Results Tables
tableB=read_csv("tableB.csv") %>% dplyr::select(-Distance)
tableC=read_csv("tableC.csv")
View(Survey)
x=unique(ifelse(Survey$Ground == "SB", "Scots Bay", "German Bank"))
y=unique(Survey$Survey.No)
z=unique(Survey$Date)
Map = Map %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
Region = Region %>%
mutate(Vessel = substr(Region_name, 1, 2)) %>%
rename(Lon = Lon_S,Lat = Lat_S, Lon2 = Lon_E, Lat2 = Lat_E)
a = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=SBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polySB_main,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
{if(!is.na(unique(Survey$NVessel)))geom_polygon(data=polyNorthern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
{if(!is.na(unique(Survey$EVessel)))geom_polygon(data=polyEastern,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3)} +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))
b = ggplot(Region,aes(x=Lon, y=Lat)) +
geom_polygon(data=GBout,aes(x=long, y=lat, group=group)) +
geom_polygon(data=polyGB,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_polygon(data=polySI,aes(x=X, y=Y, group=PID), colour = "black", fill="white",linetype = 3) +
geom_segment(aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, colour = Vessel), size = 1)  +
coord_map() +
labs(x=NULL, y=NULL, caption = "Track plot and Survey Area") +
theme(plot.caption = element_text(face="italic", hjust=0.5))
ifelse(Survey$Ground == "SB", plot(a), plot(b))
a=unique(Survey$Vessel.No)
b=unique(ifelse(Survey$Fishing == "Y", "fishing", ifelse(Survey$Fishing == "N", "non-fishing", "NA")))
c=unique(Survey$Date)
d=unique(Survey$StartTime)
e=unique(Survey$EVessel)
f=unique(Survey$NVessel)
g=unique(ifelse(Survey$Ground == "GB", "two transects in the German Bank box and one transect in the Seal Island Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "No", "two transects each in the Main Survey Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", paste("two transects each in the Main Survey Box, and the ", e, " ran four lines in the Eastern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", paste("two transects each in the Main Survey Box, and the ", f, "ran four lines in the Northern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", paste("two transects each in the Main Survey Box, the ", e, "ran four lines in the Eastern Survey Box, and the ", f, "ran four lines in the Northern            Survey Box"),
"NA"))))))
h=unique(ifelse(is.na(Survey$PlanktonVessel), "There was no plankton tow or CTD cast conducted", paste("There was a plankton tow and replicate conducted and CTD cast by ", unique(Survey$PlanktonVessel))))
i=unique(ifelse(Survey$Ground == "GB", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "No", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", a-2,
"NA"))))))
month1 = substr(c,4,5)
day1 = substr(c,1,2)
tidestring = paste0(year, "-", month1, "-", day1, " ", d)
tidestring = as.POSIXlt(tidestring, format="%Y-%m-%d %H:%M:%S")
hightide = as.POSIXlt(hightide, format="%Y-%m-%d %H:%M:%S")
tidediff = as.double(difftime(tidestring, hightide, units = "hours"))
j = ifelse(tidediff < 0, "before", "after")
k = abs(round(tidediff, digits = 2))
a=unique(Survey$Vessel.No)
b=unique(ifelse(Survey$Fishing == "Y", "fishing", ifelse(Survey$Fishing == "N", "non-fishing", "NA")))
c=unique(Survey$Date)
d=unique(Survey$StartTime)
e=unique(Survey$EVessel)
f=unique(Survey$NVessel)
g=unique(ifelse(Survey$Ground == "GB", "two transects in the German Bank box and one transect in the Seal Island Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "No", "two transects each in the Main Survey Box",
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", paste("two transects each in the Main Survey Box, and the ", e, " ran four lines in the Eastern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", paste("two transects each in the Main Survey Box, and the ", f, "ran four lines in the Northern Survey Box"),
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", paste("two transects each in the Main Survey Box, the ", e, "ran four lines in the Eastern Survey Box, and the ", f, "ran four lines in the Northern            Survey Box"),
"NA"))))))
h=unique(ifelse(is.na(Survey$PlanktonVessel), "There was no plankton tow or CTD cast conducted", paste("There was a plankton tow and replicate conducted and CTD cast by ", unique(Survey$PlanktonVessel))))
i=unique(ifelse(Survey$Ground == "GB", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "No", a,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "East", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "North", a-1,
ifelse(Survey$Ground == "SB" & Survey$ExtraBox == "Both", a-2,
"NA"))))))
month1 = substr(c,4,5)
day1 = substr(c,1,2)
tidestring = paste0(year, "-", month1, "-", day1, " ", d)
tidestring = as.POSIXlt(tidestring, format="%Y-%m-%d %H:%M:%S")
hightide = as.POSIXlt(hightide, format="%Y-%m-%d %H:%M:%S")
tidediff = as.double(difftime(tidestring, hightide, units = "hours"))
j = ifelse(tidediff < 0, "before", "after")
k = abs(round(tidediff, digits = 2))
