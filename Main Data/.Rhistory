}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 5)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 6)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 7)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 8)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 9)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 10)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 11)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 12)
print(FatData1 %>%
ggplot(aes(x=Lon, y=Lat)) +
geom_polygon(data=polysT,aes(x=X, y=Y, group=Box, fill = Box), colour = "black") +
geom_point(data=subset(FatData1, Lat < 46 & Lat > 40 & Year == i), aes(color=Fat)) +
scale_color_viridis_c(direction=-1) +
geom_polygon(data=out,aes(x=long, y=lat, group=group)) +
coord_map() +
theme(legend.position = 'bottom'))
cat("\n")
}
library(scales)
FatData %>%
filter(!is.na(Lat)) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)")
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 1) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 2) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 3) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 4) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 5) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 6) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 7) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 8) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 9) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 10) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 11) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 12) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
? !
)
?!is.na
for(i in unique(FatData$Year)) {
cat("\n")
cat("######", i, "\n")
cat("\n")
FatData1 = FatData %>% filter(Month == 12) %>% filter(!is.na(Lat))
print(FatData1 %>%
filter(Year == i) %>%
drop_na(Year) %>%
mutate(Lat = format(round(Lat, 1), nsmall = 1)) %>%
ggplot(aes(x=Fat, y=Lat, group = Lat, fill = Lat)) +
geom_density_ridges(rel_min_height = 0.01) +
theme(legend.position = "none") +
labs(y="Latitude", x="Fat Percentage (%)"))
cat("\n")
}
LRP3 %>% filter(Year > 2017) %>%
dplyr::select(Year, Seal) %>%
dygraph(ylab = "Biomass (mt)", xlab = "Year") %>%
#breaks=unique(as.integer("x")) %>% #use as as.integer for x axis to reformat to full years?
dyOptions(drawPoints = TRUE, pointSize = 2, digitsAfterDecimal = 0) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.8,
hideOnMouseOut = FALSE)
LRP3 %>% filter(Year > 2017) %>%
dplyr::select(Year, Seal) %>%
arrange(desc(Year)) %>%
datatable(colnames = c("Year", "Seal Isl."),
extensions = 'Buttons',
options = list(
pagelength = 5,
dom = 'lfrtiBp',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI = filter(Larval, Ground == "SI")
LarvalSB = filter(Larval, Ground == "SB")
LarvalGB = filter(Larval, Ground == "GB")
#LarvalCount <- Larval %>% count(id) #Don't need larval count as already in Larval spreadsheet as 'Abundance'
Larval$DaysFromSpawn <- Larval$Lengthmm/0.24
Larval$SpawnDate <- Larval$Date-Larval$DaysFromSpawn
#Larval <- merge(Larval, LarvalCount)
#colnames(Larval)[41] <- "LarvalCount"
MeanDaysFromSpawn <- aggregate(DaysFromSpawn~id, Larval, mean)
colnames(MeanDaysFromSpawn)[2]<- "MeanDaysFromSpawn"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
Larval2 <- merge(MeanDaysFromSpawn, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
LarvalSum <- Larval %>% select("Ground", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
LarvalSum <- merge(LarvalSum, Larval3)
View(LarvalSum)
View(Larval)
View(LarvalSum)
View(Larval3)
View(LarvalSum)
LarvalSum(!duplicated(LarvalSum)
)
unique(LarvalSum)
LarvalSum <- unique(LarvalSum)
View(LarvalSum)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
LarvalSum <- merge(LarvalSum, Larval3)
LarvalSum <- unique(LarvalSum)
View(LarvalSum)
View(Larval)
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI = filter(Larval, Ground == "SI")
LarvalSB = filter(Larval, Ground == "SB")
LarvalGB = filter(Larval, Ground == "GB")
#How to get actual spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper. This does not take into account the size that they started at.
Larval$DaysFromSpawn <- Larval$Lengthmm/0.24
View(Larval)
#How to get actual spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper. This does not take into account the size that they started at.
Larval$AgeInDays <- Larval$Lengthmm/0.24
View(Larval)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
View(Larval)
MeanDaysFromSpawn <- aggregate(DaysFromSpawn~id, Larval, mean)
colnames(MeanDaysFromSpawn)[2]<- "MeanDaysFromSpawn"
View(MeanDaysFromSpawn)
rm(list = ls())
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI = filter(Larval, Ground == "SI")
LarvalSB = filter(Larval, Ground == "SB")
LarvalGB = filter(Larval, Ground == "GB")
#How to get actual spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper. This does not take into account the size that they started at.
Larval$AgeInDays <- Larval$Lengthmm/0.24
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
View(Larval2)
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
View(Larval3)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
View(LarvalSum)
LarvalSum <- merge(LarvalSum, Larval3)
View(LarvalSum)
View(Larval)
LarvalSum <- unique(LarvalSum)
View(LarvalSum)
rm(list = ls())
#Larval Data
Larval = read_csv("Full Larval.csv")
View(Larval)
rm(list = ls())
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI = filter(Larval, Ground == "SI")
LarvalSB = filter(Larval, Ground == "SB")
LarvalGB = filter(Larval, Ground == "GB")
#How to get actual spawn date. Growth rate of .24mm/day based on Chenoweth 1989 paper. This does not take into account the size that they started at.
Larval$AgeInDays <- Larval$Lengthmm/0.24
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
Larval2 <- merge(MeanAgeInDays, MinDateOfSpawn)
Larval3 <- merge(Larval2, MaxDateOfSpawn)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Preservative", "X", "Y", "TowTime", "MeanLength")
LarvalSum <- merge(LarvalSum, Larval3)
LarvalSum <- unique(LarvalSum)
