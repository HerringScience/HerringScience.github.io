library(gridExtra)
library(cowplot)
library(readxl)
library(hms)
library(measurements)
##Survey Data import and filtering
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Surveys/", year, "/", surv, surv.no))
Plankton = read_csv("PlanktonData.csv")
Plankton = Plankton %>%
mutate(Year = year,
Ground = surv,
Survey.No = surv.no,
TowTime = difftime(Time2, Time1, units = "mins"))
Plankton$Year = as.numeric(Plankton$Year)
Plankton$Swell = as.character(Plankton$Swell)
if(Sample == "Y"){Plankton$Sample = "Y"}
if(Sample == "N"){Plankton$Sample = "N"}
#get CTD data from Plankton
SurveyData = read_csv("Plan Data.csv")
SurveyData$StartDate = as.Date(SurveyData$Date, format = "%d/%m/%Y")
if(!is.na(first(Plankton$CTD_ID))){
CTDData = read_csv(paste0(Plankton$CTD_ID, ".csv"))
CTDData = CTDData %>%
dplyr::select(Pressure = "Pressure (Decibar)", Depth = "Depth (Meter)", Temperature = "Temperature (Celsius)",	Conductivity = "Conductivity (MicroSiemens per Centimeter)", Specific_conductance = "Specific conductance (MicroSiemens per Centimeter)",
Salinity = "Salinity (Practical Salinity Scale)", Sound_velocity = "Sound velocity (Meters per Second)", Density = "Density (Kilograms per Cubic Meter)")
CTDData = CTDData %>%
mutate(plankton_ID = paste0(first(Plankton$Set_Number), "/", last(Plankton$Set_Number)),
ground = surv2,
id = first(Plankton$CTD_ID),
Date = first(SurveyData$StartDate),
Lat = first(Plankton$CTD_Lat),
Lon = first(Plankton$CTD_Lon),
Year = first(year),
Survey = first(surv.no))
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data"))
CTDRaw = read_csv("CTD_Raw.csv")
CTDData$Year = as.numeric(CTDData$Year)
CTDData$Survey = as.numeric(CTDData$Survey)
CTDTotal = full_join(CTDRaw, CTDData)
Plankton = Plankton %>%
mutate(AvgTemp = mean(CTDData$Temperature),
AvgSalinity = mean(CTDData$Salinity))
}
if(is.na(first(Plankton$CTD_ID))){
Plankton = Plankton %>%
mutate(AvgTemp = NA,
AvgSalinity = NA)
}
larv = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/Larval Measurements.csv"))
arc = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Source Data/Larval Data/ARC Data.csv"))
arc = arc %>% dplyr::select(id, Larvae_Count, Notes)
survey = read_csv(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/Survey Data.csv"))
survey = survey %>% mutate(Ground = substr(id,1,2))
larv = left_join(larv, arc, by="id")
larv = left_join(larv, survey)
larv = larv %>% dplyr::select(Ground, id, Date, Survey.No, No_jars, Lengthmm, Condition, Yolk_sac, Yolk_sac_length, Preservative, ARC_Count=Larvae_Count, ARC_Notes=Notes, Lon1, Lat1, Lon2, Lat2, TowTime, AvgTowDepth, MaxTowDepth, CTDAvgTemp=AvgTemp, CTDAvgSalinity=AvgSalinity, Volume, Month, Year, Day)
larv$Date = dmy(larv$Date)
larv$Survey.No = as.factor(larv$Survey.No)
larv$Year = as.factor(larv$Year)
larv$category =  with(larv, ifelse(larv$Lengthmm < 8 , 1,
ifelse(larv$Lengthmm < 13 & larv$Lengthmm >= 8, 2,
ifelse(larv$Lengthmm >= 13  & larv$Lengthmm < 18, 3,
ifelse(larv$Lengthmm > 17 & larv$Lengthmm <= 27, 4, 5)))))
larv$category = as.factor(larv$category)
larv$hatchDate = larv$Date - 10 #incubation duration of 10 days
larv$hatchDate = ymd(larv$hatchDate)
#Calculating SE/mean/min/max of larval measurements
larv <- larv %>%
group_by(id, Year, Date) %>%
mutate(SD = sd(Lengthmm),
MinLength = min(Lengthmm),
MaxLength = max(Lengthmm),
MeanLength = mean(Lengthmm),
Abundance = length(Lengthmm),
X = ((Lon1 + Lon2)/2),
Y = ((Lat1 + Lat2)/2)) %>%
ungroup()
larvsummary <- larv %>% group_by(Ground, id, Year) %>%
summarize(MinLength = mean(MinLength, na.rm = TRUE),
MaxLength = mean(MaxLength, na.rm = TRUE),
MeanLength = mean(MeanLength, na.rm = TRUE),
SD = mean(SD, na.rm = TRUE),
Abundance = length(Lengthmm)) %>%
mutate(SE = SD/sqrt(Abundance))
surveysummary = survey %>% dplyr::select(Ground, Survey.No, Year) %>% group_by(Ground, Survey.No, Year) %>% summarize(Survey.No = mean(Survey.No), Year = mean(Year))
surveysummary$Year = as.factor(surveysummary$Year)
surveysummary$Survey.No = as.factor(surveysummary$Survey.No)
larvsummary = left_join(surveysummary, larvsummary)
## Removed write.csv portion of code.
larv = larv %>%
mutate(Larv_per_jar = Abundance/No_jars) %>%
mutate(Volume = ifelse(Volume < 0.01, NA, Volume)) %>%
mutate(Density = Larv_per_jar/Volume)
larv = larv %>% group_by(Year) %>%
mutate(DayDiff = last(Julian)-Julian) %>%
mutate(LastLength = ifelse(DayDiff == 0, Lengthmm, ((DayDiff*0.24)+Lengthmm)))
?length
View(larv)
Abundance <- aggregate(Lengthmm~id, larv, length)
View(Abundance)
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$Volume[is.na(Larval$Volume)] <- 0
Larval$Density[is.na(Larval$Density)] <- 0
Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
Larval$TowTime[is.na(Larval$TowTime)] <- 0
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
Larval$AgeInDays <- ((Larval$Lengthmm - 5)/0.24)
Larval$SpawnDate <- Larval$Date-Larval$AgeInDays
LarvalA <- select(Larval, id, Date, Survey.No, Abundance, Density, Volume, TowTime, AvgTowDepth)
MeanAgeInDays <- aggregate(AgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
MinDateOfSpawn <- aggregate(SpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
MaxDateOfSpawn <- aggregate(SpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
LarvalB <- merge(MeanAgeInDays, MinDateOfSpawn)
LarvalC <- merge(LarvalB, MaxDateOfSpawn)
LarvalC <- merge(LarvalA, LarvalC)
LarvalC <- unique(LarvalC)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
LarvalC$Density[is.na(LarvalC$Density)] <- 0
LarvalC$AvgTowDepth[is.na(LarvalC$AvgTowDepth)] <- 0
LarvalC$TowTime[is.na(LarvalC$TowTime)] <- 0
LarvalD <- merge(LarvalC, TowCoords)
#Plankton <- select(Plankton, id, TowTime, AvgTowDepth, Volume)
Plankton <- Plankton %>% drop_na(id)
Plankton$AvgTowDepth[is.na(Plankton$AvgTowDepth)] <- 0
Plankton2 <- select(Plankton, id, TowTime, AvgTowDepth)
Plankton2 <- Plankton2 %>% drop_na(TowTime)
MeanTowTime <- aggregate(TowTime~id, Plankton2, mean)
#Left in because this should update the tow time with means
LarvalE <- merge(LarvalD, MeanTowTime)
Volume <- aggregate(Volume~id, Larval, mean)
LarvalF <- merge(LarvalE, Volume)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Density", "Preservative", "TowTime", "MeanLength", "Volume")
View(LarvalSum)
LarvalSum <- merge(LarvalSum, LarvalF)
LarvalSum <- unique(LarvalSum)
LarvalSum[LarvalSum == 0] <- NA
write.csv(LarvalSum,"C:/Users/herri/Documents/GitHub/HerringScience.github.io//Main Data/LarvalSum.csv" )
View(LarvalSum)
print(ggplot(LarvalGB, aes(x = Date, y = Abundance, colour = id)) +
geom_point())
#Import all packages, CTD data, and land data
rm(list = ls())
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI = filter(Larval, Ground == "SI")
LarvalSum = read_csv("LarvalSum.csv")
LarvalSum$Year <- as.factor(LarvalSum$Year)
LarvalSB = Larval %>% filter(Ground == "SB")
print(ggplot(LarvalSB, aes(x = Date, y = Abundance, colour = id)) +
geom_point())
LarvalGB = Larval %>% filter(Ground == "GB")
print(ggplot(LarvalGB, aes(x = Date, y = Abundance, colour = id)) +
geom_point())
LarvalSI = Larval %>% filter(Ground == "GB")
print(ggplot(LarvalGB, aes(x = Date, y = Abundance, colour = id)) +
geom_point())
print(ggplot(LarvalSB, aes(x=Date, y = Abundance, colour = id)))
print(ggplot(LarvalSB, aes(x=Date, y = Abundance, colour = id)) +
geom_point())
print(ggplot(LarvalSI, aes(x = Date, y = Abundance, colour = id))+
geom_point())
View(LarvalSB)
View(LarvalSum)
View(LarvalSum)
View(LarvalSum)
rm(list = ls())
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(ggplot2)
library(patchwork)
library(scales)
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
LarvalSI = filter(Larval, Ground == "SI")
LarvalSum = read_csv("LarvalSum.csv")
LarvalSum$Year <- as.factor(LarvalSum$Year)
LarvalSI = LarvalSum %>% filter(Ground == "SI")
#Larval Data
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
X <- Larval$Lengthmm
View(Larval)
LarvalFormaline <- Larval %>% subset(Preservative == "4% formalin")
View(LarvalFormaline)
LarvalAlcohol <- Larval %>% subset(Preservative == "70% Alcohol")
X <- LarvalAlcohol$Lengthmm
LarvalAlcohol$LengthAdjustment <- (0.532 + 0.989*X)
View(LarvalAlcohol)
LarvalFormalin <- Larval %>% subset(Preservative == "4% formalin")
X <- LarvalFormalin$Lengthmm
LarvalFormalin$LengthAdjustment <- 0.984 + 0.993* X
View(LarvalFormalin)
if(Larval$Preservative == "4% formalin") {
X <- Larval$Lengthmm
Larval$LengthAdjustment <- (0.984 + 0.993* X)
}
ifelse(Larval$Preservative == "4% formalin") {
ifelse(Larval$Preservative == "4% formalin")
X <- Larval$Lengthmm
ifelse(Larval$Preservative == "4% formalin")
Larval$LengthAdjustment <- (0.984 + 0.993* X)
if(Larval$Preservative == "4% formalin")
Larval$LengthAdjustment <- (0.984 + 0.993* X)
if(Larval$Preservative == "4% formalin") {
Larval$LengthAdjustment <- (0.984 + 0.993* X)
}
?ifelse
ifelse(Larval$Preservative == "4% formalin",
Larval$LengthAdjustment <- (0.984 + 0.993* X))
ifelse(Larval$Preservative == "4% formalin",
Larval$LengthAdjustment <- (0.984 + 0.993* X), NA)
View(Larval)
rm(list = ls())
Larval = read_csv("Full Larval.csv")
Larval$Date <- lubridate::ymd(Larval$Date)
Larval <- dplyr::arrange(Larval, Date)
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Larval Summary Table
LarvalSum = read_csv("LarvalSum.csv")
LarvalSum$Year <- as.factor(LarvalSum$Year)
X <- Larval$Lengthmm
ifelse(Larval$Preservative == "4% formalin",
Larval$LengthAdjustment <- (0.984 + 0.993* X), NA)
View(Larval)
ifelse(Larval$Preservative == "4% formalin",
Larval$LengthAdjustment <- (0.984 + 0.993* X), 0)
View(Larval)
Larval$LengthAdjustment = with(Laral, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* X),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*X),
ifelse(Larval$Preservative = "NA", NA,
Larval$LengthAdjustment = with(Laral, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* X),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*X),
ifelse(Larval$Preservative == "NA", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA)))))
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* X),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*X),
ifelse(Larval$Preservative == "NA", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA)))))
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* X),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*X),
ifelse(Larval$Preservative == "NA", 0,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", 0)))))
Larval$Preservative[is.na(Larval$Preservative)] <- "Unknown"
View(Larval)
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* X),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*X),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA)))))
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* X),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*X),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
View(Larval)
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* Larval$Lengthmm),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*Larval$Lengthmm),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
View(Larval)
rm(list = ls())
#Import all packages, CTD data, and land data
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
library(cli)
library(lubridate)
library(reprex)
library(tidyverse)
library(geosphere)
library(reshape2)
library(moderndive)
library(skimr)
library(ggridges)
#library(weathercan)
library(GGally)
library(psych)
library(raster)
library(PBSmapping)
#library(rgeos)
library(sf)
library(terra)
library(knitr)
library(kableExtra)
library(grid)
library(gridExtra)
library(cowplot)
library(DT)
library(dygraphs)
library(leaflet)
library(rmapshaper)
library(plotly)
library(mapproj)
library(oce) #new CTD Data package
library(ggrepel)
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* Larval$Lengthmm),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*Larval$Lengthmm),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
# 0 is NA in these categories to allow for other data to be pulled.
Larval$Volume[is.na(Larval$Volume)] <- 0
Larval$Density[is.na(Larval$Density)] <- 0
Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
Larval$TowTime[is.na(Larval$TowTime)] <- 0
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
Larval$AdjustedAgeInDays <- ((Larval$LengthAdjustment - 5)/0.24)
Larval$AdjustedSpawnDate <- Larval$Date-Larval$AdjustedAgeInDays
LarvalA <- select(Larval, id, Date, Survey.No, Abundance, Density, Volume, TowTime, AvgTowDepth, AdjustedAgeInDays, AdjustedSpawnDate)
View(LarvalA)
LarvalA <- select(Larval, id, Date, Survey.No, Abundance, Density, Volume, TowTime, AvgTowDepth, LengthAdjustment, AdjustedAgeInDays, AdjustedSpawnDate)
View(LarvalA)
LarvalB <- merge(AdjustedMeanAgeInDays, AdjustedMinDateOfSpawn)
AdjustedMeanAgeInDays <- aggregate(AdjustedAgeInDays~id, Larval, mean)
colnames(MeanAgeInDays)[2]<- "MeanAgeInDays"
AdjustedMinDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, min)
colnames(MinDateOfSpawn)[2] <- "MinDateOfSpawn"
AdjustedMaxDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, max)
colnames(MaxDateOfSpawn)[2] <- "MaxDateOfSpawn"
AdjustedMeanAgeInDays <- aggregate(AdjustedAgeInDays~id, Larval, mean)
colnames(AdjustedMeanAgeInDays)[2]<- "AdjustedMeanAgeInDays"
AdjustedMinDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, min)
colnames(AdjustedMinDateOfSpawn)[2] <- "AdjustedMinDateOfSpawn"
AdjustedMaxDateOfSpawn <- aggregate(AdjustedSpawnDate~id, Larval, max)
colnames(AdjustedMaxDateOfSpawn)[2] <- "AdjustedMaxDateOfSpawn"
LarvalB <- merge(AdjustedMeanAgeInDays, AdjustedMinDateOfSpawn)
LarvalC <- merge(LarvalB, AdjustedMaxDateOfSpawn)
LarvalC <- merge(LarvalA, LarvalC)
LarvalC <- unique(LarvalC)
View(LarvalC)
StartLat <- aggregate(Lat1~id, Plankton, mean)
StartLon <- aggregate(Lon1~id, Plankton, mean)
StartCoords <- merge(StartLat, StartLon)
EndLat <- aggregate(Lat2~id, Plankton, mean)
EndLon <- aggregate(Lon2~id, Plankton, mean)
EndCoords <- merge(EndLat, EndLon)
TowCoords <- merge(StartCoords, EndCoords)
LarvalC$Density[is.na(LarvalC$Density)] <- 0
LarvalC$AvgTowDepth[is.na(LarvalC$AvgTowDepth)] <- 0
LarvalC$TowTime[is.na(LarvalC$TowTime)] <- 0
LarvalD <- merge(LarvalC, TowCoords)
#Plankton <- select(Plankton, id, TowTime, AvgTowDepth, Volume)
Plankton <- Plankton %>% drop_na(id)
Plankton$AvgTowDepth[is.na(Plankton$AvgTowDepth)] <- 0
Plankton2 <- select(Plankton, id, TowTime, AvgTowDepth)
Plankton2 <- Plankton2 %>% drop_na(TowTime)
MeanTowTime <- aggregate(TowTime~id, Plankton2, mean)
#Left in because this should update the tow time with means
LarvalE <- merge(LarvalD, MeanTowTime)
Volume <- aggregate(Volume~id, Larval, mean)
LarvalF <- merge(LarvalE, Volume)
LarvalSum <- Larval %>% select("Ground", "Year", "id", "Survey.No", "Abundance", "Density", "Preservative", "TowTime", "MeanLength", "Volume")
LarvalSum <- merge(LarvalSum, LarvalF)
LarvalSum <- unique(LarvalSum)
LarvalSum[LarvalSum == 0] <- NA
View(LarvalSum)
LarvalB <- merge(AdjustedMeanAgeInDays, AdjustedMinDateOfSpawn)
LarvalC <- merge(LarvalB, AdjustedMaxDateOfSpawn)
View(Larval)
rm(list = ls())
#Packages
setwd(paste0("C:/Users/", Sys.info()[7],"/Documents/GitHub/HerringScience.github.io/Main Data/"))
#Larval Data
Larval <- read_csv("Full Larval.csv")
Larval$Year <- as.factor(Larval$Year)
Larval$category <- as.factor(Larval$category)
Larval$Survey.No <- as.factor(Larval$Survey.No)
#Plankton Data
Plankton <- read_csv("C:/Users/herri/Documents/GitHub/HerringScience.github.io/Source Data/planktonsamplingData.csv")
Larval$LengthAdjustment = with(Larval, ifelse(Larval$Preservative == "4% formalin", (0.984 + 0.993* Larval$Lengthmm),
ifelse(Larval$Preservative == "70% Alcohol", (0.532 + 0.989*Larval$Lengthmm),
ifelse(Larval$Preservative == "Unknown", NA,
ifelse(Larval$Preservative == "70% Alcohol (1) 4% Formalin (1)", NA, NA)))))
# 0 is NA in these categories to allow for other data to be pulled.
Larval$Volume[is.na(Larval$Volume)] <- 0
Larval$Density[is.na(Larval$Density)] <- 0
Larval$AvgTowDepth[is.na(Larval$AvgTowDepth)] <- 0
Larval$TowTime[is.na(Larval$TowTime)] <- 0
Plankton$TowTime[is.na(Plankton$TowTime)] <- 0
Larval$AdjustedAgeInDays <- ((Larval$LengthAdjustment - 5)/0.24)
Larval$AdjustedSpawnDate <- Larval$Date-Larval$AdjustedAgeInDays
Larval$AdjustedMeanAgeInDays <- aggregate(Larval$AdjustedAgeInDays~id, Larval, mean)
